{"pageProps":{"props":{"mdxPath":"guide/content/BasicAlgorithm/sorting/sorting.mdx","content":[["guide/content/BasicAlgorithm/sorting/sorting.mdx",{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    br: \"br\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Refcode, Theorem} = _components;\n  if (!Refcode) _missingMdxReference(\"Refcode\", true);\n  if (!Theorem) _missingMdxReference(\"Theorem\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      refId: \"何謂排序？\",\n      children: \"何謂排序？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"日常生活中，排序的例子隨處可見。想像你今天被老師指派幫忙收全班的考卷，而老師為了方便，還請你幫忙把考卷照大家的座號從小到大排好，這時候你會怎麼做呢？如果全班只有 40 個人倒還好，但如果你得處理全校 800 個人的考卷呢？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這種將一堆資料「從小到大」排好的動作就稱作「排序」，而當資料量龐大的時候，排序演算法的重要性就出現了。由於排序實在是太常用到，也會有各種千奇百怪的場合需要應用，也因此資訊科學家們會設計出各式各樣的排序演算法。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"以下我們就來一一介紹，並假設資料們存在 \", _jsx(_components.code, {\n        children: \"a[1]\"\n      }), \" 到 \", _jsx(_components.code, {\n        children: \"a[n]\"\n      }), \" 之間。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"選擇排序法（Selection Sort）\",\n      children: \"選擇排序法（Selection Sort）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"選擇排序法在做的事情非常直觀：每次找到座號最小的考卷，把他放在前面。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"寫成程式碼會是什麼樣子的呢？\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void selection_sort(int a[], int n) {\\n    for (int i = 1; i < n; ++i) {\\n        // 欲選出第 i 小的元素，此時 a[i]~a[n] 還沒排序好\\n        int min_pos = i; // 預設 a[i] 是最小的數字\\n        for (int j = i + 1; j <= n; ++j) {\\n            if (a[min_pos] > a[j]) {\\n                // 發現更小的數字\\n                min_pos = j;\\n            }\\n        }\\n        if (min_pos != i) { \\n            // 交換兩個位置上的數字\\n            int tmp = a[min_pos];\\n            a[min_pos] = a[i];\\n            a[i] = tmp;\\n        }\\n    }\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"選擇排序法（Selection Sort）-時間複雜度\",\n      children: \"時間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"由於需要找 $n$ 次最小的數字，每次花 $O(n)$ 找到最小的數字在哪，所以是 $O(n^2)$。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"選擇排序法（Selection Sort）-空間複雜度\",\n      children: \"空間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"頂多額外開幾個變數而已，因此是 $O(1)$。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"插入排序法（Insertion Sort）\",\n      children: \"插入排序法（Insertion Sort）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"插入排序法的想法也是另一方面的直觀：不妨一張一張考卷拿進來排好，每次拿一張考卷進來時插入到定位就好！\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"寫成程式碼會是什麼樣子的呢？\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void insertion_sort(int a[], int n) {\\n    for (int i = 1; i <= n; ++i) {\\n        // 欲插入第 i 個數字，此時 a[1]~a[i-1] 已經排序好了\\n        /* 注意到此時，第 i 個數字在 a[i]，因此我們可以先檢查 a[i] 跟 a[i-1] 的順序\\n           是不是相反的，若相反則交換兩個數字，再檢查 a[i-1] 和 a[i-2]......\\n           直到順序正常，就可以停止了 */\\n        for (int j = i; j > 1; --j) {\\n            if (a[j - 1] > a[j]) {\\n                // 順序相反，需要交換兩個位置上的數字\\n                int tmp = a[j - 1];\\n                a[j - 1] = a[j];\\n                a[j] = tmp;\\n            }\\n            else {\\n                // 順序正確，數字已插入到定位\\n                break;\\n            }\\n        }\\n    }\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"插入排序法（Insertion Sort）-時間複雜度\",\n      children: \"時間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"由於需要插入 $n$ 個數字，每次最慘花 $O(n)$ 將數字換到最底部，所以最差是 $O(n^2)$。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但最好的情況下，可能每次插入都跑沒多久就停了，例如在序列本身就已經排序好的情況下插入排序法的時間複雜度可以達到 $O(n)$！\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"插入排序法（Insertion Sort）-空間複雜度\",\n      children: \"空間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"頂多額外開幾個變數而已，因此是 $O(1)$。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"泡沫排序法（Bubble Sort）\",\n      children: \"泡沫排序法（Bubble Sort）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"泡沫排序法的想法比上面兩個稍微特殊一點，他不斷檢查序列中是否有「相鄰順序相反」的兩個數字，如果有，就把他們交換，重複執行直到找不到這樣的相鄰對為止。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"直接看程式碼可能會比較清楚：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void bubble_sort(int a[], int n) {\\n    for (int i = 1; i < n; ++i) {\\n        // 循環 n-1 遍\\n        for (int j = 1; j < n - i + 1; ++j) {\\n            if (a[j] > a[j + 1]) { \\n                // 順序相反，需要交換兩個位置上的數字\\n                int tmp = a[j];\\n                a[j] = a[j + 1];\\n                a[j + 1] = tmp;\\n            }\\n        }\\n    }\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"這裡程式碼可能會有幾個不好懂的地方，首先是為什麼只需要循環 $n-1$ 遍呢？理由是因為每次循環過一遍之後，可以想像最大的數字肯定會跑到序列的最後面，也因此第二遍循環可以當作只需要排序 \", _jsx(_components.code, {\n        children: \"a[1]\"\n      }), \" 到 \", _jsx(_components.code, {\n        children: \"a[n-1]\"\n      }), \"；第三遍就只需要排序 \", _jsx(_components.code, {\n        children: \"a[1]\"\n      }), \" 到 \", _jsx(_components.code, {\n        children: \"a[n-2]\"\n      }), \"……，而到了第 $n-1$ 個循環結束後，只剩下 \", _jsx(_components.code, {\n        children: \"a[1]\"\n      }), \" 需要排序，一個元素當然直接就排好，整個排序演算法也就結束了。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"這同時也解釋了為什麼第 $i$ 次循環我們只考慮 \", _jsx(_components.code, {\n        children: \"a[1]\"\n      }), \" 到 \", _jsx(_components.code, {\n        children: \"a[n-i+1]\"\n      }), \"，也就是上述程式碼第 4 行的終止條件。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"那為什麼他叫做泡沫排序法呢？緣由是命名者認為數字們會經由交換慢慢的「浮」到序列正確的位置XD\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"泡沫排序法（Bubble Sort）-時間複雜度\",\n      children: \"時間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"由於循環 $n-1$ 次，每次花費 $O(n)$ 掃視過一遍整個序列，因此是 $O(n^2)$。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"泡沫排序法（Bubble Sort）-空間複雜度\",\n      children: \"空間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"頂多額外開幾個變數而已，因此是 $O(1)$。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"計數排序法（Counting Sort）\",\n      children: \"計數排序法（Counting Sort）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"計數排序法的想法特別單純，如果我要排的資料都是介在 $0\\\\sim C$ 之間的數字，那是不是直接數每個數字有幾個，再一口氣掃過 $0\\\\sim C$ 把對應的數字個數印出來就好了？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"直接來看看程式碼會是什麼樣子的：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void counting_sort(int a[], int n) {\\n    static int cnt[C + 1]; // 計數用的陣列\\n    for (int i = 1; i <= n; ++i) {\\n        ++cnt[a[i]];\\n    }\\n    int current = 0; // 現在排到第幾個位置\\n    for (int i = 0; i <= C; ++i)\\n        while (cnt[i] > 0) {\\n            // 這個數字還有剩\\n            a[++current] = i;\\n            --cnt[i];\\n        }\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"從 $0$ 往上掃到 $C$ 的過程中，每次看 \", _jsx(_components.code, {\n        children: \"cnt[i]\"\n      }), \" 有多少，推對應這麼多個數字回原陣列就好了！\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"計數排序法（Counting Sort）-時間複雜度\",\n      children: \"時間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"每個數字都只需要計數一次，接下來就是遍歷所有的數字一遍後按照個數推入數字，因此是 $O(n+C)$。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"計數排序法（Counting Sort）-空間複雜度\",\n      children: \"空間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這次我們需要一個額外計數的陣列，因此是 $O(C)$。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"計數排序法（Counting Sort）-進階使用方法\",\n      children: \"進階使用方法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果讀者已經了解過「前綴和」這個技巧的意義的話，可以參考看看計數排序法一個很有趣的應用。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"一般的計數排序法只排序「數字」，但回到排序考卷的狀況，每張考卷可不是只有分數，還有名字，總不能草草把「分數的數字們」排序好就交給老師吧？名字也必須跟著分數走！\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這種雖然是排序數字但每個數字又「攜帶著一些額外物件」的問題同樣還是能用計數排序法解決，想法是預先知道「每個數字的尾端」會在哪裡，再倒著把他們從這個尾端放回來就好。而這個「尾端」，其實就是小於等於自己數字的所有數字出現次數，也因此只需要一個前綴和就能搞定。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"struct Data {\\n    int key;\\n    Custom_Type something_else;\\n};\\n\\nvoid advance_counting_sort(Data a[], int n) {\\n    static int cnt[C + 1]; // 計數用的陣列\\n    static Data result[N + 1];\\n    for (int i = 1; i <= n; ++i) // 計數\\n        ++cnt[a[i].key];\\n    for (int i = 1; i <= C; ++i) // 前綴和\\n        cnt[i] += cnt[i - 1];\\n    for (int i = n; i >= 1; --i) // 從每個數字的尾端開始往前放\\n        result[cnt[a[i].key]--] = a[i];\\n    for (int i = 1; i <= n; ++i)\\n        a[i] = result[i];\\n    for (int i = 0; i <= C; ++i) // 清空計數陣列\\n        cnt[i] = 0;\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"至於為何刻意要從尾端倒著放回來，相信讀者可以從上述的實作感受到他的簡潔性。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"基數排序法（Radix Sort）\",\n      children: \"基數排序法（Radix Sort）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"考卷的分數大多數都落在 $0\\\\sim 99$ 之間，如果先對十位數排序，每個十位數內部是不是就省事多了呢？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但倘若今天分數介在 $0\\\\sim 999$ 之間，這時候先對百位數排序、每個百位數內部又要對十位數排序、每個內部的十位數又要對個位數排序……那 $0\\\\sim 9999$ 呢？如果有 $k$ 位數呢？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"好像越來越麻煩了！基數排序法的想法雖然是從這裡出發，但他換了個角度思考——不妨我們先對個位數排序、再對十位數排序……最後才對最大的第 $k$ 個位數排序。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"聽起來有點奇怪？讓我們直接看程式碼。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void radix_sort(int a[], int n) {\\n    static int radix[10][N + 1], radix_cnt[10];\\n    int ten = 1;\\n    for (int i = 0; i < k; ++i) {\\n        // 對第 i 個位數排序\\n        for (int j = 0; j < 10; ++j) {\\n            // 重設每個存數字陣列的計數器\\n            radix_cnt[j] = 0;\\n        }\\n        for (int j = 1; j <= n; ++j) {\\n            // a[j] 除以 10 的 i 次方後，除以 10 的餘數就是第 i 個位數的值\\n            int number = a[j] / ten % 10;\\n            radix[number][++radix_cnt[number]] = a[j];\\n        }\\n        int current = 0;\\n        for (int j = 0; j < 10; ++j) {\\n            // 把第 i 個位數是 j 的數字拿出來\\n            for (int t = 1; t <= radix_cnt[j]; ++t) {\\n                a[++current] = radix[j][t];\\n            }\\n        }\\n        // 刻意維護 ten，讓 ten 在第 i 輪的時候是 10 的 i 次方\\n        ten *= 10;\\n    }\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"讓我們想像兩位數的情況\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"第一輪先把數字照個位數排好\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"對於第二輪，注意到我們是照著個位數排好的順序在把東西推進 \", _jsx(_components.code, {\n          children: \"radix\"\n        }), \" 裡面的\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"也就是說，光看 \", _jsx(_components.code, {\n          children: \"radix[j]\"\n        }), \" 內部的數字，順序上也會是照著個位數排好的！\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"同樣的情況可以推廣到共 $k$ 個位數，這裡就交給讀者多想一下了。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"基數排序法（Radix Sort）-時間複雜度\",\n      children: \"時間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"當最大的數不超過 $10^k$ 時，總共排 $k$ 輪，每次 $O(n)$，因此總共的時間複雜度為 $O(k\\\\cdot n)$。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"基數排序法（Radix Sort）-空間複雜度\",\n      children: \"空間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"由於需要開 $10$ 條陣列用來存數字，因此空間複雜度為 $O(10n)$。當然，在複雜度的世界裡，常數是可以省略的，所以我們也可以說是 $O(n)$；或更精確的說，若採用 $p$ 進位系統，則空間複雜度為 $O(p\\\\cdot n)$。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"基數排序法（Radix Sort）-優化\",\n      children: \"優化\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果搭配計數排序法中的進階使用方法，其實可以讓基數排序法的程式碼更加精簡！空間上可以從原本的 $O(p\\\\cdot n)$ 降至 $O(p + n)$，也可以獲得時間上不少的常數優化，供讀者自行練習。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"穩定？不穩定？\",\n      children: \"穩定？不穩定？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在眾多的排序演算法中，有一種分類方式叫做「穩定」，有些排序演算法會被分類成穩定的，有些則會被分類成不穩定的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"具體來說是什麼意思呢？先看定義。\"\n    }), \"\\n\", _jsxs(Theorem, {\n      type: \"definition\",\n      title: \"穩定排序\",\n      number: \"1\",\n      children: [_jsx(_components.p, {\n        children: \"一個排序演算法的穩定性（Stability）被定義為\"\n      }), _jsx(_components.p, {\n        children: \"對於兩筆資料，如果他們用來排序的數值一樣時，該演算法排序好的結果會讓這兩筆資料的順序與原輸入的順序相同。\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"假設我們今天排序這三張考卷：$\\\\{(80, 小美), (80, 小智), (60, 小明)\\\\}$。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這時候，單純對分數的排序結果有可能是以下兩種：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"$\\\\{(60, 小明), (80, 小美), (80, 小智)\\\\}$\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"$\\\\{(60, 小明), (80, 小智), (80, 小美)\\\\}$\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"這是因為我們在「比較兩筆資料」時只比較分數，所以同樣分數的人自然就有多種不同的結果。\", _jsx(_components.br, {}), \"\\n\", \"而能夠保證同樣分數的人在排序後依舊保持著原本輸入順序的演算法，就被稱為「穩定排序演算法」。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我們上述的五個演算法，若要分類的話就是\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"穩定的：插入排序法、泡沫排序法、計數排序法、基數排序法\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"不穩定的：選擇排序法\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"讀者可以試著複習一下每個演算法，看看他們是不是真的符合上述的分類。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"不過實際上，穩不穩定還是全看實作之後的樣子，就好比如果我們讓犧牲額外 $O(n)$ 的空間來讓選擇排序法可以放數字在新的地方的話，就可以保持順序了；好比如果計數排序法的「進階使用方法」中，倒數第二個迴圈不要倒著跑，那最終的結果就不能保持順序了！（實際上同樣 \", _jsx(_components.code, {\n        children: \"key\"\n      }), \" 值的資料會反過來排）\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"基於比較的排序演算法\",\n      children: \"基於比較的排序演算法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"仔細一看上述五個演算法，後兩個（計數、基數）好像都是利用數字的特性在排序的？這樣會不會感覺有點偷吃步啊？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"實際上資訊科學家為了分辨真正能夠推廣到最一般情況的排序問題，便給出了一個最一般的限制：我們只能透過不斷詢問兩筆資料的大小關係來進行排序！\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"舉個例子，常常有的時候很多資料是無法被數值化的，但兩兩擺在一起卻又好像分得出優劣，就好像現在有好多家火鍋店，可能問你兩家，你大概能夠分得出你比較喜歡吃哪一家，但要你全部幫他們打分數，又變得好困難。這時候如果要將這些火鍋店按照你的喜好從最不喜歡到最喜歡排好的話，也只能兩家兩家問了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"也因此，排序演算法們又可以被分類成「是否基於比較」的兩種。當然，上述五個演算法的分類就是\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"基於比較：選擇排序法、插入排序法、泡沫排序法\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"不是基於比較：計數排序法、基數排序法\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"關於比較這件事，我們會在之後的章節講得更清楚一些。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"小結\",\n      children: \"小結\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"實際上，讀者如果上網去維基百科等地方查詢排序演算法，應該可以找到更多不同種類的排序演算法，筆者這裡介紹的只不過是最常用的幾種罷了。甚至因為排序實在是太經典的問題，還會有人為了有趣設計像是\", _jsx(_components.a, {\n        href: \"https://zh.wikipedia.org/zh-tw/%E8%87%AD%E7%9A%AE%E5%8C%A0%E6%8E%92%E5%BA%8F\",\n        children: \"臭皮匠排序\"\n      }), \"這種有趣的排序演算法。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"不過，也是因為排序太常用了，所以在比賽中我們通常都不用自己寫排序演算法，而是直接 call 內建可以在 $O(n\\\\log n)$ 的時間內排好 $n$ 筆資料的函式 \", _jsx(_components.code, {\n        children: \"std::sort\"\n      }), \"。我們會在未來的章節介紹他的用法。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"咦？那我們學上面那些 $O(n^2)$ 的演算法幹嘛？可能在遙遠的未來，就會知道了……\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"補充影片\",\n      children: \"補充影片\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果想要更了解上面那些演算法，可以看看下面這些補充影片\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"選擇排序法：\", _jsx(_components.a, {\n          href: \"https://www.youtube.com/watch?v=YIDPyXKdbbI\",\n          children: \"https://www.youtube.com/watch?v=YIDPyXKdbbI\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"插入排序法：\", _jsx(_components.a, {\n          href: \"https://www.youtube.com/watch?v=2Mx7vABODbk\",\n          children: \"https://www.youtube.com/watch?v=2Mx7vABODbk\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"泡沫排序法：\", _jsx(_components.a, {\n          href: \"https://www.youtube.com/watch?v=NwCHWRhL6QQ\",\n          children: \"https://www.youtube.com/watch?v=NwCHWRhL6QQ\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"大雜燴：\", _jsx(_components.a, {\n          href: \"https://www.youtube.com/watch?v=kPRA0W1kECg\",\n          children: \"https://www.youtube.com/watch?v=kPRA0W1kECg\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}]],"prereqs":[{"code":"BasicAlgorithm/complexity","text":"基礎演算法 / 複雜度"}],"sections":[{"text":"何謂排序？","depth":1,"code":"何謂排序？"},{"text":"選擇排序法（Selection Sort）","depth":1,"code":"選擇排序法（Selection Sort）"},{"text":"時間複雜度","depth":2,"code":"選擇排序法（Selection Sort）-時間複雜度"},{"text":"空間複雜度","depth":2,"code":"選擇排序法（Selection Sort）-空間複雜度"},{"text":"插入排序法（Insertion Sort）","depth":1,"code":"插入排序法（Insertion Sort）"},{"text":"時間複雜度","depth":2,"code":"插入排序法（Insertion Sort）-時間複雜度"},{"text":"空間複雜度","depth":2,"code":"插入排序法（Insertion Sort）-空間複雜度"},{"text":"泡沫排序法（Bubble Sort）","depth":1,"code":"泡沫排序法（Bubble Sort）"},{"text":"時間複雜度","depth":2,"code":"泡沫排序法（Bubble Sort）-時間複雜度"},{"text":"空間複雜度","depth":2,"code":"泡沫排序法（Bubble Sort）-空間複雜度"},{"text":"計數排序法（Counting Sort）","depth":1,"code":"計數排序法（Counting Sort）"},{"text":"時間複雜度","depth":2,"code":"計數排序法（Counting Sort）-時間複雜度"},{"text":"空間複雜度","depth":2,"code":"計數排序法（Counting Sort）-空間複雜度"},{"text":"進階使用方法","depth":2,"code":"計數排序法（Counting Sort）-進階使用方法"},{"text":"基數排序法（Radix Sort）","depth":1,"code":"基數排序法（Radix Sort）"},{"text":"時間複雜度","depth":2,"code":"基數排序法（Radix Sort）-時間複雜度"},{"text":"空間複雜度","depth":2,"code":"基數排序法（Radix Sort）-空間複雜度"},{"text":"優化","depth":2,"code":"基數排序法（Radix Sort）-優化"},{"text":"穩定？不穩定？","depth":1,"code":"穩定？不穩定？"},{"text":"基於比較的排序演算法","depth":1,"code":"基於比較的排序演算法"},{"text":"小結","depth":1,"code":"小結"},{"text":"補充影片","depth":1,"code":"補充影片"}],"previousArticle":{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"description":"","prerequisites":["BasicAlgorithm/intro"]}},"nextArticle":{"code":"BasicAlgorithm/algorithm_numeric","topicCode":"BasicAlgorithm","articleCode":"algorithm_numeric","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 標準函式庫 ── <algorithm> 與 <numeric>","articleDisplayTitle":"標準函式庫 ── <algorithm> 與 <numeric>","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/algorithm_numeric","topic":"BasicAlgorithm","article":"algorithm_numeric","title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"description":"介紹 STL <algorithm> 和 <numeric> 裡的幾個常用函式","prerequisites":["BasicAlgorithm/sorting"]}},"virtualArticle":{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},"topicStructure":[{"single":true,"title":"","topics":[{"code":"Guide","displayTitle":"網站簡介","articles":[{"code":"Guide/learning","topicCode":"Guide","articleCode":"learning","chapterCode":"I","fullDisplayTitle":"網站簡介 / 服用方法","articleDisplayTitle":"服用方法","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/learning","topic":"Guide","article":"learning","title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"description":"教大家怎麼看這份講義","prerequisites":[]}},{"code":"Guide/chapters","topicCode":"Guide","articleCode":"chapters","chapterCode":"I","fullDisplayTitle":"網站簡介 / 章節與主題","articleDisplayTitle":"章節與主題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/chapters","topic":"Guide","article":"chapters","title":"章節與主題","authors":["baluteshih"],"contributors":[],"description":"教大家什麼是章節與主題","prerequisites":["Guide/learning"]}},{"code":"Guide/problems","topicCode":"Guide","articleCode":"problems","chapterCode":"I","fullDisplayTitle":"網站簡介 / 習題","articleDisplayTitle":"習題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/problems","topic":"Guide","article":"problems","title":"習題","authors":["baluteshih"],"contributors":[],"description":"教大家這份講義的習題意義","prerequisites":["Guide/learning"]}},{"code":"Guide/math_symbol","topicCode":"Guide","articleCode":"math_symbol","chapterCode":"I","fullDisplayTitle":"網站簡介 / 基本數學符號","articleDisplayTitle":"基本數學符號","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/math_symbol","topic":"Guide","article":"math_symbol","title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"description":"介紹常見的數學符號","prerequisites":[]}},{"code":"Guide/language","topicCode":"Guide","articleCode":"language","chapterCode":"I","fullDisplayTitle":"網站簡介 / 語法學習資源","articleDisplayTitle":"語法學習資源","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/language","topic":"Guide","article":"language","title":"語法學習資源","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Guide/qa","topicCode":"Guide","articleCode":"qa","chapterCode":"I","fullDisplayTitle":"網站簡介 / NTUCPC Guide Q & A","articleDisplayTitle":"NTUCPC Guide Q & A","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/qa","topic":"Guide","article":"qa","title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":[]}}]}]},{"single":true,"title":"","topics":[{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/competitive_programming","topicCode":"Introduction","articleCode":"competitive_programming","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 資訊競賽介紹","articleDisplayTitle":"資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/competitive_programming","topic":"Introduction","article":"competitive_programming","title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Introduction/contests_type","topicCode":"Introduction","articleCode":"contests_type","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 比賽類型","articleDisplayTitle":"比賽類型","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/contests_type","topic":"Introduction","article":"contests_type","title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tw_contests","topicCode":"Introduction","articleCode":"tw_contests","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 台灣資訊競賽介紹","articleDisplayTitle":"台灣資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/tw_contests","topic":"Introduction","article":"tw_contests","title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}},{"code":"Introduction/online_judge","topicCode":"Introduction","articleCode":"online_judge","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 線上評測系統","articleDisplayTitle":"線上評測系統","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/online_judge","topic":"Introduction","article":"online_judge","title":"線上評測系統","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/resources","topicCode":"Introduction","articleCode":"resources","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 網路學習資源介紹","articleDisplayTitle":"網路學習資源介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/resources","topic":"Introduction","article":"resources","title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tactics","topicCode":"Introduction","articleCode":"tactics","chapterCode":"III","fullDisplayTitle":"資訊競賽介紹 / 比賽 + 練習策略","articleDisplayTitle":"比賽 + 練習策略","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"Introduction/tactics","topic":"Introduction","article":"tactics","title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}}]}]},{"single":true,"title":"","topics":[{"code":"Implementation","displayTitle":"實作技巧","articles":[{"code":"Implementation/basic_knowledge","topicCode":"Implementation","articleCode":"basic_knowledge","chapterCode":"II","fullDisplayTitle":"實作技巧 / 基本常識","articleDisplayTitle":"基本常識","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/basic_knowledge","topic":"Implementation","article":"basic_knowledge","title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"description":"講述一些競賽程式需要知道的最基本常識","prerequisites":["Introduction/online_judge"]}},{"code":"Implementation/input","topicCode":"Implementation","articleCode":"input","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見輸入類型","articleDisplayTitle":"常見輸入類型","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/input","topic":"Implementation","article":"input","title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的輸入格式","prerequisites":["Implementation/basic_knowledge"]}},{"code":"Implementation/reference","topicCode":"Implementation","articleCode":"reference","chapterCode":"II","fullDisplayTitle":"實作技巧 / Reference","articleDisplayTitle":"Reference","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/reference","topic":"Implementation","article":"reference","title":"Reference","authors":["baluteshih"],"contributors":[],"description":"Reference","prerequisites":[]}},{"code":"Implementation/compiler","topicCode":"Implementation","articleCode":"compiler","chapterCode":"II","fullDisplayTitle":"實作技巧 / 編譯器","articleDisplayTitle":"編譯器","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/compiler","topic":"Implementation","article":"compiler","title":"編譯器","authors":["WiwiHo"],"contributors":[],"description":"簡單介紹什麼是編譯器","prerequisites":[]}},{"code":"Implementation/error_message","topicCode":"Implementation","articleCode":"error_message","chapterCode":"II","fullDisplayTitle":"實作技巧 / 如何看錯誤訊息","articleDisplayTitle":"如何看錯誤訊息","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/error_message","topic":"Implementation","article":"error_message","title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"description":"介紹一些常見錯誤訊息的看法","prerequisites":["Implementation/compiler"]}},{"code":"Implementation/variable","topicCode":"Implementation","articleCode":"variable","chapterCode":"II","fullDisplayTitle":"實作技巧 / 全域、區域變數","articleDisplayTitle":"全域、區域變數","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/variable","topic":"Implementation","article":"variable","title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"description":"各種全域區域變數相關的事情","prerequisites":["Implementation/basic_knowledge","Implementation/reference","Implementation/compiler"]}},{"code":"Implementation/buglist","topicCode":"Implementation","articleCode":"buglist","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見錯誤列表","articleDisplayTitle":"常見錯誤列表","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/buglist","topic":"Implementation","article":"buglist","title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的錯誤","prerequisites":["Implementation/variable"]}},{"code":"Implementation/debug","topicCode":"Implementation","articleCode":"debug","chapterCode":null,"fullDisplayTitle":"實作技巧 / Debug","articleDisplayTitle":"Debug","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter ???","article":{"code":"Implementation/debug","topic":"Implementation","article":"debug","title":"Debug","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Implementation/buglist"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/intro","topicCode":"BasicAlgorithm","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/intro","topic":"BasicAlgorithm","article":"intro","title":"介紹","authors":["double"],"contributors":[],"description":"簡單介紹何謂演算法","prerequisites":["Introduction/competitive_programming"]}},{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},{"code":"BasicAlgorithm/algorithm_numeric","topicCode":"BasicAlgorithm","articleCode":"algorithm_numeric","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 標準函式庫 ── <algorithm> 與 <numeric>","articleDisplayTitle":"標準函式庫 ── <algorithm> 與 <numeric>","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/algorithm_numeric","topic":"BasicAlgorithm","article":"algorithm_numeric","title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"description":"介紹 STL <algorithm> 和 <numeric> 裡的幾個常用函式","prerequisites":["BasicAlgorithm/sorting"]}},{"code":"BasicAlgorithm/enumerate","topicCode":"BasicAlgorithm","articleCode":"enumerate","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 枚舉","articleDisplayTitle":"枚舉","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/enumerate","topic":"BasicAlgorithm","article":"enumerate","title":"枚舉","authors":["WiwiHo"],"contributors":[],"description":"簡單的枚舉技巧，不包含遞迴","prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/searching","topicCode":"BasicAlgorithm","articleCode":"searching","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 搜尋","articleDisplayTitle":"搜尋","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/searching","topic":"BasicAlgorithm","article":"searching","title":"搜尋","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/math_in_school","topicCode":"BasicAlgorithm","articleCode":"math_in_school","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 學校教的數學","articleDisplayTitle":"學校教的數學","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/math_in_school","topic":"BasicAlgorithm","article":"math_in_school","title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"description":"一些和基礎演算法設計技巧有關的課綱內數學問題，引導讀者從基礎數學發現演算法，並且訓練把人腦作法轉換成演算法的能力。","prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/recursion","topicCode":"BasicAlgorithm","articleCode":"recursion","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 遞迴","articleDisplayTitle":"遞迴","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/recursion","topic":"BasicAlgorithm","article":"recursion","title":"遞迴","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/partial_sum","topicCode":"BasicAlgorithm","articleCode":"partial_sum","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 前綴和與差分","articleDisplayTitle":"前綴和與差分","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/partial_sum","topic":"BasicAlgorithm","article":"partial_sum","title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/two_pointers","topicCode":"BasicAlgorithm","articleCode":"two_pointers","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 雙指標","articleDisplayTitle":"雙指標","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/two_pointers","topic":"BasicAlgorithm","article":"two_pointers","title":"雙指標","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/binary_search_answer","topicCode":"BasicAlgorithm","articleCode":"binary_search_answer","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 對答案二分搜","articleDisplayTitle":"對答案二分搜","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/binary_search_answer","topic":"BasicAlgorithm","article":"binary_search_answer","title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"description":"","prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"]}}]}]},{"single":true,"title":"","topics":[{"code":"GreedyAlgorithm","displayTitle":"貪心演算法","articles":[{"code":"GreedyAlgorithm/intuitive_greedy","topicCode":"GreedyAlgorithm","articleCode":"intuitive_greedy","chapterCode":"II","fullDisplayTitle":"貪心演算法 / 貪心法 I","articleDisplayTitle":"貪心法 I","topicDisplayTitle":"貪心演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"GreedyAlgorithm/intuitive_greedy","topic":"GreedyAlgorithm","article":"intuitive_greedy","title":"貪心法 I","authors":["baluteshih"],"contributors":[],"description":"生活中直覺的貪心題目","prerequisites":["BasicAlgorithm/algorithm_numeric"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/intro","topicCode":"BasicDataStructure","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/intro","topic":"BasicDataStructure","article":"intro","title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"description":"簡單介紹資料結構的概念","prerequisites":["Implementation/basic_knowledge"]}},{"code":"BasicDataStructure/vector","topicCode":"BasicDataStructure","articleCode":"vector","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 動態的陣列","articleDisplayTitle":"動態的陣列","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/vector","topic":"BasicDataStructure","article":"vector","title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicDataStructure/stack_queue_deque","topicCode":"BasicDataStructure","articleCode":"stack_queue_deque","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Stack、Queue 與 Deque","articleDisplayTitle":"Stack、Queue 與 Deque","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/stack_queue_deque","topic":"BasicDataStructure","article":"stack_queue_deque","title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/linked_list","topicCode":"BasicDataStructure","articleCode":"linked_list","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Linked List","articleDisplayTitle":"Linked List","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/linked_list","topic":"BasicDataStructure","article":"linked_list","title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/binary_tree","topicCode":"BasicDataStructure","articleCode":"binary_tree","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / 二元樹","articleDisplayTitle":"二元樹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/binary_tree","topic":"BasicDataStructure","article":"binary_tree","title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/linked_list","Implementation/reference"]}},{"code":"BasicDataStructure/heap","topicCode":"BasicDataStructure","articleCode":"heap","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Heap","articleDisplayTitle":"Heap","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/heap","topic":"BasicDataStructure","article":"heap","title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}},{"code":"BasicDataStructure/set_map","topicCode":"BasicDataStructure","articleCode":"set_map","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Set 與 Map","articleDisplayTitle":"Set 與 Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/set_map","topic":"BasicDataStructure","article":"set_map","title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/heap"]}},{"code":"BasicDataStructure/unordered","topicCode":"BasicDataStructure","articleCode":"unordered","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Unordered Set 與 Unordered Map","articleDisplayTitle":"Unordered Set 與 Unordered Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/unordered","topic":"BasicDataStructure","article":"unordered","title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/set_map"]}},{"code":"BasicDataStructure/iterator","topicCode":"BasicDataStructure","articleCode":"iterator","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Iterator","articleDisplayTitle":"Iterator","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/iterator","topic":"BasicDataStructure","article":"iterator","title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/intro"]}},{"code":"BasicDataStructure/binary_tree_and_stack","topicCode":"BasicDataStructure","articleCode":"binary_tree_and_stack","chapterCode":null,"fullDisplayTitle":"基礎資料結構 / 二元樹與 Stack","articleDisplayTitle":"二元樹與 Stack","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter ???","article":{"code":"BasicDataStructure/binary_tree_and_stack","topic":"BasicDataStructure","article":"binary_tree_and_stack","title":"二元樹與 Stack","authors":["8e7"],"contributors":["建中大講義團隊","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicMath","displayTitle":"基礎數學","articles":[{"code":"BasicMath/basicalgo","topicCode":"BasicMath","articleCode":"basicalgo","chapterCode":"III","fullDisplayTitle":"基礎數學 / 常用數學演算法","articleDisplayTitle":"常用數學演算法","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/basicalgo","topic":"BasicMath","article":"basicalgo","title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"description":"一些不太難的數學","prerequisites":["BasicAlgorithm/math_in_school"]}},{"code":"BasicMath/number_theory","topicCode":"BasicMath","articleCode":"number_theory","chapterCode":"III","fullDisplayTitle":"基礎數學 / 基礎數論","articleDisplayTitle":"基礎數論","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/number_theory","topic":"BasicMath","article":"number_theory","title":"基礎數論","authors":["WiwiHo"],"contributors":[],"description":"","prerequisites":["BasicMath/basicalgo"]}}]}]}],"chapterStructure":[{"code":"I","displayTitle":"Chapter I. 初來乍到","topics":[{"code":"Guide","displayTitle":"網站簡介","articles":[{"code":"Guide/learning","topicCode":"Guide","articleCode":"learning","chapterCode":"I","fullDisplayTitle":"網站簡介 / 服用方法","articleDisplayTitle":"服用方法","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/learning","topic":"Guide","article":"learning","title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"description":"教大家怎麼看這份講義","prerequisites":[]}},{"code":"Guide/chapters","topicCode":"Guide","articleCode":"chapters","chapterCode":"I","fullDisplayTitle":"網站簡介 / 章節與主題","articleDisplayTitle":"章節與主題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/chapters","topic":"Guide","article":"chapters","title":"章節與主題","authors":["baluteshih"],"contributors":[],"description":"教大家什麼是章節與主題","prerequisites":["Guide/learning"]}},{"code":"Guide/problems","topicCode":"Guide","articleCode":"problems","chapterCode":"I","fullDisplayTitle":"網站簡介 / 習題","articleDisplayTitle":"習題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/problems","topic":"Guide","article":"problems","title":"習題","authors":["baluteshih"],"contributors":[],"description":"教大家這份講義的習題意義","prerequisites":["Guide/learning"]}},{"code":"Guide/math_symbol","topicCode":"Guide","articleCode":"math_symbol","chapterCode":"I","fullDisplayTitle":"網站簡介 / 基本數學符號","articleDisplayTitle":"基本數學符號","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/math_symbol","topic":"Guide","article":"math_symbol","title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"description":"介紹常見的數學符號","prerequisites":[]}},{"code":"Guide/language","topicCode":"Guide","articleCode":"language","chapterCode":"I","fullDisplayTitle":"網站簡介 / 語法學習資源","articleDisplayTitle":"語法學習資源","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/language","topic":"Guide","article":"language","title":"語法學習資源","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Guide/qa","topicCode":"Guide","articleCode":"qa","chapterCode":"I","fullDisplayTitle":"網站簡介 / NTUCPC Guide Q & A","articleDisplayTitle":"NTUCPC Guide Q & A","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/qa","topic":"Guide","article":"qa","title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":[]}}]},{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/competitive_programming","topicCode":"Introduction","articleCode":"competitive_programming","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 資訊競賽介紹","articleDisplayTitle":"資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/competitive_programming","topic":"Introduction","article":"competitive_programming","title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Introduction/contests_type","topicCode":"Introduction","articleCode":"contests_type","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 比賽類型","articleDisplayTitle":"比賽類型","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/contests_type","topic":"Introduction","article":"contests_type","title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tw_contests","topicCode":"Introduction","articleCode":"tw_contests","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 台灣資訊競賽介紹","articleDisplayTitle":"台灣資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/tw_contests","topic":"Introduction","article":"tw_contests","title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}},{"code":"Introduction/online_judge","topicCode":"Introduction","articleCode":"online_judge","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 線上評測系統","articleDisplayTitle":"線上評測系統","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/online_judge","topic":"Introduction","article":"online_judge","title":"線上評測系統","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/resources","topicCode":"Introduction","articleCode":"resources","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 網路學習資源介紹","articleDisplayTitle":"網路學習資源介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/resources","topic":"Introduction","article":"resources","title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}}]}]},{"code":"II","displayTitle":"Chapter II. 新手上路","topics":[{"code":"Implementation","displayTitle":"實作技巧","articles":[{"code":"Implementation/basic_knowledge","topicCode":"Implementation","articleCode":"basic_knowledge","chapterCode":"II","fullDisplayTitle":"實作技巧 / 基本常識","articleDisplayTitle":"基本常識","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/basic_knowledge","topic":"Implementation","article":"basic_knowledge","title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"description":"講述一些競賽程式需要知道的最基本常識","prerequisites":["Introduction/online_judge"]}},{"code":"Implementation/input","topicCode":"Implementation","articleCode":"input","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見輸入類型","articleDisplayTitle":"常見輸入類型","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/input","topic":"Implementation","article":"input","title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的輸入格式","prerequisites":["Implementation/basic_knowledge"]}},{"code":"Implementation/reference","topicCode":"Implementation","articleCode":"reference","chapterCode":"II","fullDisplayTitle":"實作技巧 / Reference","articleDisplayTitle":"Reference","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/reference","topic":"Implementation","article":"reference","title":"Reference","authors":["baluteshih"],"contributors":[],"description":"Reference","prerequisites":[]}},{"code":"Implementation/compiler","topicCode":"Implementation","articleCode":"compiler","chapterCode":"II","fullDisplayTitle":"實作技巧 / 編譯器","articleDisplayTitle":"編譯器","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/compiler","topic":"Implementation","article":"compiler","title":"編譯器","authors":["WiwiHo"],"contributors":[],"description":"簡單介紹什麼是編譯器","prerequisites":[]}},{"code":"Implementation/error_message","topicCode":"Implementation","articleCode":"error_message","chapterCode":"II","fullDisplayTitle":"實作技巧 / 如何看錯誤訊息","articleDisplayTitle":"如何看錯誤訊息","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/error_message","topic":"Implementation","article":"error_message","title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"description":"介紹一些常見錯誤訊息的看法","prerequisites":["Implementation/compiler"]}},{"code":"Implementation/variable","topicCode":"Implementation","articleCode":"variable","chapterCode":"II","fullDisplayTitle":"實作技巧 / 全域、區域變數","articleDisplayTitle":"全域、區域變數","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/variable","topic":"Implementation","article":"variable","title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"description":"各種全域區域變數相關的事情","prerequisites":["Implementation/basic_knowledge","Implementation/reference","Implementation/compiler"]}},{"code":"Implementation/buglist","topicCode":"Implementation","articleCode":"buglist","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見錯誤列表","articleDisplayTitle":"常見錯誤列表","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/buglist","topic":"Implementation","article":"buglist","title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的錯誤","prerequisites":["Implementation/variable"]}}]},{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/intro","topicCode":"BasicAlgorithm","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/intro","topic":"BasicAlgorithm","article":"intro","title":"介紹","authors":["double"],"contributors":[],"description":"簡單介紹何謂演算法","prerequisites":["Introduction/competitive_programming"]}},{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},{"code":"BasicAlgorithm/algorithm_numeric","topicCode":"BasicAlgorithm","articleCode":"algorithm_numeric","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 標準函式庫 ── <algorithm> 與 <numeric>","articleDisplayTitle":"標準函式庫 ── <algorithm> 與 <numeric>","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/algorithm_numeric","topic":"BasicAlgorithm","article":"algorithm_numeric","title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"description":"介紹 STL <algorithm> 和 <numeric> 裡的幾個常用函式","prerequisites":["BasicAlgorithm/sorting"]}},{"code":"BasicAlgorithm/enumerate","topicCode":"BasicAlgorithm","articleCode":"enumerate","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 枚舉","articleDisplayTitle":"枚舉","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/enumerate","topic":"BasicAlgorithm","article":"enumerate","title":"枚舉","authors":["WiwiHo"],"contributors":[],"description":"簡單的枚舉技巧，不包含遞迴","prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/searching","topicCode":"BasicAlgorithm","articleCode":"searching","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 搜尋","articleDisplayTitle":"搜尋","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/searching","topic":"BasicAlgorithm","article":"searching","title":"搜尋","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/math_in_school","topicCode":"BasicAlgorithm","articleCode":"math_in_school","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 學校教的數學","articleDisplayTitle":"學校教的數學","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/math_in_school","topic":"BasicAlgorithm","article":"math_in_school","title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"description":"一些和基礎演算法設計技巧有關的課綱內數學問題，引導讀者從基礎數學發現演算法，並且訓練把人腦作法轉換成演算法的能力。","prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"]}}]},{"code":"GreedyAlgorithm","displayTitle":"貪心演算法","articles":[{"code":"GreedyAlgorithm/intuitive_greedy","topicCode":"GreedyAlgorithm","articleCode":"intuitive_greedy","chapterCode":"II","fullDisplayTitle":"貪心演算法 / 貪心法 I","articleDisplayTitle":"貪心法 I","topicDisplayTitle":"貪心演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"GreedyAlgorithm/intuitive_greedy","topic":"GreedyAlgorithm","article":"intuitive_greedy","title":"貪心法 I","authors":["baluteshih"],"contributors":[],"description":"生活中直覺的貪心題目","prerequisites":["BasicAlgorithm/algorithm_numeric"]}}]},{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/intro","topicCode":"BasicDataStructure","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/intro","topic":"BasicDataStructure","article":"intro","title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"description":"簡單介紹資料結構的概念","prerequisites":["Implementation/basic_knowledge"]}},{"code":"BasicDataStructure/vector","topicCode":"BasicDataStructure","articleCode":"vector","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 動態的陣列","articleDisplayTitle":"動態的陣列","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/vector","topic":"BasicDataStructure","article":"vector","title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicDataStructure/stack_queue_deque","topicCode":"BasicDataStructure","articleCode":"stack_queue_deque","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Stack、Queue 與 Deque","articleDisplayTitle":"Stack、Queue 與 Deque","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/stack_queue_deque","topic":"BasicDataStructure","article":"stack_queue_deque","title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/linked_list","topicCode":"BasicDataStructure","articleCode":"linked_list","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Linked List","articleDisplayTitle":"Linked List","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/linked_list","topic":"BasicDataStructure","article":"linked_list","title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}}]}]},{"code":"III","displayTitle":"Chapter III. 漸入佳境","topics":[{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/tactics","topicCode":"Introduction","articleCode":"tactics","chapterCode":"III","fullDisplayTitle":"資訊競賽介紹 / 比賽 + 練習策略","articleDisplayTitle":"比賽 + 練習策略","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"Introduction/tactics","topic":"Introduction","article":"tactics","title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}}]},{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/recursion","topicCode":"BasicAlgorithm","articleCode":"recursion","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 遞迴","articleDisplayTitle":"遞迴","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/recursion","topic":"BasicAlgorithm","article":"recursion","title":"遞迴","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/partial_sum","topicCode":"BasicAlgorithm","articleCode":"partial_sum","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 前綴和與差分","articleDisplayTitle":"前綴和與差分","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/partial_sum","topic":"BasicAlgorithm","article":"partial_sum","title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/two_pointers","topicCode":"BasicAlgorithm","articleCode":"two_pointers","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 雙指標","articleDisplayTitle":"雙指標","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/two_pointers","topic":"BasicAlgorithm","article":"two_pointers","title":"雙指標","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/binary_search_answer","topicCode":"BasicAlgorithm","articleCode":"binary_search_answer","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 對答案二分搜","articleDisplayTitle":"對答案二分搜","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/binary_search_answer","topic":"BasicAlgorithm","article":"binary_search_answer","title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"description":"","prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"]}}]},{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/binary_tree","topicCode":"BasicDataStructure","articleCode":"binary_tree","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / 二元樹","articleDisplayTitle":"二元樹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/binary_tree","topic":"BasicDataStructure","article":"binary_tree","title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/linked_list","Implementation/reference"]}},{"code":"BasicDataStructure/heap","topicCode":"BasicDataStructure","articleCode":"heap","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Heap","articleDisplayTitle":"Heap","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/heap","topic":"BasicDataStructure","article":"heap","title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}},{"code":"BasicDataStructure/set_map","topicCode":"BasicDataStructure","articleCode":"set_map","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Set 與 Map","articleDisplayTitle":"Set 與 Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/set_map","topic":"BasicDataStructure","article":"set_map","title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/heap"]}},{"code":"BasicDataStructure/unordered","topicCode":"BasicDataStructure","articleCode":"unordered","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Unordered Set 與 Unordered Map","articleDisplayTitle":"Unordered Set 與 Unordered Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/unordered","topic":"BasicDataStructure","article":"unordered","title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/set_map"]}},{"code":"BasicDataStructure/iterator","topicCode":"BasicDataStructure","articleCode":"iterator","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Iterator","articleDisplayTitle":"Iterator","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/iterator","topic":"BasicDataStructure","article":"iterator","title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/intro"]}}]},{"code":"BasicMath","displayTitle":"基礎數學","articles":[{"code":"BasicMath/basicalgo","topicCode":"BasicMath","articleCode":"basicalgo","chapterCode":"III","fullDisplayTitle":"基礎數學 / 常用數學演算法","articleDisplayTitle":"常用數學演算法","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/basicalgo","topic":"BasicMath","article":"basicalgo","title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"description":"一些不太難的數學","prerequisites":["BasicAlgorithm/math_in_school"]}},{"code":"BasicMath/number_theory","topicCode":"BasicMath","articleCode":"number_theory","chapterCode":"III","fullDisplayTitle":"基礎數學 / 基礎數論","articleDisplayTitle":"基礎數論","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/number_theory","topic":"BasicMath","article":"number_theory","title":"基礎數論","authors":["WiwiHo"],"contributors":[],"description":"","prerequisites":["BasicMath/basicalgo"]}}]}]}]}},"__N_SSG":true}