{"pageProps":{"props":{"mdxPath":"guide/content/BasicAlgorithm/math_in_school/math_in_school.mdx","content":[["guide/content/BasicAlgorithm/math_in_school/math_in_school.mdx",{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    br: \"br\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Info, Problem, Refcode} = _components;\n  if (!Info) _missingMdxReference(\"Info\", true);\n  if (!Problem) _missingMdxReference(\"Problem\", true);\n  if (!Refcode) _missingMdxReference(\"Refcode\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"在國小到高中課堂上教的數學裡，其實隱含許多的演算法在裡頭，只不過在用人腦解題時，不像電腦一樣需要很明確的流程，甚至有時會根據直覺簡化或改變計算過程，因此不一定會意識到正在使用的方法事實上是一個演算法，或是不一定能馬上將作法轉換成電腦可以使用的演算法。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這個章節會透過一些國小到高中的數學課上提到的問題，帶領讀者將在學校課綱內學到的知識，結合枚舉、搜尋等章節的內容，從基礎的數學發現演算法。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"質數與因數\",\n      children: \"質數與因數\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"要找出一個數 $x$ 的因數，根據因數的定義「$y$ 是 $x$ 的因數代表 $x$ 除以 $y$ 是整數」來看，最直接的方法就是枚舉 $1$ 到 $x$ 的所有整數 $y$，看看 $x$ 除以 $y$ 的餘數是不是 $0$。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"for (int y = 1; y <= x; y++) {\\n    if (x % y == 0) {\\n        // y 是 x 的因數\\n    }\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這樣要一一枚舉 $1$ 到 $x$ 之間的共 $x$ 個數字，時間複雜度是 $O(x)$。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"那麼我們是怎麼用人腦找出因數的呢？在用人腦找出一個數的因數的時候，可能會是列出像這樣的式子：\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"$$\", _jsx(_components.br, {}), \"\\n\", \"\\\\begin{align*}\", _jsx(_components.br, {}), \"\\n\", \"36 &= 1 \\\\times 36 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= 2 \\\\times 18 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= 3 \\\\times 12 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= 4 \\\\times 9 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= 6 \\\\times 6 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= \\\\color{gray}{9 \\\\times 4} \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= \\\\color{gray}{12 \\\\times 3} \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= \\\\color{gray}{18 \\\\times 2} \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= \\\\color{gray}{36 \\\\times 1}\", _jsx(_components.br, {}), \"\\n\", \"\\\\end{align*}\", _jsx(_components.br, {}), \"\\n\", \"$$\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"也就是找出所有 $x$ 拆成兩個數字乘積的方法，裡面出現的所有數字就是全部的因數了。老師可能還教過一個技巧：如果是按照左邊那個數字由小到大去找，只要找到左邊數字 $>$ 右邊數字，那麼就不用再找了，因為現在這個和接下來所有的拆分方式，其實都已經在前面出現過了，只是兩個數字交換而已。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"因此，我們可以從本來一一枚舉可能的因數，換成枚舉可能的拆分方式。既然左邊數字 $>$ 右邊數字的拆分方式，我們都不需要，這代表我們只需要找出所有滿足 $y \\\\leq x/y$，也就是 $y^2 \\\\leq x$ 的因數 $y$ 作為拆分方式們的左邊數字就好了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"將這個過程翻譯成程式碼的話就會是：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"for (int y = 1; y * y <= x; y++) {\\n    if (x % y == 0) { // x = y * (x / y)\\n        // y 是 x 的因數\\n        // x / y 是 x 的因數\\n        // y 跟 x / y 可能是相同的，如果不能重複處理的話要特別注意\\n    }\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$y^2 \\\\leq x$ 的意思就是 $y \\\\leq \\\\sqrt{x}$，我們的時間複雜度就跟著枚舉的數字數量一起變成 $O(\\\\sqrt{x})$ 了！\"\n    }), \"\\n\", _jsx(Info, {\n      type: \"warning\",\n      children: _jsxs(_components.p, {\n        children: [\"不要把 \", _jsx(_components.code, {\n          children: \"y * y <= x\"\n        }), \" 寫成 \", _jsx(_components.code, {\n          children: \"y <= sqrt(x)\"\n        }), \"，因為 \", _jsx(_components.code, {\n          children: \"sqrt(x)\"\n        }), \" 的結果是浮點數，可能會有\", _jsx(_components.a, {\n          href: \"https://medium.com/starbugs/see-why-floating-point-error-can-not-be-avoided-from-ieee-754-809720b32175\",\n          children: \"浮點數誤差\"\n        }), \"。\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在會尋找因數後，檢驗一個數字是不是質數就很簡單了：只要 $x$ 的因數只有 $1$ 和 $x$，那它就是一個質數，反之則不是。因為質數唯一滿足「左邊數字 $\\\\leq$ 右邊數字」的拆分方式就只有 $1 \\\\times x$，我們可以檢查它有沒有別種的拆分方式，有的話就代表它不是質數。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"bool is_prime(int x) {\\n    for (int y = 2; y * y <= x; y++) { // 起始值是 2\\n        if (x % y == 0) { // x = y * (x / y)\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"十分逼進法\",\n      children: \"十分逼進法\"\n    }), \"\\n\", _jsx(Info, {\n      type: \"info\",\n      children: _jsx(_components.p, {\n        children: \"在這一節中，我們只討論對 $\\\\geq 1$ 的數字開根號，因為 $<1$ 的數字開根號後會變大，需要多處理一些瑣碎的條件。\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在學到開根號的時候，同時也會學到一種手動計算開根號的方法：十分逼進法。具體來說，就是一一找到答案每一個位數的數值，舉個例子，我們要計算 $\\\\sqrt{2}$，因為 $2$ 的最高位數在個位數，$\\\\sqrt{2}$ 的最高位數肯定也不會超過個位數，因此我們找找看個位數是多少：\", _jsx(_components.br, {}), \"\\n\", \"$$\", _jsx(_components.br, {}), \"\\n\", \"0^2=0 \\\\leq 2 \\\\qquad 1^2=1 \\\\leq 2 \\\\qquad 2^2=4>2\", _jsx(_components.br, {}), \"\\n\", \"$$\", _jsx(_components.br, {}), \"\\n\", \"所以說 $\\\\sqrt{2}$ 在 $1$ 和 $2$ 之間，我們就知道了它的個位數是 $1$。接著我們再看看下一個位數，也就是小數點後第一位：\", _jsx(_components.br, {}), \"\\n\", \"$$\", _jsx(_components.br, {}), \"\\n\", \"\\\\begin{align*}\", _jsx(_components.br, {}), \"\\n\", \"1.0^2 &= 1.00 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.1^2 &= 1.21 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.2^2 &= 1.44 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.3^2 &= 1.69 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.4^2 &= 1.96 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.5^2 &= 2.25 > 2\", _jsx(_components.br, {}), \"\\n\", \"\\\\end{align*}\", _jsx(_components.br, {}), \"\\n\", \"$$\", _jsx(_components.br, {}), \"\\n\", \"在經歷了有一點多的計算之後，得到 $\\\\sqrt{2}$ 在 $1.4$ 和 $1.5$ 之間，所以小數點後第一位是 $4$。像這樣子不斷加一個位數，從 $0$ 試到 $9$，找到平方後 $\\\\leq 2$ 的最大那一個就是答案的這一個位數。如此一來就可以得到越來越精確的 $\\\\sqrt{2}$ 的數值。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"硬是把十分逼進法轉換成程式碼的話，就會是：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"double sqrt(double x) { // 假設 x >= 1\\n    // 想辦法找到 x 的最高位數\\n    // 例如 x=123 時 t 會是 100、x=0.01 時 t 會是 0.01\\n    double t = 1;\\n    while (t * 10 <= x) t *= 10;\\n    // 假設我們想找從 x 的最高位數開始的前 10 個位數\\n    double ans = 0;\\n    for (int i = 0; i < 10; i++) {\\n        for (int j = 0; j <= 9; j++) {\\n            // 如果把現在看的位數 +1，平方後不會超過 x，那就加上 1\\n            if ((ans + t) * (ans + t) <= x)\\n                ans += t;\\n        }\\n        t /= 10;\\n    }\\n    return ans;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這個作法不僅對人類來說很費力，對電腦而言好像也有點複雜。其實我們在自己計算十分逼進法時，不一定要乖乖地從 $0$ 數到 $9$，而是有時候某些太大或太小的數字顯然就不可能，可以直接跳過，也可以直接先檢查 $5$ 看看答案是更大還是更小，這樣才不會在答案是 $9$ 的時候還要把所有數字都檢查一遍。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"「先檢查 $5$ 看看答案是更大還是更小」這不就是二分搜尋法嗎？回顧一下剛剛的例子\", _jsx(_components.br, {}), \"\\n\", \"$$\", _jsx(_components.br, {}), \"\\n\", \"\\\\begin{align*}\", _jsx(_components.br, {}), \"\\n\", \"1.0^2 &= 1.00 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.1^2 &= 1.21 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.2^2 &= 1.44 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.3^2 &= 1.69 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.4^2 &= 1.96 \\\\leq 2 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"1.5^2 &= 2.25 > 2\", _jsx(_components.br, {}), \"\\n\", \"\\\\end{align*}\", _jsx(_components.br, {}), \"\\n\", \"$$\", _jsx(_components.br, {}), \"\\n\", \"在這個位數是一些比較小的數字的時候，平方會 $\\\\leq 2$，而到比較大的數字就會變成 $>2$，我們要的是 $\\\\leq 2$ 和 $>2$ 的交界處，正好就是二分搜尋法可以快速做到的事情！\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這讓人類手算時可以省一些功夫，但寫成程式碼就有點累人了。先不要急著直接把這個作法變成程式碼，既然二分搜尋法可以幫我們找某個位數，那不是直接讓二分搜尋法幫我們找答案就好了嗎？！\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"double sqrt(double x) { // x >= 1\\n    double l = 0, r = x; // 一開始的搜尋範圍是 [1, x]\\n    for (int i = 0; i < 30; i++) { // 看要搜尋幾次，越多次越精確\\n        double mid = (l + r) / 2;\\n        if (mid * mid <= x) l = mid;\\n        else r = mid;\\n    }\\n    return l;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"其實十分逼進法在設計上還是有一點考量到人類計算的方便性，因為大多數人都比較習慣十進位，才會用「十」分逼進法。但以寫程式而言，電腦並沒有像人一樣難以計算多位數四則運算的問題，因此流程簡單才是最重要的，從上面的程式碼就可以看得出來，不斷分兩半當然會比每一位數分開處理，再把每一位數分十半簡單好寫。\"\n    }), \"\\n\", _jsx(Info, {\n      type: \"warning\",\n      children: _jsxs(_components.p, {\n        children: [\"事實上 \", _jsx(_components.code, {\n          children: \"<cmath>\"\n        }), \" 中的 \", _jsx(_components.code, {\n          children: \"sqrt\"\n        }), \" 就已經很快速和精確了，在需要浮點數的答案時可以直接使用，不過在需要的是 $\\\\lfloor \\\\sqrt{x} \\\\rfloor$ 這樣取整數後的數值時（$\\\\lfloor \\\\sqrt{x} \\\\rfloor$ 是下高斯記號，代表 $\\\\leq x$ 的最大整數），就可以考慮自己用二分搜尋法實作，以避免浮點數誤差，也節省浮點數運算需要的時間。\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"大數四則運算\",\n      children: \"大數四則運算\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"剛剛才說到電腦沒有像人一樣難以計算多位數四則運算的問題，但遺憾的是 C++ 的 \", _jsx(_components.code, {\n        children: \"int\"\n      }), \"、\", _jsx(_components.code, {\n        children: \"long long\"\n      }), \"、\", _jsx(_components.code, {\n        children: \"double\"\n      }), \" 等等數字形態都有數字範圍的上限，當真的需要使用非常多位數的數字的時候，就得要想辦法自己寫運算了。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這個章節的主要目的是引導讀者將平常人類計算的方法轉換成程式，因此會著重在以簡潔的方式實作，比較不在乎要讓程式有效率地運作。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"大數四則運算-儲存方式\",\n      children: \"儲存方式\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"要儲存一個很大的數字，我們可以用一個陣列把每個位數分開存，\", _jsx(_components.br, {}), \"\\n\", \"像是用一個長度為 $k$ 的陣列 $a_0,a_1,\\\\dots,a_{k-1}$ 中的 $a_i$ 代表右邊數來第 $i$ 個位數（最右邊是第 $0$ 個位數），\", _jsx(_components.br, {}), \"\\n\", \"這個陣列代表的數字就是 $a_0 \\\\times 10^0 + a_1 \\\\times 10^1 + a_2 \\\\times 10^2 + \\\\dots + a_{k-1} \\\\times 10^{k-1}$，\", _jsx(_components.br, {}), \"\\n\", \"這樣一來最大可以存的數字是 $9 \\\\times 10^0 + \\\\dots + 9 \\\\times 10^{k-1} = \\\\underbrace{999\\\\dots999}_k = 10^k-1$。\"]\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"    // 用陣列儲存數字的每一位數，這裡的陣列第 i 個元素是 10^i 的那個位數\\n    int a[len] = {3, 6, 7, 8, 4, 0, 0, 0, 0, 0}; // 48763\\n    int b[len] = {4, 7, 4, 1, 2, 0, 0, 0, 0, 0}; // 21474\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"大數四則運算-加法\",\n      children: \"加法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在一開始學到加法的時候，就會學到用直式計算加法，像是：\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"$$\", _jsx(_components.br, {}), \"\\n\", \"\\\\begin{array}{cccccc}\", _jsx(_components.br, {}), \"\\n\", \"& \\\\small1 & \\\\small1 & \\\\small1 & & \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"& 4 & 8 & 7 & 6 & 3 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"+& 2 & 1 & 4 & 7 & 4 \\\\\\\\ \\\\hline\", _jsx(_components.br, {}), \"\\n\", \"& 7 & 0 & 2 & 3 & 7\", _jsx(_components.br, {}), \"\\n\", \"\\\\end{array}\", _jsx(_components.br, {}), \"\\n\", \"$$\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在計算的時候，我們會把兩個要相加的數字的個位數對齊，寫下來後，從最右邊的位數開始計算。當計算某個位數時，把那一直行的數字都加起來，結果的個位數就是答案，而如果加起來的數字不只一個位數，就是「進位」了，把十位數寫到左邊那一直行的最上面去。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"const int len = 10; // 數字的最大位數（答案也不能超過這個位數）\\n\\nvoid big_plus(int a[len], int b[len], int c[len]) { // c = a + b\\n    int carry = 0; // 上一個位數進位到這一位數\\n    for (int i = 0; i < len; i++) {\\n        int sum = a[i] + b[i] + carry; // 兩個數字的這一位數相加，再加上進位\\n        c[i] = sum % 10; // 總和的個位數就是答案\\n        carry = sum / 10; // 超出個位數的部分要進位到下一個位數\\n    }\\n}\\n\\nvoid plus_test() {\\n    // 用陣列儲存數字的每一位數，這裡的陣列第 i 個元素是 10^i 的那個位數\\n    int a[len] = {3, 6, 7, 8, 4, 0, 0, 0, 0, 0}; // 48763\\n    int b[len] = {4, 7, 4, 1, 2, 0, 0, 0, 0, 0}; // 21474\\n    int c[len]; // 答案\\n    \\n    big_plus(a, b, c);\\n    \\n    for (int i = len - 1; i >= 0; i--)\\n        cout << c[i];\\n    cout << endl; // 0000070237\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"大數四則運算-減法\",\n      children: \"減法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"加法會有「加起來太多了，所以進到下一個位數」的問題，不過就只要把進位的部分丟給下一位數煩惱就好，不難處理。減法則有「上面的數字比下面的數字小，需要跟左邊的位數借位」的問題，這就比加法的進位稍微複雜一點了，像是這樣的狀況：\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"$$\", _jsx(_components.br, {}), \"\\n\", \"\\\\begin{array}{cccccc}\", _jsx(_components.br, {}), \"\\n\", \"&  \\\\small1 & \\\\small9 & \\\\small9 & \\\\small9 & \\\\small{10} \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"& \\\\not2 & 0 & 0 & 0 & 0 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"-&  &  &  &  & 1 \\\\\\\\ \\\\hline\", _jsx(_components.br, {}), \"\\n\", \"& 1 & 9 & 9 & 9 & 9\", _jsx(_components.br, {}), \"\\n\", \"\\\\end{array}\", _jsx(_components.br, {}), \"\\n\", \"$$\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在計算 $20000-19999$ 的個位數時，根據小時候學到的直式減法，因為 $0<1$，所以就要去向左邊的位數借位。然而，左邊那一個位數並不總是借得到，當左邊那位是 $0$ 就沒東西可借了，所以就要往左找到第一個不是 $0$ 的位數，幫它減 $1$、中間的人加上 $9$、現在這一位加上 $10$，才能完成借位。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"程式要是寫起來的話，會比剛剛的加法複雜許多，有沒有對程式來講更簡單的作法呢？既然加法可以直接把進位的部分丟給左邊那一位煩惱，那減法可不可以也把借位丟給左邊那一位煩惱？答案是可以，借位的目的是「從高位那裡拿到 $10$」，所以乾脆把左邊那個人扣 $1$（等值於這一位的 $10$），也就是可以看成是進位 $-1$，它自己扣到負的再自己想辦法就好。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void big_minus(int a[len], int b[len], int c[len]) { // c = a - b\\n    int carry = 0; // 上一個位數進（借）位到這一位數\\n    for (int i = 0; i < len; i++) {\\n        int sum = a[i] - b[i] + carry; // -10 <= sum <= 9\\n        if (sum < 0) carry = -1, sum += 10; // 變負的要借位\\n        else carry = 0;\\n        c[i] = sum; // 現在 0 <= sum <= 9\\n    }\\n}\\n\\nvoid minus_test() {\\n    int a[len] = {0, 0, 0, 0, 2, 0, 0, 0, 0, 0}; // 20000\\n    int b[len] = {1, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // 1\\n    int c[len]; // 答案\\n    \\n    big_minus(a, b, c);\\n\\n    for (int i = len - 1; i >= 0; i--)\\n        cout << c[i];\\n    cout << endl; // 0000019999\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"大數四則運算-乘法\",\n      children: \"乘法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"和前面一樣，我們來想想直式乘法是怎麼計算的：\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"$$\", _jsx(_components.br, {}), \"\\n\", \"\\\\begin{array}{ccccccccc}\", _jsx(_components.br, {}), \"\\n\", \"&&&& 1 & 2 & 3 & 4 & 5 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"\\\\times&&&&  &  & 8 & 7 & 6 \\\\\\\\ \\\\hline\", _jsx(_components.br, {}), \"\\n\", \"&&&& 7 & 4 & 0 & 7 & 0 \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&&& 8 & 6 & 4 & 1 & 5 & \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&& 9 & 8 & 7 & 6 & 0 & & \\\\\\\\ \\\\hline\", _jsx(_components.br, {}), \"\\n\", \"& 1 & 0 & 8 & 1 & 4 & 2 & 2 & 0\", _jsx(_components.br, {}), \"\\n\", \"\\\\end{array}\", _jsx(_components.br, {}), \"\\n\", \"$$\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在兩條線中間的部分，三行依序是 $12345$ 乘上 $6,7,8$ 後的結果，其實就是把上面的數字分別乘上下面數字的每一位數，再把這些結果加總。所以要會計算「很多位數乘很多位數」的答案，就要先會算「很多位數乘一個位數」。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"套用相同的「分開位數」的概念，算很多位數乘一個位數的乘法時，就是一一計算前者的每個位數乘上那一個位數是多少，最後再加總起來。因此，我們計算直式乘法的過程其實是：把兩個數字的每一位分別相乘，再把它們都加起來。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"過程其實就是加法，就只是我們每次都是「把答案的第 $i+j$ 位加上 $a$ 的第 $i$ 位乘上 $b$ 的第 $j$ 位」（位數是從 $0$ 開始數！），如果加起來的結果 $\\\\geq 10$，超出個位數的部分就進到下一個位數去。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void big_multiplies(int a[len], int b[len], int c[len]) { // c = a * b\\n    for (int i = 0; i < len; i++) c[i] = 0;\\n    for (int i = 0; i < len; i++) {\\n        int carry = 0;\\n        for (int j = 0; i + j < len; j++) {\\n            // 從低位做到高位就能好好處理進位\\n            // (a[i] * 10^i) * (b[j] * 10^j) = (a[i] * b[j]) * 10^(i+j)\\n            int sum = c[i + j] + a[i] * b[j] + carry;\\n            c[i + j] = sum % 10;\\n            carry = sum / 10;\\n        }\\n    }\\n}\\n\\nvoid multiplies_test() {\\n    int a[len] = {5, 4, 3, 2, 1, 0, 0, 0, 0, 0}; // 12345\\n    int b[len] = {6, 7, 8, 0, 0, 0, 0, 0, 0, 0}; // 876\\n    int c[len]; // 答案\\n    \\n    big_multiplies(a, b, c);\\n\\n    for (int i = len - 1; i >= 0; i--)\\n        cout << c[i];\\n    cout << endl; // 0010814220\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"大數四則運算-比大小\",\n      children: \"比大小\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在講除法之前，要先插播一個不是四則運算的東西：比大小。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"平常我們看到兩個數字的時候，應該一眼就能比較它們的大小了。具體來說，就是把兩個數的個位數對齊（我們儲存大數的方式會在高位數補上 0，而且陣列是個位數放在前面，因此自然就對齊了）後，從最高位開始比較，第一個不一樣的位數就決定了它們的大小關係：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"int comp(int a[len], int b[len]) { // -1: a < b, 0: a = b, 1: a > b\\n    for (int i = len - 1; i >= 0; i--) {\\n        if (a[i] < b[i]) return -1;\\n        else if (a[i] > b[i]) return 1;\\n    }\\n    return 0;\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"大數四則運算-除法\",\n      children: \"除法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"總算到了四則運算裡最困難的除法。除法和加減乘很不一樣，在算加減乘法的時候，我們總是會先去算最低那個位數，然而，在算除法的時候，我們都是先找出最高那個位數是多少。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$a \\\\div b$ 的最高位數，就是「$b$ 乘上它不會超過 $a$」的最大的數字，而這個數字也不是很好找，對人類而言只能猜猜看，好在電腦要一個一個慢慢試沒有那麼困難。在找到最高位數後，就把 $a$ 減去 $b$ 乘上它，接下來再找下一個位數。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"具體來說，要怎麼找到最大的位數呢？如果我們現在要找到的位數是 $10^i$ 那一位，那我們要找的就是最大的 $d$ 使得 $d \\\\times 10^i \\\\times b \\\\leq a$，乍聽之下我們會需要枚舉 $d$，用乘法算出左邊那一項，再跟 $a$ 比大小，就像前面提到的十分逼進法那樣。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"其實不用那麼麻煩，也可以每當 $a \\\\geq b \\\\times 10^i$ 時，就把 $a$ 減去 $b \\\\times 10^i$，看可以減幾次，那就是 $d$ 了，寫起來會簡單一些。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void big_divides(int a[len], int b[len], int c[len], int r[len]) { // a / b = c ... r\\n    int t = len - 1;\\n    for (; t >= 0 && b[t] == 0; t--); // 找到 b 的最高非 0 位數\\n    int tmp[len];\\n    for (int i = 0; i < len; i++) r[i] = a[i], c[i] = 0;\\n    for (int i = len - t - 1; i >= 0; i--) { \\n        // 從最大的位數開始找，要確保 b * 10^i 位數不會超過 len\\n        int d = 0;\\n        for (int j = 0; j < len; j++) tmp[j] = 0;\\n        for (int j = 0; j <= t; j++) tmp[i + j] = b[j]; // tmp = b * 10^i\\n        while (comp(r, tmp) >= 0) { // r >= tmp\\n            big_minus(r, tmp, r); // r = tmp - r\\n            d++;\\n        }\\n        c[i] = d;\\n    }\\n}\\n\\nvoid divides_test() {\\n    int a[len] = {5, 4, 3, 2, 1, 0, 0, 0, 0, 0}; // 12345\\n    int b[len] = {6, 7, 8, 0, 0, 0, 0, 0, 0, 0}; // 876\\n    int c[len]; // 商數\\n    int r[len]; // 餘數\\n    \\n    big_divides(a, b, c, r);\\n\\n    for (int i = len - 1; i >= 0; i--)\\n        cout << c[i];\\n    cout << endl; // 0000000014\\n    for (int i = len - 1; i >= 0; i--)\\n        cout << r[i];\\n    cout << endl; // 0000000081\\n}\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(Info, {\n      type: \"warning\",\n      children: _jsxs(_components.p, {\n        children: [\"上面的程式碼用到了 \", _jsx(_components.code, {\n          children: \"big_minus(r, tmp, r)\"\n        }), \"，其中的輸入和答案的位置是一樣的，上面的實作方式在這種情況可以正常運作，不過在遇到這種狀況時都要特別注意一下，像是上面的乘法實作方式就不能這樣。\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"總結\",\n      children: \"總結\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在看過這幾個在學校課堂上常見的數學問題之後，希望讀者有稍微體會到「人腦解題」與「電腦解題」的差異之處。許多在學校數學課上學到的作法，其實都是為了讓人類方便運算，盡可能減少需要對複雜的數字計算的機會，因而有比較複雜但之於人類並不麻煩的運算流程，在轉換成演算法時，就可以忽略那些為了方便人類計算而做的設計，轉而把注意力放在寫出清晰簡潔的流程。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"習題\",\n      children: \"習題\"\n    }), \"\\n\", _jsx(Problem, {\n      url: \"https://zerojudge.tw/ShowProblem?problemid=a021\",\n      src: \"ZeroJudge a021\",\n      name: \"大數運算\",\n      expanded: \"false\",\n      difficulty: \"1\",\n      descriptionMdx: \"guide/problems/ZeroJudge/a021/description.mdx\",\n      constraintsMdx: \"guide/problems/ZeroJudge/a021/constraints.mdx\",\n      importMdx: \"guide/problems/ZeroJudge/a021/description.mdx\",\n      importMdx: \"guide/problems/ZeroJudge/a021/constraints.mdx\"\n    }), \"\\n\", _jsx(Problem, {\n      url: \"https://zerojudge.tw/ShowProblem?problemid=d481\",\n      src: \"ZeroJudge d481\",\n      name: \"矩陣乘法\",\n      expanded: \"false\",\n      difficulty: \"2\",\n      descriptionMdx: \"guide/problems/ZeroJudge/d481/description.mdx\",\n      constraintsMdx: \"guide/problems/ZeroJudge/d481/constraints.mdx\",\n      importMdx: \"guide/problems/ZeroJudge/d481/description.mdx\",\n      importMdx: \"guide/problems/ZeroJudge/d481/constraints.mdx\"\n    }), \"\\n\", _jsx(Problem, {\n      url: \"https://zerojudge.tw/ShowProblem?problemid=b893\",\n      src: \"ZeroJudge b893\",\n      name: \"勘根定理\",\n      expanded: \"false\",\n      difficulty: \"2\",\n      descriptionMdx: \"guide/problems/ZeroJudge/b893/description.mdx\",\n      constraintsMdx: \"guide/problems/ZeroJudge/b893/constraints.mdx\",\n      importMdx: \"guide/problems/ZeroJudge/b893/description.mdx\",\n      importMdx: \"guide/problems/ZeroJudge/b893/constraints.mdx\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}],["guide/problems/ZeroJudge/a021/description.mdx",{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"正整數加減乘除大數運算。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}],["guide/problems/ZeroJudge/a021/constraints.mdx",{"compiledSource":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    li: \"li\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_components.ul, {\n    children: [\"\\n\", _jsx(_components.li, {\n      children: \"輸入與答案位數 $\\\\leq 500$\"\n    }), \"\\n\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}],["guide/problems/ZeroJudge/d481/description.mdx",{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"給兩個矩陣，輸出相乘後的結果。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}],["guide/problems/ZeroJudge/d481/constraints.mdx",{"compiledSource":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    li: \"li\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_components.ul, {\n    children: [\"\\n\", _jsx(_components.li, {\n      children: \"矩陣大小不超過 $100 \\\\times 100$\"\n    }), \"\\n\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}],["guide/problems/ZeroJudge/b893/description.mdx",{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"給一個最高五次的多項式，求所有實數根在哪兩個連續整數之間，或判斷有無限多根或沒有實數根。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}],["guide/problems/ZeroJudge/b893/constraints.mdx",{"compiledSource":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    li: \"li\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_components.ul, {\n    children: [\"\\n\", _jsx(_components.li, {\n      children: \"係數在 $[-40,40]$ 內\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"答案中的所有數字 $x$，都保證滿足 $x^6 \\\\leq 2^{31}-1$\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"不會有兩個連續整數之間有兩個以上的根\"\n    }), \"\\n\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}]],"prereqs":[{"code":"BasicAlgorithm/searching","text":"基礎演算法 / 搜尋"},{"code":"BasicAlgorithm/enumerate","text":"基礎演算法 / 枚舉"}],"sections":[{"text":"質數與因數","depth":1,"code":"質數與因數"},{"text":"十分逼進法","depth":1,"code":"十分逼進法"},{"text":"大數四則運算","depth":1,"code":"大數四則運算"},{"text":"儲存方式","depth":2,"code":"大數四則運算-儲存方式"},{"text":"加法","depth":2,"code":"大數四則運算-加法"},{"text":"減法","depth":2,"code":"大數四則運算-減法"},{"text":"乘法","depth":2,"code":"大數四則運算-乘法"},{"text":"比大小","depth":2,"code":"大數四則運算-比大小"},{"text":"除法","depth":2,"code":"大數四則運算-除法"},{"text":"總結","depth":1,"code":"總結"},{"text":"習題","depth":1,"code":"習題"}],"previousArticle":{"code":"BasicAlgorithm/searching","topicCode":"BasicAlgorithm","articleCode":"searching","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 搜尋","articleDisplayTitle":"搜尋","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/searching","topic":"BasicAlgorithm","article":"searching","title":"搜尋","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},"nextArticle":{"code":"GreedyAlgorithm/intuitive_greedy","topicCode":"GreedyAlgorithm","articleCode":"intuitive_greedy","chapterCode":"II","fullDisplayTitle":"貪心演算法 / 貪心法 I","articleDisplayTitle":"貪心法 I","topicDisplayTitle":"貪心演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"GreedyAlgorithm/intuitive_greedy","topic":"GreedyAlgorithm","article":"intuitive_greedy","title":"貪心法 I","authors":["baluteshih"],"contributors":[],"description":"生活中直覺的貪心題目","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},"virtualArticle":{"code":"BasicAlgorithm/math_in_school","topicCode":"BasicAlgorithm","articleCode":"math_in_school","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 學校教的數學","articleDisplayTitle":"學校教的數學","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/math_in_school","topic":"BasicAlgorithm","article":"math_in_school","title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"description":"一些和基礎演算法設計技巧有關的課綱內數學問題，引導讀者從基礎數學發現演算法，並且訓練把人腦作法轉換成演算法的能力。","prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"]}},"topicStructure":[{"single":true,"title":"","topics":[{"code":"Guide","displayTitle":"網站簡介","articles":[{"code":"Guide/learning","topicCode":"Guide","articleCode":"learning","chapterCode":"I","fullDisplayTitle":"網站簡介 / 服用方法","articleDisplayTitle":"服用方法","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/learning","topic":"Guide","article":"learning","title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"description":"教大家怎麼看這份講義","prerequisites":[]}},{"code":"Guide/chapters","topicCode":"Guide","articleCode":"chapters","chapterCode":"I","fullDisplayTitle":"網站簡介 / 章節與主題","articleDisplayTitle":"章節與主題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/chapters","topic":"Guide","article":"chapters","title":"章節與主題","authors":["baluteshih"],"contributors":[],"description":"教大家什麼是章節與主題","prerequisites":["Guide/learning"]}},{"code":"Guide/problems","topicCode":"Guide","articleCode":"problems","chapterCode":"I","fullDisplayTitle":"網站簡介 / 習題","articleDisplayTitle":"習題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/problems","topic":"Guide","article":"problems","title":"習題","authors":["baluteshih"],"contributors":[],"description":"教大家這份講義的習題意義","prerequisites":["Guide/learning"]}},{"code":"Guide/math_symbol","topicCode":"Guide","articleCode":"math_symbol","chapterCode":"I","fullDisplayTitle":"網站簡介 / 基本數學符號","articleDisplayTitle":"基本數學符號","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/math_symbol","topic":"Guide","article":"math_symbol","title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"description":"介紹常見的數學符號","prerequisites":[]}},{"code":"Guide/language","topicCode":"Guide","articleCode":"language","chapterCode":"I","fullDisplayTitle":"網站簡介 / 語法學習資源","articleDisplayTitle":"語法學習資源","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/language","topic":"Guide","article":"language","title":"語法學習資源","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Guide/qa","topicCode":"Guide","articleCode":"qa","chapterCode":"I","fullDisplayTitle":"網站簡介 / NTUCPC Guide Q & A","articleDisplayTitle":"NTUCPC Guide Q & A","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/qa","topic":"Guide","article":"qa","title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":[]}}]}]},{"single":true,"title":"","topics":[{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/competitive_programming","topicCode":"Introduction","articleCode":"competitive_programming","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 資訊競賽介紹","articleDisplayTitle":"資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/competitive_programming","topic":"Introduction","article":"competitive_programming","title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Introduction/contests_type","topicCode":"Introduction","articleCode":"contests_type","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 比賽類型","articleDisplayTitle":"比賽類型","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/contests_type","topic":"Introduction","article":"contests_type","title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tw_contests","topicCode":"Introduction","articleCode":"tw_contests","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 台灣資訊競賽介紹","articleDisplayTitle":"台灣資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/tw_contests","topic":"Introduction","article":"tw_contests","title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}},{"code":"Introduction/online_judge","topicCode":"Introduction","articleCode":"online_judge","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 線上評測系統","articleDisplayTitle":"線上評測系統","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/online_judge","topic":"Introduction","article":"online_judge","title":"線上評測系統","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/resources","topicCode":"Introduction","articleCode":"resources","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 網路學習資源介紹","articleDisplayTitle":"網路學習資源介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/resources","topic":"Introduction","article":"resources","title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tactics","topicCode":"Introduction","articleCode":"tactics","chapterCode":"III","fullDisplayTitle":"資訊競賽介紹 / 比賽 + 練習策略","articleDisplayTitle":"比賽 + 練習策略","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"Introduction/tactics","topic":"Introduction","article":"tactics","title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}}]}]},{"single":true,"title":"","topics":[{"code":"Implementation","displayTitle":"實作技巧","articles":[{"code":"Implementation/basic_knowledge","topicCode":"Implementation","articleCode":"basic_knowledge","chapterCode":"II","fullDisplayTitle":"實作技巧 / 基本常識","articleDisplayTitle":"基本常識","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/basic_knowledge","topic":"Implementation","article":"basic_knowledge","title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"description":"講述一些競賽程式需要知道的最基本常識","prerequisites":["Introduction/online_judge"]}},{"code":"Implementation/input","topicCode":"Implementation","articleCode":"input","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見輸入類型","articleDisplayTitle":"常見輸入類型","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/input","topic":"Implementation","article":"input","title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的輸入格式","prerequisites":["Implementation/basic_knowledge"]}},{"code":"Implementation/reference","topicCode":"Implementation","articleCode":"reference","chapterCode":"II","fullDisplayTitle":"實作技巧 / Reference","articleDisplayTitle":"Reference","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/reference","topic":"Implementation","article":"reference","title":"Reference","authors":["baluteshih"],"contributors":[],"description":"Reference","prerequisites":[]}},{"code":"Implementation/compiler","topicCode":"Implementation","articleCode":"compiler","chapterCode":"II","fullDisplayTitle":"實作技巧 / 編譯器","articleDisplayTitle":"編譯器","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/compiler","topic":"Implementation","article":"compiler","title":"編譯器","authors":["WiwiHo"],"contributors":[],"description":"簡單介紹什麼是編譯器","prerequisites":[]}},{"code":"Implementation/error_message","topicCode":"Implementation","articleCode":"error_message","chapterCode":"II","fullDisplayTitle":"實作技巧 / 如何看錯誤訊息","articleDisplayTitle":"如何看錯誤訊息","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/error_message","topic":"Implementation","article":"error_message","title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"description":"介紹一些常見錯誤訊息的看法","prerequisites":["Implementation/compiler"]}},{"code":"Implementation/variable","topicCode":"Implementation","articleCode":"variable","chapterCode":"II","fullDisplayTitle":"實作技巧 / 全域、區域變數","articleDisplayTitle":"全域、區域變數","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/variable","topic":"Implementation","article":"variable","title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"description":"各種全域區域變數相關的事情","prerequisites":["Implementation/basic_knowledge","Implementation/reference","Implementation/compiler"]}},{"code":"Implementation/buglist","topicCode":"Implementation","articleCode":"buglist","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見錯誤列表","articleDisplayTitle":"常見錯誤列表","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/buglist","topic":"Implementation","article":"buglist","title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的錯誤","prerequisites":["Implementation/variable"]}},{"code":"Implementation/debug","topicCode":"Implementation","articleCode":"debug","chapterCode":null,"fullDisplayTitle":"實作技巧 / Debug","articleDisplayTitle":"Debug","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter ???","article":{"code":"Implementation/debug","topic":"Implementation","article":"debug","title":"Debug","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Implementation/buglist"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/intro","topicCode":"BasicAlgorithm","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/intro","topic":"BasicAlgorithm","article":"intro","title":"介紹","authors":["double"],"contributors":[],"description":"簡單介紹何謂演算法","prerequisites":["Introduction/competitive_programming"]}},{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},{"code":"BasicAlgorithm/algorithm_numeric","topicCode":"BasicAlgorithm","articleCode":"algorithm_numeric","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 標準函式庫 ── <algorithm> 與 <numeric>","articleDisplayTitle":"標準函式庫 ── <algorithm> 與 <numeric>","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/algorithm_numeric","topic":"BasicAlgorithm","article":"algorithm_numeric","title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"description":"介紹 STL <algorithm> 和 <numeric> 裡的幾個常用函式","prerequisites":["BasicAlgorithm/sorting"]}},{"code":"BasicAlgorithm/enumerate","topicCode":"BasicAlgorithm","articleCode":"enumerate","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 枚舉","articleDisplayTitle":"枚舉","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/enumerate","topic":"BasicAlgorithm","article":"enumerate","title":"枚舉","authors":["WiwiHo"],"contributors":[],"description":"簡單的枚舉技巧，不包含遞迴","prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/searching","topicCode":"BasicAlgorithm","articleCode":"searching","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 搜尋","articleDisplayTitle":"搜尋","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/searching","topic":"BasicAlgorithm","article":"searching","title":"搜尋","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/math_in_school","topicCode":"BasicAlgorithm","articleCode":"math_in_school","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 學校教的數學","articleDisplayTitle":"學校教的數學","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/math_in_school","topic":"BasicAlgorithm","article":"math_in_school","title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"description":"一些和基礎演算法設計技巧有關的課綱內數學問題，引導讀者從基礎數學發現演算法，並且訓練把人腦作法轉換成演算法的能力。","prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/recursion","topicCode":"BasicAlgorithm","articleCode":"recursion","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 遞迴","articleDisplayTitle":"遞迴","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/recursion","topic":"BasicAlgorithm","article":"recursion","title":"遞迴","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/partial_sum","topicCode":"BasicAlgorithm","articleCode":"partial_sum","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 前綴和與差分","articleDisplayTitle":"前綴和與差分","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/partial_sum","topic":"BasicAlgorithm","article":"partial_sum","title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/two_pointers","topicCode":"BasicAlgorithm","articleCode":"two_pointers","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 雙指標","articleDisplayTitle":"雙指標","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/two_pointers","topic":"BasicAlgorithm","article":"two_pointers","title":"雙指標","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/binary_search_answer","topicCode":"BasicAlgorithm","articleCode":"binary_search_answer","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 對答案二分搜","articleDisplayTitle":"對答案二分搜","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/binary_search_answer","topic":"BasicAlgorithm","article":"binary_search_answer","title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"description":"","prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"]}}]}]},{"single":true,"title":"","topics":[{"code":"GreedyAlgorithm","displayTitle":"貪心演算法","articles":[{"code":"GreedyAlgorithm/intuitive_greedy","topicCode":"GreedyAlgorithm","articleCode":"intuitive_greedy","chapterCode":"II","fullDisplayTitle":"貪心演算法 / 貪心法 I","articleDisplayTitle":"貪心法 I","topicDisplayTitle":"貪心演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"GreedyAlgorithm/intuitive_greedy","topic":"GreedyAlgorithm","article":"intuitive_greedy","title":"貪心法 I","authors":["baluteshih"],"contributors":[],"description":"生活中直覺的貪心題目","prerequisites":["BasicAlgorithm/algorithm_numeric"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/intro","topicCode":"BasicDataStructure","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/intro","topic":"BasicDataStructure","article":"intro","title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"description":"簡單介紹資料結構的概念","prerequisites":["Implementation/basic_knowledge"]}},{"code":"BasicDataStructure/vector","topicCode":"BasicDataStructure","articleCode":"vector","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 動態的陣列","articleDisplayTitle":"動態的陣列","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/vector","topic":"BasicDataStructure","article":"vector","title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicDataStructure/stack_queue_deque","topicCode":"BasicDataStructure","articleCode":"stack_queue_deque","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Stack、Queue 與 Deque","articleDisplayTitle":"Stack、Queue 與 Deque","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/stack_queue_deque","topic":"BasicDataStructure","article":"stack_queue_deque","title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/linked_list","topicCode":"BasicDataStructure","articleCode":"linked_list","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Linked List","articleDisplayTitle":"Linked List","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/linked_list","topic":"BasicDataStructure","article":"linked_list","title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/binary_tree","topicCode":"BasicDataStructure","articleCode":"binary_tree","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / 二元樹","articleDisplayTitle":"二元樹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/binary_tree","topic":"BasicDataStructure","article":"binary_tree","title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/linked_list","Implementation/reference"]}},{"code":"BasicDataStructure/heap","topicCode":"BasicDataStructure","articleCode":"heap","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Heap","articleDisplayTitle":"Heap","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/heap","topic":"BasicDataStructure","article":"heap","title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}},{"code":"BasicDataStructure/set_map","topicCode":"BasicDataStructure","articleCode":"set_map","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Set 與 Map","articleDisplayTitle":"Set 與 Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/set_map","topic":"BasicDataStructure","article":"set_map","title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/heap"]}},{"code":"BasicDataStructure/unordered","topicCode":"BasicDataStructure","articleCode":"unordered","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Unordered Set 與 Unordered Map","articleDisplayTitle":"Unordered Set 與 Unordered Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/unordered","topic":"BasicDataStructure","article":"unordered","title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/set_map"]}},{"code":"BasicDataStructure/iterator","topicCode":"BasicDataStructure","articleCode":"iterator","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Iterator","articleDisplayTitle":"Iterator","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/iterator","topic":"BasicDataStructure","article":"iterator","title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/intro"]}},{"code":"BasicDataStructure/binary_tree_and_stack","topicCode":"BasicDataStructure","articleCode":"binary_tree_and_stack","chapterCode":null,"fullDisplayTitle":"基礎資料結構 / 二元樹與 Stack","articleDisplayTitle":"二元樹與 Stack","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter ???","article":{"code":"BasicDataStructure/binary_tree_and_stack","topic":"BasicDataStructure","article":"binary_tree_and_stack","title":"二元樹與 Stack","authors":["8e7"],"contributors":["建中大講義團隊","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicMath","displayTitle":"基礎數學","articles":[{"code":"BasicMath/basicalgo","topicCode":"BasicMath","articleCode":"basicalgo","chapterCode":"III","fullDisplayTitle":"基礎數學 / 常用數學演算法","articleDisplayTitle":"常用數學演算法","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/basicalgo","topic":"BasicMath","article":"basicalgo","title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"description":"一些不太難的數學","prerequisites":["BasicAlgorithm/math_in_school"]}},{"code":"BasicMath/number_theory","topicCode":"BasicMath","articleCode":"number_theory","chapterCode":"III","fullDisplayTitle":"基礎數學 / 基礎數論","articleDisplayTitle":"基礎數論","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/number_theory","topic":"BasicMath","article":"number_theory","title":"基礎數論","authors":["WiwiHo"],"contributors":[],"description":"","prerequisites":["BasicMath/basicalgo"]}}]}]}],"chapterStructure":[{"code":"I","displayTitle":"Chapter I. 初來乍到","topics":[{"code":"Guide","displayTitle":"網站簡介","articles":[{"code":"Guide/learning","topicCode":"Guide","articleCode":"learning","chapterCode":"I","fullDisplayTitle":"網站簡介 / 服用方法","articleDisplayTitle":"服用方法","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/learning","topic":"Guide","article":"learning","title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"description":"教大家怎麼看這份講義","prerequisites":[]}},{"code":"Guide/chapters","topicCode":"Guide","articleCode":"chapters","chapterCode":"I","fullDisplayTitle":"網站簡介 / 章節與主題","articleDisplayTitle":"章節與主題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/chapters","topic":"Guide","article":"chapters","title":"章節與主題","authors":["baluteshih"],"contributors":[],"description":"教大家什麼是章節與主題","prerequisites":["Guide/learning"]}},{"code":"Guide/problems","topicCode":"Guide","articleCode":"problems","chapterCode":"I","fullDisplayTitle":"網站簡介 / 習題","articleDisplayTitle":"習題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/problems","topic":"Guide","article":"problems","title":"習題","authors":["baluteshih"],"contributors":[],"description":"教大家這份講義的習題意義","prerequisites":["Guide/learning"]}},{"code":"Guide/math_symbol","topicCode":"Guide","articleCode":"math_symbol","chapterCode":"I","fullDisplayTitle":"網站簡介 / 基本數學符號","articleDisplayTitle":"基本數學符號","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/math_symbol","topic":"Guide","article":"math_symbol","title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"description":"介紹常見的數學符號","prerequisites":[]}},{"code":"Guide/language","topicCode":"Guide","articleCode":"language","chapterCode":"I","fullDisplayTitle":"網站簡介 / 語法學習資源","articleDisplayTitle":"語法學習資源","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/language","topic":"Guide","article":"language","title":"語法學習資源","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Guide/qa","topicCode":"Guide","articleCode":"qa","chapterCode":"I","fullDisplayTitle":"網站簡介 / NTUCPC Guide Q & A","articleDisplayTitle":"NTUCPC Guide Q & A","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/qa","topic":"Guide","article":"qa","title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":[]}}]},{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/competitive_programming","topicCode":"Introduction","articleCode":"competitive_programming","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 資訊競賽介紹","articleDisplayTitle":"資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/competitive_programming","topic":"Introduction","article":"competitive_programming","title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Introduction/contests_type","topicCode":"Introduction","articleCode":"contests_type","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 比賽類型","articleDisplayTitle":"比賽類型","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/contests_type","topic":"Introduction","article":"contests_type","title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tw_contests","topicCode":"Introduction","articleCode":"tw_contests","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 台灣資訊競賽介紹","articleDisplayTitle":"台灣資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/tw_contests","topic":"Introduction","article":"tw_contests","title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}},{"code":"Introduction/online_judge","topicCode":"Introduction","articleCode":"online_judge","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 線上評測系統","articleDisplayTitle":"線上評測系統","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/online_judge","topic":"Introduction","article":"online_judge","title":"線上評測系統","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/resources","topicCode":"Introduction","articleCode":"resources","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 網路學習資源介紹","articleDisplayTitle":"網路學習資源介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/resources","topic":"Introduction","article":"resources","title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}}]}]},{"code":"II","displayTitle":"Chapter II. 新手上路","topics":[{"code":"Implementation","displayTitle":"實作技巧","articles":[{"code":"Implementation/basic_knowledge","topicCode":"Implementation","articleCode":"basic_knowledge","chapterCode":"II","fullDisplayTitle":"實作技巧 / 基本常識","articleDisplayTitle":"基本常識","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/basic_knowledge","topic":"Implementation","article":"basic_knowledge","title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"description":"講述一些競賽程式需要知道的最基本常識","prerequisites":["Introduction/online_judge"]}},{"code":"Implementation/input","topicCode":"Implementation","articleCode":"input","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見輸入類型","articleDisplayTitle":"常見輸入類型","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/input","topic":"Implementation","article":"input","title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的輸入格式","prerequisites":["Implementation/basic_knowledge"]}},{"code":"Implementation/reference","topicCode":"Implementation","articleCode":"reference","chapterCode":"II","fullDisplayTitle":"實作技巧 / Reference","articleDisplayTitle":"Reference","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/reference","topic":"Implementation","article":"reference","title":"Reference","authors":["baluteshih"],"contributors":[],"description":"Reference","prerequisites":[]}},{"code":"Implementation/compiler","topicCode":"Implementation","articleCode":"compiler","chapterCode":"II","fullDisplayTitle":"實作技巧 / 編譯器","articleDisplayTitle":"編譯器","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/compiler","topic":"Implementation","article":"compiler","title":"編譯器","authors":["WiwiHo"],"contributors":[],"description":"簡單介紹什麼是編譯器","prerequisites":[]}},{"code":"Implementation/error_message","topicCode":"Implementation","articleCode":"error_message","chapterCode":"II","fullDisplayTitle":"實作技巧 / 如何看錯誤訊息","articleDisplayTitle":"如何看錯誤訊息","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/error_message","topic":"Implementation","article":"error_message","title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"description":"介紹一些常見錯誤訊息的看法","prerequisites":["Implementation/compiler"]}},{"code":"Implementation/variable","topicCode":"Implementation","articleCode":"variable","chapterCode":"II","fullDisplayTitle":"實作技巧 / 全域、區域變數","articleDisplayTitle":"全域、區域變數","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/variable","topic":"Implementation","article":"variable","title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"description":"各種全域區域變數相關的事情","prerequisites":["Implementation/basic_knowledge","Implementation/reference","Implementation/compiler"]}},{"code":"Implementation/buglist","topicCode":"Implementation","articleCode":"buglist","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見錯誤列表","articleDisplayTitle":"常見錯誤列表","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/buglist","topic":"Implementation","article":"buglist","title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的錯誤","prerequisites":["Implementation/variable"]}}]},{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/intro","topicCode":"BasicAlgorithm","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/intro","topic":"BasicAlgorithm","article":"intro","title":"介紹","authors":["double"],"contributors":[],"description":"簡單介紹何謂演算法","prerequisites":["Introduction/competitive_programming"]}},{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},{"code":"BasicAlgorithm/algorithm_numeric","topicCode":"BasicAlgorithm","articleCode":"algorithm_numeric","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 標準函式庫 ── <algorithm> 與 <numeric>","articleDisplayTitle":"標準函式庫 ── <algorithm> 與 <numeric>","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/algorithm_numeric","topic":"BasicAlgorithm","article":"algorithm_numeric","title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"description":"介紹 STL <algorithm> 和 <numeric> 裡的幾個常用函式","prerequisites":["BasicAlgorithm/sorting"]}},{"code":"BasicAlgorithm/enumerate","topicCode":"BasicAlgorithm","articleCode":"enumerate","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 枚舉","articleDisplayTitle":"枚舉","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/enumerate","topic":"BasicAlgorithm","article":"enumerate","title":"枚舉","authors":["WiwiHo"],"contributors":[],"description":"簡單的枚舉技巧，不包含遞迴","prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/searching","topicCode":"BasicAlgorithm","articleCode":"searching","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 搜尋","articleDisplayTitle":"搜尋","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/searching","topic":"BasicAlgorithm","article":"searching","title":"搜尋","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/math_in_school","topicCode":"BasicAlgorithm","articleCode":"math_in_school","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 學校教的數學","articleDisplayTitle":"學校教的數學","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/math_in_school","topic":"BasicAlgorithm","article":"math_in_school","title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"description":"一些和基礎演算法設計技巧有關的課綱內數學問題，引導讀者從基礎數學發現演算法，並且訓練把人腦作法轉換成演算法的能力。","prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"]}}]},{"code":"GreedyAlgorithm","displayTitle":"貪心演算法","articles":[{"code":"GreedyAlgorithm/intuitive_greedy","topicCode":"GreedyAlgorithm","articleCode":"intuitive_greedy","chapterCode":"II","fullDisplayTitle":"貪心演算法 / 貪心法 I","articleDisplayTitle":"貪心法 I","topicDisplayTitle":"貪心演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"GreedyAlgorithm/intuitive_greedy","topic":"GreedyAlgorithm","article":"intuitive_greedy","title":"貪心法 I","authors":["baluteshih"],"contributors":[],"description":"生活中直覺的貪心題目","prerequisites":["BasicAlgorithm/algorithm_numeric"]}}]},{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/intro","topicCode":"BasicDataStructure","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/intro","topic":"BasicDataStructure","article":"intro","title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"description":"簡單介紹資料結構的概念","prerequisites":["Implementation/basic_knowledge"]}},{"code":"BasicDataStructure/vector","topicCode":"BasicDataStructure","articleCode":"vector","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 動態的陣列","articleDisplayTitle":"動態的陣列","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/vector","topic":"BasicDataStructure","article":"vector","title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicDataStructure/stack_queue_deque","topicCode":"BasicDataStructure","articleCode":"stack_queue_deque","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Stack、Queue 與 Deque","articleDisplayTitle":"Stack、Queue 與 Deque","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/stack_queue_deque","topic":"BasicDataStructure","article":"stack_queue_deque","title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/linked_list","topicCode":"BasicDataStructure","articleCode":"linked_list","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Linked List","articleDisplayTitle":"Linked List","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/linked_list","topic":"BasicDataStructure","article":"linked_list","title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}}]}]},{"code":"III","displayTitle":"Chapter III. 漸入佳境","topics":[{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/tactics","topicCode":"Introduction","articleCode":"tactics","chapterCode":"III","fullDisplayTitle":"資訊競賽介紹 / 比賽 + 練習策略","articleDisplayTitle":"比賽 + 練習策略","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"Introduction/tactics","topic":"Introduction","article":"tactics","title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}}]},{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/recursion","topicCode":"BasicAlgorithm","articleCode":"recursion","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 遞迴","articleDisplayTitle":"遞迴","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/recursion","topic":"BasicAlgorithm","article":"recursion","title":"遞迴","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/partial_sum","topicCode":"BasicAlgorithm","articleCode":"partial_sum","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 前綴和與差分","articleDisplayTitle":"前綴和與差分","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/partial_sum","topic":"BasicAlgorithm","article":"partial_sum","title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/two_pointers","topicCode":"BasicAlgorithm","articleCode":"two_pointers","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 雙指標","articleDisplayTitle":"雙指標","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/two_pointers","topic":"BasicAlgorithm","article":"two_pointers","title":"雙指標","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/binary_search_answer","topicCode":"BasicAlgorithm","articleCode":"binary_search_answer","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 對答案二分搜","articleDisplayTitle":"對答案二分搜","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/binary_search_answer","topic":"BasicAlgorithm","article":"binary_search_answer","title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"description":"","prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"]}}]},{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/binary_tree","topicCode":"BasicDataStructure","articleCode":"binary_tree","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / 二元樹","articleDisplayTitle":"二元樹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/binary_tree","topic":"BasicDataStructure","article":"binary_tree","title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/linked_list","Implementation/reference"]}},{"code":"BasicDataStructure/heap","topicCode":"BasicDataStructure","articleCode":"heap","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Heap","articleDisplayTitle":"Heap","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/heap","topic":"BasicDataStructure","article":"heap","title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}},{"code":"BasicDataStructure/set_map","topicCode":"BasicDataStructure","articleCode":"set_map","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Set 與 Map","articleDisplayTitle":"Set 與 Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/set_map","topic":"BasicDataStructure","article":"set_map","title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/heap"]}},{"code":"BasicDataStructure/unordered","topicCode":"BasicDataStructure","articleCode":"unordered","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Unordered Set 與 Unordered Map","articleDisplayTitle":"Unordered Set 與 Unordered Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/unordered","topic":"BasicDataStructure","article":"unordered","title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/set_map"]}},{"code":"BasicDataStructure/iterator","topicCode":"BasicDataStructure","articleCode":"iterator","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Iterator","articleDisplayTitle":"Iterator","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/iterator","topic":"BasicDataStructure","article":"iterator","title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/intro"]}}]},{"code":"BasicMath","displayTitle":"基礎數學","articles":[{"code":"BasicMath/basicalgo","topicCode":"BasicMath","articleCode":"basicalgo","chapterCode":"III","fullDisplayTitle":"基礎數學 / 常用數學演算法","articleDisplayTitle":"常用數學演算法","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/basicalgo","topic":"BasicMath","article":"basicalgo","title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"description":"一些不太難的數學","prerequisites":["BasicAlgorithm/math_in_school"]}},{"code":"BasicMath/number_theory","topicCode":"BasicMath","articleCode":"number_theory","chapterCode":"III","fullDisplayTitle":"基礎數學 / 基礎數論","articleDisplayTitle":"基礎數論","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/number_theory","topic":"BasicMath","article":"number_theory","title":"基礎數論","authors":["WiwiHo"],"contributors":[],"description":"","prerequisites":["BasicMath/basicalgo"]}}]}]}]}},"__N_SSG":true}