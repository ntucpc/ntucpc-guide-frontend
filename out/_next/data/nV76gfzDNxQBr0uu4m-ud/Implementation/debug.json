{"pageProps":{"props":{"mdxPath":"guide/content/Implementation/debug/debug.mdx","code":"Implementation/debug","structure":{"articles":[{"code":"AlgorithmAnalysis/proof","article":"proof","topic":"AlgorithmAnalysis","chapter":null,"valid":true,"title":"證明方法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/recursion"],"coming":false},{"code":"AlgorithmTechnique/bfs","article":"bfs","topic":"AlgorithmTechnique","chapter":"III","valid":false,"title":"廣度優先搜尋","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"AlgorithmTechnique/dc","article":"dc","topic":"AlgorithmTechnique","chapter":"III","valid":false,"title":"分治法","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"AlgorithmTechnique/dfs","article":"dfs","topic":"AlgorithmTechnique","chapter":"III","valid":false,"title":"深度優先搜尋","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"AlgorithmTechnique/discretization","article":"discretization","topic":"AlgorithmTechnique","chapter":"III","valid":false,"title":"離散化","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"AlgorithmTechnique/doubling","article":"doubling","topic":"AlgorithmTechnique","chapter":"III","valid":false,"title":"倍增法","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicAlgorithm/algorithm_numeric","article":"algorithm_numeric","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/sorting"],"coming":false},{"code":"BasicAlgorithm/binary_search_answer","article":"binary_search_answer","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"],"coming":false},{"code":"BasicAlgorithm/complexity","article":"complexity","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"prerequisites":["BasicAlgorithm/intro"],"coming":false},{"code":"BasicAlgorithm/enumerate","article":"enumerate","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"枚舉","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"],"coming":false},{"code":"BasicAlgorithm/intro","article":"intro","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"介紹","authors":["double"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"coming":false},{"code":"BasicAlgorithm/math_in_school","article":"math_in_school","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"],"coming":false},{"code":"BasicAlgorithm/partial_sum","article":"partial_sum","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"prerequisites":["BasicAlgorithm/enumerate"],"coming":false},{"code":"BasicAlgorithm/recursion","article":"recursion","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"遞迴","authors":["nathanlee726"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"coming":false},{"code":"BasicAlgorithm/searching","article":"searching","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"搜尋","authors":["rabhunter"],"contributors":[],"prerequisites":["BasicAlgorithm/algorithm_numeric"],"coming":false},{"code":"BasicAlgorithm/sorting","article":"sorting","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"排序演算法","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/complexity"],"coming":false},{"code":"BasicAlgorithm/sweep","article":"sweep","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"一維掃描線","authors":["WiwiHo"],"contributors":[],"prerequisites":["Implementation/rngbased","Implementation/structure_binding","BasicAlgorithm/enumerate","BasicAlgorithm/partial_sum"],"coming":false},{"code":"BasicAlgorithm/two_pointers","article":"two_pointers","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"雙指標","authors":["rabhunter"],"contributors":[],"prerequisites":["BasicAlgorithm/enumerate"],"coming":false},{"code":"BasicDataStructure/binary_tree","article":"binary_tree","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"prerequisites":["BasicDataStructure/linked_list","Implementation/reference"],"coming":false},{"code":"BasicDataStructure/binary_tree_and_stack","article":"binary_tree_and_stack","topic":"BasicDataStructure","chapter":null,"valid":true,"title":"二元樹與 Stack","authors":["8e7"],"contributors":["建中大講義團隊","WiwiHo"],"prerequisites":["BasicDataStructure/binary_tree"],"coming":false},{"code":"BasicDataStructure/heap","article":"heap","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicDataStructure/binary_tree"],"coming":false},{"code":"BasicDataStructure/intro","article":"intro","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"prerequisites":["Implementation/basic_knowledge"],"coming":false},{"code":"BasicDataStructure/iterator","article":"iterator","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicDataStructure/intro"],"coming":false},{"code":"BasicDataStructure/linked_list","article":"linked_list","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/vector"],"coming":false},{"code":"BasicDataStructure/set_map","article":"set_map","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/heap"],"coming":false},{"code":"BasicDataStructure/stack_queue_deque","article":"stack_queue_deque","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/vector"],"coming":false},{"code":"BasicDataStructure/unordered","article":"unordered","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/set_map"],"coming":false},{"code":"BasicDataStructure/vector","article":"vector","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"],"coming":false},{"code":"BasicDynamicProgramming/concept","article":"concept","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"基本概念","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"coming":true},{"code":"BasicDynamicProgramming/knapsack","article":"knapsack","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"背包問題","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/multidimensional"],"coming":true},{"code":"BasicDynamicProgramming/multidimensional","article":"multidimensional","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"多個維度的 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/state_and_transition"],"coming":true},{"code":"BasicDynamicProgramming/rolling","article":"rolling","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"滾動 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/knapsack","BasicDataStructure/vector"],"coming":true},{"code":"BasicDynamicProgramming/state_and_transition","article":"state_and_transition","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"狀態與轉移","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/top_down_and_bottom_up","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/partial_sum"],"coming":true},{"code":"BasicDynamicProgramming/subproblem","article":"subproblem","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"第一道動態規劃問題","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/recursion","BasicAlgorithm/complexity","BasicDynamicProgramming/concept"],"coming":true},{"code":"BasicDynamicProgramming/top_down_and_bottom_up","article":"top_down_and_bottom_up","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"Top down 與 Bottom up","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/subproblem","Implementation/buglist"],"coming":true},{"code":"BasicGraph/basic_tree","article":"basic_tree","topic":"BasicGraph","chapter":"III","valid":false,"title":"樹","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicGraph/bipartite_graph","article":"bipartite_graph","topic":"BasicGraph","chapter":"III","valid":false,"title":"二分圖","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicGraph/dfs_order","article":"dfs_order","topic":"BasicGraph","chapter":"III","valid":false,"title":"樹壓平","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicGraph/graph_concepts","article":"graph_concepts","topic":"BasicGraph","chapter":"III","valid":false,"title":"圖論導論","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicGraph/lca","article":"lca","topic":"BasicGraph","chapter":"III","valid":false,"title":"最低共同祖先","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicGraph/mst","article":"mst","topic":"BasicGraph","chapter":"III","valid":false,"title":"最小生成樹","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicGraph/shortest_path","article":"shortest_path","topic":"BasicGraph","chapter":"III","valid":false,"title":"最短路徑","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicGraph/topological_sort","article":"topological_sort","topic":"BasicGraph","chapter":"III","valid":false,"title":"拓撲排序","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicMath/basicalgo","article":"basicalgo","topic":"BasicMath","chapter":"III","valid":true,"title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/math_in_school"],"coming":false},{"code":"BasicMath/combinatorics","article":"combinatorics","topic":"BasicMath","chapter":"III","valid":false,"title":"基礎組合","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicMath/matrix","article":"matrix","topic":"BasicMath","chapter":"III","valid":false,"title":"什麼是矩陣","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"BasicMath/number_theory","article":"number_theory","topic":"BasicMath","chapter":"III","valid":true,"title":"基礎數論","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicMath/basicalgo"],"coming":false},{"code":"DataStructure/dsu","article":"dsu","topic":"DataStructure","chapter":"III","valid":false,"title":"併查集","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"DataStructure/monotonic_queue","article":"monotonic_queue","topic":"DataStructure","chapter":"III","valid":false,"title":"單調隊列","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"Example/subexample","article":"subexample","topic":"Example","chapter":null,"valid":true,"title":"subexample","authors":["example_author1","example_author2"],"contributors":["example_contributor1","example_contributor2"],"prerequisites":["example/example_dependency1","example/example_dependency2"],"coming":false},{"code":"GreedyAlgorithm/greedy_with_ds","article":"greedy_with_ds","topic":"GreedyAlgorithm","chapter":"III","valid":false,"title":"貪心法 III","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"GreedyAlgorithm/intuitive_greedy","article":"intuitive_greedy","topic":"GreedyAlgorithm","chapter":"II","valid":true,"title":"貪心法 I","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/algorithm_numeric"],"coming":false},{"code":"GreedyAlgorithm/unintuitive_greedy","article":"unintuitive_greedy","topic":"GreedyAlgorithm","chapter":"III","valid":false,"title":"貪心法 II","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"Guide/chapters","article":"chapters","topic":"Guide","chapter":"I","valid":true,"title":"章節與主題","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/learning"],"coming":false},{"code":"Guide/language","article":"language","topic":"Guide","chapter":"I","valid":true,"title":"語法學習資源","authors":["abc864197532"],"contributors":[],"prerequisites":["Guide/learning"],"coming":false},{"code":"Guide/learning","article":"learning","topic":"Guide","chapter":"I","valid":true,"title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"prerequisites":[],"coming":false},{"code":"Guide/math_symbol","article":"math_symbol","topic":"Guide","chapter":"I","valid":true,"title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"prerequisites":[],"coming":false},{"code":"Guide/problems","article":"problems","topic":"Guide","chapter":"I","valid":true,"title":"習題","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/learning"],"coming":false},{"code":"Guide/qa","article":"qa","topic":"Guide","chapter":"I","valid":true,"title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"prerequisites":[],"coming":false},{"code":"Implementation/basic_knowledge","article":"basic_knowledge","topic":"Implementation","chapter":"II","valid":true,"title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"prerequisites":["Introduction/online_judge"],"coming":false},{"code":"Implementation/buglist","article":"buglist","topic":"Implementation","chapter":"II","valid":true,"title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"prerequisites":["Implementation/variable"],"coming":false},{"code":"Implementation/compiler","article":"compiler","topic":"Implementation","chapter":"II","valid":true,"title":"編譯器","authors":["WiwiHo"],"contributors":[],"prerequisites":[],"coming":false},{"code":"Implementation/debug","article":"debug","topic":"Implementation","chapter":null,"valid":true,"title":"Debug","authors":["nathanlee726"],"contributors":[],"prerequisites":["Implementation/buglist"],"coming":false},{"code":"Implementation/error_message","article":"error_message","topic":"Implementation","chapter":"II","valid":true,"title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"prerequisites":["Implementation/compiler"],"coming":false},{"code":"Implementation/float_error","article":"float_error","topic":"Implementation","chapter":"III","valid":false,"title":"浮點數誤差","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"Implementation/input","article":"input","topic":"Implementation","chapter":"II","valid":true,"title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"prerequisites":["Implementation/basic_knowledge"],"coming":false},{"code":"Implementation/pseudo_pointer","article":"pseudo_pointer","topic":"Implementation","chapter":"III","valid":false,"title":"偽指標","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"Implementation/reference","article":"reference","topic":"Implementation","chapter":"II","valid":true,"title":"Reference","authors":["baluteshih"],"contributors":[],"prerequisites":[],"coming":false},{"code":"Implementation/rngbased","article":"rngbased","topic":"Implementation","chapter":"III","valid":false,"title":"Range-Based for loop","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"Implementation/structure_binding","article":"structure_binding","topic":"Implementation","chapter":"III","valid":false,"title":"Structure Binding","authors":[],"contributors":[],"prerequisites":[],"coming":true},{"code":"Implementation/variable","article":"variable","topic":"Implementation","chapter":"II","valid":true,"title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"prerequisites":["Implementation/basic_knowledge","Implementation/reference","Implementation/compiler"],"coming":false},{"code":"Introduction/competitive_programming","article":"competitive_programming","topic":"Introduction","chapter":"I","valid":true,"title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"prerequisites":["Guide/learning"],"coming":false},{"code":"Introduction/contests_type","article":"contests_type","topic":"Introduction","chapter":"I","valid":true,"title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"coming":false},{"code":"Introduction/online_judge","article":"online_judge","topic":"Introduction","chapter":"I","valid":true,"title":"線上評測系統","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"coming":false},{"code":"Introduction/resources","article":"resources","topic":"Introduction","chapter":"I","valid":true,"title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"coming":false},{"code":"Introduction/tactics","article":"tactics","topic":"Introduction","chapter":"III","valid":true,"title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"prerequisites":["Introduction/contests_type"],"coming":false},{"code":"Introduction/tw_contests","article":"tw_contests","topic":"Introduction","chapter":"I","valid":true,"title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/contests_type"],"coming":false}],"topics":[{"code":"Guide","title":"網站簡介","contents":["Guide/learning","Guide/chapters","Guide/problems","Guide/math_symbol","Guide/language","Guide/qa"]},{"code":"Introduction","title":"資訊競賽介紹","contents":["Introduction/competitive_programming","Introduction/contests_type","Introduction/tw_contests","Introduction/online_judge","Introduction/resources","Introduction/tactics"]},{"code":"Implementation","title":"實作技巧","contents":["Implementation/basic_knowledge","Implementation/input","Implementation/reference","Implementation/compiler","Implementation/error_message","Implementation/variable","Implementation/buglist","Implementation/debug","Implementation/rngbased","Implementation/structure_binding","Implementation/float_error","Implementation/pseudo_pointer"]},{"code":"BasicAlgorithm","title":"基礎演算法","contents":["BasicAlgorithm/intro","BasicAlgorithm/complexity","BasicAlgorithm/sorting","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/enumerate","BasicAlgorithm/searching","BasicAlgorithm/math_in_school","BasicAlgorithm/recursion","BasicAlgorithm/partial_sum","BasicAlgorithm/sweep","BasicAlgorithm/two_pointers","BasicAlgorithm/binary_search_answer"]},{"code":"BasicDataStructure","title":"基礎資料結構","contents":["BasicDataStructure/intro","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","BasicDataStructure/linked_list","BasicDataStructure/binary_tree","BasicDataStructure/heap","BasicDataStructure/set_map","BasicDataStructure/unordered","BasicDataStructure/iterator","BasicDataStructure/binary_tree_and_stack"]},{"code":"GreedyAlgorithm","title":"貪心演算法","contents":["GreedyAlgorithm/intuitive_greedy","GreedyAlgorithm/unintuitive_greedy","GreedyAlgorithm/greedy_with_ds"]},{"code":"BasicMath","title":"基礎數學","contents":["BasicMath/basicalgo","BasicMath/number_theory","BasicMath/combinatorics","BasicMath/matrix"]},{"code":"AlgorithmTechnique","title":"演算法技巧","contents":["AlgorithmTechnique/dfs","AlgorithmTechnique/bfs","AlgorithmTechnique/discretization","AlgorithmTechnique/dc","AlgorithmTechnique/doubling"]},{"code":"BasicDynamicProgramming","title":"基礎動態規劃","contents":["BasicDynamicProgramming/concept","BasicDynamicProgramming/subproblem","BasicDynamicProgramming/top_down_and_bottom_up","BasicDynamicProgramming/state_and_transition","BasicDynamicProgramming/multidimensional","BasicDynamicProgramming/knapsack","BasicDynamicProgramming/rolling"]},{"code":"DataStructure","title":"資料結構","contents":["DataStructure/monotonic_queue","DataStructure/dsu"]},{"code":"BasicGraph","title":"基礎圖論","contents":["BasicGraph/graph_concepts","BasicGraph/bipartite_graph","BasicGraph/basic_tree","BasicGraph/dfs_order","BasicGraph/topological_sort","BasicGraph/shortest_path","BasicGraph/mst","BasicGraph/lca"]}],"topicGroups":[{"single":true,"title":"","topics":["Guide"]},{"single":true,"title":"","topics":["Introduction"]},{"single":true,"title":"","topics":["Implementation"]},{"single":true,"title":"","topics":["BasicAlgorithm"]},{"single":true,"title":"","topics":["BasicDataStructure"]},{"single":true,"title":"","topics":["GreedyAlgorithm"]},{"single":true,"title":"","topics":["BasicMath"]},{"single":true,"title":"","topics":["AlgorithmTechnique"]},{"single":true,"title":"","topics":["BasicDynamicProgramming"]},{"single":true,"title":"","topics":["DataStructure"]},{"single":true,"title":"","topics":["BasicGraph"]}],"chapters":[{"code":"I","title":"Chapter I. 初來乍到","contents":["Guide/learning","Guide/chapters","Guide/problems","Guide/math_symbol","Guide/language","Guide/qa","Introduction/competitive_programming","Introduction/contests_type","Introduction/tw_contests","Introduction/online_judge","Introduction/resources"]},{"code":"II","title":"Chapter II. 新手上路","contents":["Implementation/basic_knowledge","Implementation/input","Implementation/reference","Implementation/compiler","Implementation/error_message","Implementation/variable","Implementation/buglist","BasicAlgorithm/intro","BasicAlgorithm/complexity","BasicAlgorithm/sorting","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/enumerate","BasicAlgorithm/searching","BasicAlgorithm/math_in_school","GreedyAlgorithm/intuitive_greedy","BasicDataStructure/intro","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","BasicDataStructure/linked_list"]},{"code":"III","title":"Chapter III. 漸入佳境","contents":["Introduction/tactics","Implementation/rngbased","Implementation/structure_binding","Implementation/float_error","Implementation/pseudo_pointer","BasicAlgorithm/recursion","BasicAlgorithm/partial_sum","BasicAlgorithm/sweep","BasicAlgorithm/two_pointers","BasicAlgorithm/binary_search_answer","BasicDataStructure/binary_tree","BasicDataStructure/heap","BasicDataStructure/set_map","BasicDataStructure/unordered","BasicDataStructure/iterator","GreedyAlgorithm/unintuitive_greedy","GreedyAlgorithm/greedy_with_ds","BasicMath/basicalgo","BasicMath/number_theory","BasicMath/combinatorics","BasicMath/matrix","AlgorithmTechnique/dfs","AlgorithmTechnique/bfs","AlgorithmTechnique/discretization","AlgorithmTechnique/dc","AlgorithmTechnique/doubling","BasicDynamicProgramming/concept","BasicDynamicProgramming/subproblem","BasicDynamicProgramming/top_down_and_bottom_up","BasicDynamicProgramming/state_and_transition","BasicDynamicProgramming/multidimensional","BasicDynamicProgramming/knapsack","BasicDynamicProgramming/rolling","DataStructure/monotonic_queue","DataStructure/dsu","BasicGraph/graph_concepts","BasicGraph/bipartite_graph","BasicGraph/basic_tree","BasicGraph/dfs_order","BasicGraph/topological_sort","BasicGraph/shortest_path","BasicGraph/mst","BasicGraph/lca"]}]},"content":[["guide/content/Implementation/debug/debug.mdx",{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Info, Refcode} = _components;\n  if (!Info) _missingMdxReference(\"Info\", true);\n  if (!Refcode) _missingMdxReference(\"Refcode\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      refId: \"良好的寫 code 習慣\",\n      children: \"良好的寫 code 習慣\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"debug 是讓人非常頭痛的事情，在想著怎麽 debug 之前，我們應該先試著想盡辦法讓 bug 不要出現，畢竟只要沒有 bug，就沒有 debug 的問題了。所以在談 debug 之前，我們先來學習一些寫 code 的技巧來減少 bug 出現的機會：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"清楚的命名\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"善用函式\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"分段完成程式\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"良好的寫 code 習慣-清楚的命名\",\n      children: \"清楚的命名\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"清楚的命名可以讓你的程式增加可讀性，也可以減少變數被誤用的機會，從而降低出 bug 的機會。以下程式碼為例，我們需要讀入一個人的年齡、性別、身高、體重等資訊。如果我們使用上面那種變數命名法，那在輸入時便一目了然，不容易出錯。不過，如果我們選擇下面那種比較懶惰的命名法，那在輸入時就會比較難取用變數，不小心打錯的話也會很難看出來。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#include<iostream>\\nusing namespace std;\\n\\nint main() {\\n    //do's...\\n    int age, height, weight;\\n    char gender;\\n    cin >> age >> gender >> height >> weight;\\n\\n    //dont's...\\n    int a, b, c;\\n    char d;\\n    cin >> a >> d >> b >> c;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"良好的寫 code 習慣-善用函式\",\n      children: \"善用函式\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果程式碼中存在同一段 code 需要出現在很多地方，不妨把他寫成函式，這樣能為你的程式碼帶來許多好處：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"增加可讀性：只要我們有好好的為函式命名，那我們就可以根據函式的名稱，清楚的了解一段程式碼片段的功用，而非一行一行程式碼理解。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"方便修改：如果我們需要對這個函式的某處進行修改，那只需要修改被包成函式的程式碼即可，而不用在每個出現這段程式碼的地方一個一個修改。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"架構、條理明確：有了函式的協助，程式運作邏輯以及各項細部分工就會變得十分明確，在 debug 時也會更容易閱讀程式碼。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"良好的寫 code 習慣-分段完成程式\",\n      children: \"分段完成程式\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"比起一份完整的程式碼，一小段 code 肯定更好 debug。所以當我們在寫一份很長的程式碼時，盡量每完成一段 code，就針對這段 code，進行一次檢查。這樣有助於我們在不小心寫出 bug 以後盡早發現他，而不是在完成了一整份長到不行的程式碼後，才來找一個一開始就寫錯的東西。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"Debug 技巧\",\n      children: \"Debug 技巧\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"人難免會犯錯，即使我們寫 code 的時候再謹慎，還是難以避免 bug 的出現，因此，debug 的流程是難以避免的。debug 簡單來說，就是在確認自己的想法邏輯沒有錯誤後，逐一檢查程式碼中的哪一個部份並沒有照預期的方式運作。檢查的方式除了閱讀程式碼，用人腦來執行程式以外，也可善用一些技巧，獲得程式執行時的各種資訊來助自己 debug。以下是一些在程式競賽中常被使用的 debug 技巧：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"輸出大法\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"assert\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"暴力對拍\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"黃色小鴨 debug 法\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"Debug 技巧-輸出大法\",\n      children: \"輸出大法\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"輸出大法指的是把可能出錯的變數，在各種可能出錯的地方輸出出來，從而檢查程式的運算可能是哪裡出問題。不過，這樣子在程式中加上額外輸出的話，我們就得在上傳之前，把所有額外輸出註解掉，要是上傳完還得繼續 debug 的話，我們又得花一堆時間取消註解，相當麻煩。想解決這個問題的話，可以試著搭配 \", _jsx(_components.code, {\n        children: \"#define\"\n      }), \" 以及 \", _jsx(_components.code, {\n        children: \"#ifdef\"\n      }), \"，具體使用方式如下：\"]\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#include<iostream>\\nusing namespace std;\\n#define debug\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b;\\n#ifdef debug\\n    cerr << a << \\\" \\\" << b << endl;\\n#endif\\n    cout << a + b << endl;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"我們用 \", _jsx(_components.code, {\n        children: \"#ifdef\"\n      }), \" 和 \", _jsx(_components.code, {\n        children: \"#endif\"\n      }), \" 把我們用來輸出 debug 訊息的程式碼包起來。這邊我們使用 \", _jsx(_components.code, {\n        children: \"cerr\"\n      }), \" 標準錯誤來輸出錯誤訊息，與 \", _jsx(_components.code, {\n        children: \"cout\"\n      }), \" 標準輸出不同的地方是，\", _jsx(_components.code, {\n        children: \"cout\"\n      }), \" 在輸出時不會立刻輸出出去，而 \", _jsx(_components.code, {\n        children: \"cerr\"\n      }), \" 則會直接在程式執行到時直接將內容輸出，方便我們即時看到這些 debug 訊息。接著，我們只需要在程式碼前面 \", _jsx(_components.code, {\n        children: \"#define debug\"\n      }), \" 或是在編譯指令中加上 \", _jsx(_components.code, {\n        children: \"-Ddebug\"\n      }), \" 便可以讓編譯器在編譯程式碼的時候將輸出 debug 訊息的指令也進行編譯。不過使用 \", _jsx(_components.code, {\n        children: \"#define debug\"\n      }), \" 的話，要記得在上傳之前將這行刪掉，不然 judge 的編譯器就會把你用來輸出 debug 訊息的指令拿去編譯了。\"]\n    }), \"\\n\", _jsx(Info, {\n      type: \"info\",\n      children: _jsxs(_components.p, {\n        children: [\"要注意 \", _jsx(_components.code, {\n          children: \"cerr\"\n        }), \" 預設會跟 \", _jsx(_components.code, {\n          children: \"cout\"\n        }), \" 繫結 (tie) 在一起，如果不想被 \", _jsx(_components.code, {\n          children: \"cout\"\n        }), \" 的 \", _jsx(_components.code, {\n          children: \"flush\"\n        }), \" 影響的話，可以用 \", _jsx(_components.code, {\n          children: \"cerr.tie(0)\"\n        }), \" 解除繫結。此外，\", _jsx(_components.code, {\n          children: \"cerr\"\n        }), \" 的輸出不會被 judge 讀到，因此忘記刪除的話並不會造成 WA，但是輸出需要的時間可能會造成 TLE，因此上傳程式碼前最好還是要把 \", _jsx(_components.code, {\n          children: \"cerr\"\n        }), \" 拿掉。\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"如果會嫌打一堆 \", _jsx(_components.code, {\n        children: \"#ifdef\"\n      }), \" 和 \", _jsx(_components.code, {\n        children: \"#endif\"\n      }), \" 太麻煩，我們可以將 debug 時輸出訊息的程式碼寫成一個函式，再用 \", _jsx(_components.code, {\n        children: \"#ifdef\"\n      }), \" 和 \", _jsx(_components.code, {\n        children: \"#endif\"\n      }), \" 把這些程式碼包起來。\"]\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#ifdef Debug\\n#define debug(x) cerr << x << '\\\\n'\\n#else\\n#define debug(x) \\n#endif\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果稍微熟悉語法的話，甚至可以自己設計 debug code 來讓它顯示更多資訊，以下是一份能夠顯示所在行數以及輸出的變數名稱的 debug code：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#ifdef LOCAL\\n#define debug(arg...) cerr << \\\"#\\\" << __LINE__ << \\\" :[\\\" << #arg << \\\"]\\\", __print(args)\\ntemplate<class T> void __print(T && x) { cerr << x << endl; }\\ntemplate<class T, class ...S> void __print(T && x, S&&...y) {cerr << x << \\\", \\\", __print(y...);}\\n#else\\n#define debug(...) ((void)0)\\n#endif\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"Debug 技巧-assert\",\n      children: \"assert\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"assert\"\n      }), \" 的用途是用來確保程式執行的某個階段時，變數資料有滿足某個條件，用法是傳入一個 bool 變數，並在該變數為 false 時終止程式並造成 RE。通常適用於幫助我們檢查某些變數的值是否處於它應該處於的範圍，我們可以用 assert 在程式的特定階段檢查這個變數，並在其所儲存的值不合理時直接中止程式並回報錯誤。\"]\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#include<bits/stdc++.h>\\nusing namespace std;\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b;\\n    assert(a > 0 && b > 0); //如果 a 或 b 不滿足 > 0 的話，程式會回傳錯誤 Runtime Erroe\\n    cout << a + b << endl;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"assert\"\n      }), \" 這個函式是被放在 \", _jsx(_components.code, {\n        children: \"cassert\"\n      }), \" 這個標頭檔中，如果沒有 \", _jsx(_components.code, {\n        children: \"#include<bits/stdc++.h>\"\n      }), \" 的話要特別注意！\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"Debug 技巧-暴力對拍\",\n      children: \"暴力對拍\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"暴力對拍指的是我們試著隨機生成測資，然後寫一個暴力解，接著檢查暴力解和自己寫的解結果是不是一樣的。透過這個方法，我們可以在不確定程式為什麽出錯的情況下找到一組會讓程式出錯的測資，從而協助我們 debug。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"至於要如何隨機生成測資呢？這邊介紹一個好用的 random 工具 \", _jsx(_components.code, {\n        children: \"mt19937\"\n      }), \"。\", _jsx(_components.code, {\n        children: \"mt19937\"\n      }), \" 可以被看成一種資料型別，我們可以用他來生成變數，那這個變數就會是一個隨機變數，我們在宣告隨機變數時會給他一個 seed 作為參數，並在每次生成不一樣的測資時都使用不一樣的 seed，這樣才能確保每次都生成出不一樣的隨機測資。完成宣告後，我們就可以用這個隨機變數生成 $[0, 2^{32} - 1]$ 的值！\"]\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#include<bits/stdc++.h>\\nusing namespace std;\\n\\nint main() {\\n    mt19937 rng(time(NULL));\\n    cout << (rng() % 10) << endl; // 隨機生成介於 0 ~ 9 之間的整數\\n}\\n\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"同樣的，mt19937 也被特別放在 \", _jsx(_components.code, {\n        children: \"random\"\n      }), \" 這個標頭檔之中，沒有 \", _jsx(_components.code, {\n        children: \"#include<bits/stdc++.h>\"\n      }), \" 的話要特別注意。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"當我們完成一份能夠隨機生成測資的程式碼後，我們就可以寫一份具有正確性的暴力解，然後比對兩個程式的輸出是否一致。如果暴力解太難寫，我們也可以直接手算測資的答案。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"Debug 技巧-黃色小鴨 debug 法\",\n      children: \"黃色小鴨 debug 法\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"源自於一個工程師的故事，講述這個工程師在 debug 時會向著隨身攜帶的黃色小鴨說明程式碼來 debug。這邊指的是跟一個假想的人物、或是你帶進考場的玩偶解釋你的程式碼是如何運作的，藉此檢驗程式在邏輯上有沒有明顯不合常理之處。雖然聽起來有些荒謬，但程式的 bug 往往位於那些盲點區域，當我們嘗試去解釋一個程式在做什麽時，我們才比較有機會看到這些盲點。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}]],"sections":[{"text":"良好的寫 code 習慣","depth":1,"code":"良好的寫 code 習慣"},{"text":"清楚的命名","depth":2,"code":"良好的寫 code 習慣-清楚的命名"},{"text":"善用函式","depth":2,"code":"良好的寫 code 習慣-善用函式"},{"text":"分段完成程式","depth":2,"code":"良好的寫 code 習慣-分段完成程式"},{"text":"Debug 技巧","depth":1,"code":"Debug 技巧"},{"text":"輸出大法","depth":2,"code":"Debug 技巧-輸出大法"},{"text":"assert","depth":2,"code":"Debug 技巧-assert"},{"text":"暴力對拍","depth":2,"code":"Debug 技巧-暴力對拍"},{"text":"黃色小鴨 debug 法","depth":2,"code":"Debug 技巧-黃色小鴨 debug 法"}],"gaId":"G-XCS0L6MZE3"}},"__N_SSG":true}