{"pageProps":{"props":{"mdxPath":"guide/content/BasicAlgorithm/complexity/complexity.mdx","content":[["guide/content/BasicAlgorithm/complexity/complexity.mdx",{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    br: \"br\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    strong: \"strong\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Figure, Proof, Refcode, Theorem} = _components;\n  if (!Figure) _missingMdxReference(\"Figure\", true);\n  if (!Proof) _missingMdxReference(\"Proof\", true);\n  if (!Refcode) _missingMdxReference(\"Refcode\", true);\n  if (!Theorem) _missingMdxReference(\"Theorem\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      refId: \"淺談時間複雜度\",\n      children: \"淺談時間複雜度\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"淺談時間複雜度-什麼是時間複雜度\",\n      children: \"什麼是時間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"時間複雜度代表執行一個程式所需要花費的時間，通常會用一個函數表示。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最常被用來表示這個函數的符號是 $T(n)$，其中 $n$ 與輸入變數的大小有關，一般來說都要考慮這個函數的最糟狀況，也就是對於輸入的 $n$ 這個程式最多需要跑多久。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"淺談時間複雜度-為什麼要學時間複雜度\",\n      children: \"為什麼要學時間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我們會很在乎一個程式要跑多久的時間，因為他會影響到解決問題的效率。這時可能會有人這時候會想說：「不是直接跑下去就知道了？」，但實際上我們不一定有辦法等他跑那麼久，甚至可能等一輩子都跑不完。因此，我們需要先評估一下這個程式的時間複雜度，預測一下需要執行多久，如果真的需要跑很久的話就不要去試了。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"淺談時間複雜度-計算步驟數量\",\n      children: \"計算步驟數量\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"要計算一個程式的複雜度，首先需要先估計一個程式需要跑多久的時間，我們用以下程式碼當作範例：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"void bubble_sort(int arr[], int n) { // arr: 要排序的陣列，n: 陣列大小\\n    for (int i = 0; i < n - 1; ++i)              // n 次運算\\n        for (int j = 0; j < n - i - 1; ++j)      // (n - 1) + (n - 2) + ... + 1 = n * (n - 1) / 2 次運算\\n            if (arr[j] > arr[j + 1]) {           // n * (n - 1) / 2 次運算\\n                int tmp = arr[j];                // 至多 n * (n - 1) / 2 次運算\\n                arr[j] = arr[j + 1];             // 至多 n * (n - 1) / 2 次運算\\n                arr[j + 1] = tmp;                // 至多 n * (n - 1) / 2 次運算\\n            }\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"可以計算出這個程式需要執行的步驟數量至多為\", _jsx(_components.br, {}), \"\\n\", \"$$ n + 5 \\\\times \\\\frac{n(n-1)}{2} = \\\\frac{5}{2} n^2 - \\\\frac{3}{2} n$$\", _jsx(_components.br, {}), \"\\n\", \"在算出步驟數量後，我們就可以去預估程式的執行時間了。假設電腦一秒鐘大約可以跑 $10^9$ 次基礎運算，則當 $n=10^5$ 時這個程式至多需要跑 $\\\\frac{2.5 \\\\times 10^5 \\\\times 10^5 - 1.5 \\\\times 10^5}{10^9} \\\\approx 25$ 秒。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"空間複雜度\",\n      children: \"空間複雜度\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"除了程式的執行時間，我們也很在乎這個程式用了多少記憶體，過大的記憶體使用量會導致電腦無法執行。記憶體使用量就是這個程式的空間複雜度，而這會與變數型態、變數數量以及陣列大小有關。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"計算空間複雜度的方法與時間複雜度類似，因此就不再多描述。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"複雜度符號\",\n      children: \"複雜度符號\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"複雜度符號-符號定義\",\n      children: \"符號定義\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有時候，我們不需要太在意複雜度函數的準確值，而是只看他的成長趨勢。以下來介紹幾個常用複雜度函數符號：\"\n    }), \"\\n\", _jsxs(Theorem, {\n      type: \"definition\",\n      title: \"Big-O\",\n      number: \"1\",\n      children: [_jsx(_components.p, {\n        children: \"$O$ 這個符號讀做 Big-O，表示一個函數成長趨勢的上限（係數不重要）。\"\n      }), _jsx(_components.p, {\n        children: \"例如 $T(n) = 100000 n + 3$，則 $T(n)$ 是 $O(n)$，也是 $O(n^2)$。\"\n      }), _jsx(_components.p, {\n        children: \"（不一定要會的）嚴謹數學定義是：若存在一個夠大的實數 $n_0$ 以及 $c$，滿足對於所有 $n > n_0$ 都有 $0 \\\\leq f(n) < cg(n)$，則 $f(n) = O(g(n))$\"\n      })]\n    }), \"\\n\", _jsxs(Theorem, {\n      type: \"definition\",\n      title: \"little-o\",\n      number: \"2\",\n      children: [_jsx(_components.p, {\n        children: \"$o$ 這個符號讀做 little-O，表示一個函數成長趨勢的寬鬆上限，且這個上限是無法到達的（係數不重要）。\"\n      }), _jsx(_components.p, {\n        children: \"例如 $T(n) = 100000 n + 3$，則 $T(n)$ 是 $o(n^2)$，但不是 $o(n)$。\"\n      }), _jsx(_components.p, {\n        children: \"（不一定要會的）嚴謹數學定義是：若對於任意實數 $c$，都存在足夠大的 $n_0$，滿足對於所有 $n > n_0$ 都有 $0 \\\\leq f(n) < cg(n)$，則 $f(n) = O(g(n))$\"\n      })]\n    }), \"\\n\", _jsxs(Theorem, {\n      type: \"definition\",\n      title: \"Big-Omega\",\n      number: \"3\",\n      children: [_jsx(_components.p, {\n        children: \"$\\\\Omega$ 這個符號讀做 Big-Omega，表示一個函數成長趨勢的下界（係數不重要）。\"\n      }), _jsx(_components.p, {\n        children: \"例如 $T(n) = n^2 - 1000n - 100$，則 $T(n) = \\\\Omega(n^2)$，也是 $\\\\Omega(n^3)$。\"\n      }), _jsx(_components.p, {\n        children: \"（不一定要會的）嚴謹數學定義是：若存在一個夠大的實數 $n_0$ 以及 $c$，滿足對於所有 $n > n_0$ 都有 $f(n) > cg(n) \\\\geq 0$，則 $f(n) = \\\\Omega(g(n))$\"\n      })]\n    }), \"\\n\", _jsxs(Theorem, {\n      type: \"definition\",\n      title: \"little-Omega\",\n      number: \"4\",\n      children: [_jsx(_components.p, {\n        children: \"$\\\\omega$ 這個符號讀做 little-Omega，表示一個函數成長趨勢的寬鬆下界，且這個下界是無法到達的（係數不重要）。\"\n      }), _jsx(_components.p, {\n        children: \"例如 $T(n) = n^2 - 1000n - 100$，則 $T(n) = \\\\omega(n^3)$，但不是 $\\\\omega(n^2)$。\"\n      }), _jsx(_components.p, {\n        children: \"（不一定要會的）嚴謹數學定義是：若對於任意實數 $c$，都存在足夠大的 $n_0$，滿足對於所有 $n > n_0$ 都有 $f(n) > cg(n) \\\\geq 0$，則 $f(n) = \\\\omega(g(n))$\"\n      })]\n    }), \"\\n\", _jsxs(Theorem, {\n      type: \"definition\",\n      title: \"Theta\",\n      number: \"5\",\n      children: [_jsx(_components.p, {\n        children: \"$\\\\Theta$ 這個符號讀做 Theta，表示一個函數成長趨勢的上限（係數不重要）。\"\n      }), _jsx(_components.p, {\n        children: \"例如 $T(n) = n^2 - 1000n - 100$，則 $T(n) = \\\\Theta(n^2)$，但不是 $\\\\Theta(n^3)$ 也不是 $\\\\Theta(n)$。\"\n      }), _jsx(_components.p, {\n        children: \"（不一定要會的）嚴謹數學定義是：若存在一個夠大的實數 $n_0$ 以及 $c_1, c_2$，滿足對於所有 $n > n_0$ 都有 $0 \\\\leq c_1g(n) < f(n) < c_2g(n)$，則 $f(n) = \\\\Theta(g(n))$\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"複雜度符號-補充\",\n      children: \"補充\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"相信大家看到上面提到「係數不重要」可能有些不了解，一個比較不嚴謹的說法是，把所有常數係數都改成 1 ，例如：把 $1000 n^2 - 100 n + 10000$ 換成 $n^2 + n + 1$，再來去比較每一項的成長趨勢，只留下成長趨勢最快的，所以就把 $n^2 + n + 1$ 變成 $n^2$。接著在代換完之後，可以把 $O,o,\\\\Omega,\\\\omega,\\\\Theta$ 分別對應到 $\\\\leq, <, \\\\geq, >, =$ 的大小關係去比較。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"用以下圖片來解釋一下為什麼常數不重要：\"\n    }), \"\\n\", _jsx(Figure, {\n      src: \"/files/content/BasicAlgorithm/complexity/figure/functions.png\",\n      width: \"400\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"其中綠色曲線符號是 $f(n) = n^2$，紅色曲線是 $g(n) = 3n^2$，藍色曲線是 $h(n) = \\\\frac{1}{3} n^3$，儘管 $h$ 的常數很小，$f, g$ 的常數很大，但由於 $n^3$ 的成長趨勢比 $n^2$ 快，也就是 $n^2 = o(n^3)$，所以當 $n$ 足夠大時 $h(n)$ 還是會比 $f(n)$ 跟 $g(n)$ 大。所以這就是為什麼我們計算時間複雜度時只看成長速度最快的那項，並且不過度在意係數的原因。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"通常我們在做題目的時候，只會考慮這個做法的複雜度的上界，也就是 $O$，儘管他在大部分的情況不會達到這個複雜度，我們還是必須考慮最糟的情況，確保每個情況都能在這個複雜度的時間內跑完。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"另外，假設時間限制是 $t$ 秒，而某個做法複雜度是 $O(f(n))$，只要常數不要太大的話，只要 $f(n) \\\\leq 10^8\\\\times t$ 通常都可以通過，有時候順利的話 $10^9\\\\times t$ 也可以通過。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但是，複雜度並不能計算絕對時間，只能計算 $n$ 大小變化時的成長趨勢。另外，在 $n$ 很小時或是某些特殊情況下，複雜度大但常數小的演算法反而會跑的比複雜度小但常數大的演算法快。（常數較大的運算包含輸入、輸出、除法、% 運算，其中除法、% 運算的常數會是加減法的 5 倍以上）\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"複雜度符號-性質\",\n      children: \"性質\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在分析複雜度時，會常常用到以下兩個性質：\"\n    }), \"\\n\", _jsx(Theorem, {\n      type: \"observation\",\n      title: \"複雜度相加\",\n      number: \"1\",\n      children: _jsx(_components.p, {\n        children: \"如果 $g(n) = O(f(n))$，則 $f(n) + g(n) = O(f(n))$\"\n      })\n    }), \"\\n\", _jsx(Proof, {\n      expanded: \"false\",\n      children: _jsx(_components.p, {\n        children: \"假設 $\\\\forall n > n_0$ 都有 $g(n) < cf(n)$，則 $\\\\forall n > n_0$ 都有 $g(n) < (c+1) f(n)$，故 $f(n) + g(n) = O(f(n))$。\"\n      })\n    }), \"\\n\", _jsx(Theorem, {\n      type: \"observation\",\n      title: \"複雜度相乘\",\n      number: \"2\",\n      children: _jsx(_components.p, {\n        children: \"若 $f(n) = O(h_1(n))$ 且 $g(n) = O(h_2(n))$，則 $f(n) \\\\cdot g(n) = O(h_1(n) \\\\cdot h_2(n))$\"\n      })\n    }), \"\\n\", _jsx(Proof, {\n      expanded: \"false\",\n      children: _jsx(_components.p, {\n        children: \"假設 $\\\\forall n > n_1$ 都有 $f(n) < c_1h_1(n)$，$\\\\forall n > n_2$ 都有 $g(n) < c_2h_2(n)$，則 $\\\\forall n > \\\\max(n_1, n_2)$ 都有 $f(n) \\\\cdot g(n) < c_1c_2 \\\\cdot (h_1(n) \\\\cdot h_2(n))$，故 $f(n) \\\\cdot g(n) = O(h_1(n) \\\\cdot h_2(n))$。\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"也就是說，把兩段程式碼接在一起的程式，複雜度會是兩者中較大的。如果程式碼是巢狀迴圈包住某個基礎運算時，複雜度會是每一層需要跑的次數相乘起來。不過，當迴圈可能提前結束或是有加上其他判斷條件時，實際上的時間複雜度可能不會那麼大，等等的第三個例子會舉出反例。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"例題\",\n      children: \"例題\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下透過幾個例題，來幫助大家學會分析複雜度：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"bool is_prime(int n) { // 判斷 n 是否是質數\\n    if (n == 1) return false;\\n    for (int i = 2; i * i <= n; ++i)\\n        if (n % i == 0) return false;\\n    // 若 n 不是質數，假設 n = a * b (a, b > 1)，則 min(a, b) * min(a, b) <= a * b = n\\n    // 也就是 n 不是質數若且唯若 n 的其中一個因數會介於 2 到 sqrt(n) 之間或 n = 1\\n    return true;\\n    // 若找不到介於 2 到 sqrt(n) 的因數，則 n 為質數\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"其中特判 \", _jsx(_components.code, {\n        children: \"n == 1\"\n      }), \" 的部分是 $O(1)$， \", _jsx(_components.code, {\n        children: \"for\"\n      }), \" 迴圈總共會跑至多 $\\\\sqrt{n}$ 次，而迴圈內的運算每次執行都是 $O(1)$ 時間，因此總時間複雜度為 $T(n) = O(1) + O(\\\\sqrt{n}) \\\\cdot O(1) = O(1) + O(\\\\sqrt{n}) = O(\\\\sqrt{n})$。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"空間複雜度的部分，除了 $n$ 以外只多用了一個變數 $i$ ，因此空間複雜度為 $O(1)$。\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"int solve(int n) {\\n    if (n == 0) return 0;\\n    return solve(n - 1) + 1;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在 \", _jsx(_components.code, {\n        children: \"return\"\n      }), \" 之前的部分時間複雜度為 $O(1)$，因此將可以列出複雜度的遞迴關係為 $T(n) = T(n - 1) + O(1)$，然後繼續往下遞迴可以得知時間複雜度為\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"\\\\[\", _jsx(_components.br, {}), \"\\n\", \"\\\\begin{align*}\", _jsx(_components.br, {}), \"\\n\", \"T(n) &= T(n - 1) + O(1) \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= T(n - 2) + 2 \\\\cdot O(1)  \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= T(n - 3) + 3 \\\\cdot O(1)  \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= \\\\cdots  \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= T(0) + n \\\\cdot O(1)  \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= O(1) + n \\\\cdot O(1)  \\\\\\\\\", _jsx(_components.br, {}), \"\\n\", \"&= O(n)\", _jsx(_components.br, {}), \"\\n\", \"\\\\end{align*}\\\\]\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"空間複雜度的部分，雖然看起來沒有用到新的變數，但實際上每次函數中的參數 $n$ 會占用 $O(1)$ 的空間，因此 $n$ 次遞迴加總起來的結果會占用 $O(n)$ 的空間。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"再來看一個比較難的例子：\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"int monotonic_stack(int arr[], int stk[], int n) { // n: arr 陣列的大小\\n    int stk_size = 0;\\n    for (int i = 0; i < n; ++i) {\\n        while (stk_size > 0 && stk[stk_size - 1] <= arr[i]) {\\n            --stk_size;\\n        }\\n        stk[stk_size++] = arr[i];\\n    }\\n    return stk_size;\\n}\\n\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在第四行的 \", _jsx(_components.code, {\n        children: \"for\"\n      }), \" 迴圈會跑 $n$ 次，由於 \", _jsx(_components.code, {\n        children: \"stk_size\"\n      }), \" 可能會到 $n$，因此第五行的 \", _jsx(_components.code, {\n        children: \"while\"\n      }), \" 迴圈可能會被跑 $n$ 次，此時可能會想說時間複雜度就是 $O(n) \\\\times O(n) = O(n^2)$。但實際上不是這樣的，如果我們不是關注每次 \", _jsx(_components.code, {\n        children: \"for\"\n      }), \" 迴圈時 \", _jsx(_components.code, {\n        children: \"while\"\n      }), \" 迴圈會被跑幾次，而是關注 \", _jsx(_components.code, {\n        children: \"while\"\n      }), \" 迴圈\", _jsx(_components.strong, {\n        children: \"總共\"\n      }), \"會被跑幾次呢？\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"由於每次跑 \", _jsx(_components.code, {\n        children: \"while\"\n      }), \" 迴圈會讓 \", _jsx(_components.code, {\n        children: \"stk_size\"\n      }), \" 減去一、卻不會使其 $<0$，又因為 \", _jsx(_components.code, {\n        children: \"stk_size\"\n      }), \" 頂多只會增加 $n$ 次（因為第七行只會跑 $n$ 次），所以這個 \", _jsx(_components.code, {\n        children: \"while\"\n      }), \" 迴圈只會被跑過 $n$ 次，因此總時間複雜度 $=$ \", _jsx(_components.code, {\n        children: \"stk_size\"\n      }), \" 增加次數 $+$ \", _jsx(_components.code, {\n        children: \"while\"\n      }), \" 迴圈執行次數 $= O(n)$。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"空間複雜度的部分，包含了 \", _jsx(_components.code, {\n        children: \"arr\"\n      }), \" 陣列（大小為 $n$）、變數 \", _jsx(_components.code, {\n        children: \"n\"\n      }), \"、\", _jsx(_components.code, {\n        children: \"i\"\n      }), \" 和 \", _jsx(_components.code, {\n        children: \"stk_size\"\n      }), \"（大小為 $O(1)$）、\", _jsx(_components.code, {\n        children: \"stk\"\n      }), \" 需要使用到的空間（\", _jsx(_components.code, {\n        children: \"stk_size\"\n      }), \" 最大只到 $n$），因此加總起來空間複雜度為 $O(n)$。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"不過這份程式碼在做什麼呢？相信不久遠的未來就會再看見他了……\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"常見複雜度以及對應範圍\",\n      children: \"常見複雜度以及對應範圍\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"先前有提到，可以假設電腦一秒鐘大約能跑 $10^9$ 次基礎運算，但比賽中我們哪有可能這麼仔細的去算整支程式的運算量是多少呢？也因此，競賽選手們時常會以輸入的範圍限制，例如 $n$ 的大小上限，來判斷自己設計出來的演算法時間複雜度是否吻合於範圍限制。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下皆假設題目的時間限制為 $1$ 秒，用來估算的數字為 $n$：\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"時間複雜度\"\n          }), _jsx(_components.th, {\n            children: \"常數大小\"\n          }), _jsx(_components.th, {\n            children: \"常見 $n$ 的上限\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n)$\"\n          }), _jsx(_components.td, {\n            children: \"夠小\"\n          }), _jsx(_components.td, {\n            children: \"$10^7$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n)$\"\n          }), _jsx(_components.td, {\n            children: \"略大\"\n          }), _jsx(_components.td, {\n            children: \"$10^6$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n\\\\log n)$\"\n          }), _jsx(_components.td, {\n            children: \"夠小\"\n          }), _jsx(_components.td, {\n            children: \"$10^6$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n\\\\log n)$\"\n          }), _jsx(_components.td, {\n            children: \"一般\"\n          }), _jsx(_components.td, {\n            children: \"$5\\\\times 10^5$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n\\\\log n)$\"\n          }), _jsx(_components.td, {\n            children: \"過大\"\n          }), _jsx(_components.td, {\n            children: \"$2\\\\times 10^5$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n\\\\log^2 n)$\"\n          }), _jsx(_components.td, {\n            children: \"夠小\"\n          }), _jsx(_components.td, {\n            children: \"$10^5$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n\\\\log^2 n)$\"\n          }), _jsx(_components.td, {\n            children: \"一般\"\n          }), _jsx(_components.td, {\n            children: \"$5\\\\times 10^4$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n^2)$\"\n          }), _jsx(_components.td, {\n            children: \"夠小\"\n          }), _jsx(_components.td, {\n            children: \"$10000$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n^2)$\"\n          }), _jsx(_components.td, {\n            children: \"一般\"\n          }), _jsx(_components.td, {\n            children: \"$5000$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n^2)$\"\n          }), _jsx(_components.td, {\n            children: \"略大\"\n          }), _jsx(_components.td, {\n            children: \"$3000$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n^2\\\\log n)$\"\n          }), _jsx(_components.td, {\n            children: \"夠小\"\n          }), _jsx(_components.td, {\n            children: \"$3000$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n^2\\\\log n)$\"\n          }), _jsx(_components.td, {\n            children: \"一般\"\n          }), _jsx(_components.td, {\n            children: \"$1000$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n^3)$\"\n          }), _jsx(_components.td, {\n            children: \"極小\"\n          }), _jsx(_components.td, {\n            children: \"$1000$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(n^3)$\"\n          }), _jsx(_components.td, {\n            children: \"一般\"\n          }), _jsx(_components.td, {\n            children: \"$500$\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"$O(2^n)$\"\n          }), _jsx(_components.td, {\n            children: \"需要仔細評估\"\n          }), _jsx(_components.td, {\n            children: \"$20\\\\sim 25$\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"當然，上表只不過是一種估計而已，實際狀況還是有不少變化，這裡僅供初學者參考。可以注意到我們還多加了一個「判斷常數大不大」的欄位，這是因為有時候演算法的時間複雜度即使很好，但可能因為執行了過多倍的運算而導致速度比想像中還要慢一些，就好像如果執行了 $10^5$ 次 $O(n)$ 的演算法，在 $n=10^5$ 的情況下，不就跟 $O(n^2)$ 一樣慢了嗎？但常數到底怎樣算大呢，這可能就要各位自行多體會幾次了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"另外就是上表提供的參考基準是 $1$ 秒，所以也常可以看到解答是 $O(n\\\\log^2n)$ 的題目將範圍出到 $2\\\\times 10^5$，並直接將時限開到 $5$ 秒等狀況。而根據 Online Judge 的不同，程式碼的執行速度也會有差距，甚至在一些古老的 Judge 上，會出現 $10^6$ 幾乎無法讓 $O(n\\\\log n)$ 通過的現象，所以實際上還是要多遇過幾次狀況才會比較有經驗。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"總結\",\n      children: \"總結\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"希望大家在想到一個題目的做法時，可以先想想看這個演算法的複雜度是多少，來判斷這個做法寫出的程式大約要執行多久。如果真的很難分析的話，約略估計也可以收到不錯的效果。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}]],"prereqs":[{"code":"BasicAlgorithm/intro","text":"基礎演算法 / 介紹"}],"sections":[{"text":"淺談時間複雜度","depth":1,"code":"淺談時間複雜度"},{"text":"什麼是時間複雜度","depth":2,"code":"淺談時間複雜度-什麼是時間複雜度"},{"text":"為什麼要學時間複雜度","depth":2,"code":"淺談時間複雜度-為什麼要學時間複雜度"},{"text":"計算步驟數量","depth":2,"code":"淺談時間複雜度-計算步驟數量"},{"text":"空間複雜度","depth":1,"code":"空間複雜度"},{"text":"複雜度符號","depth":1,"code":"複雜度符號"},{"text":"符號定義","depth":2,"code":"複雜度符號-符號定義"},{"text":"補充","depth":2,"code":"複雜度符號-補充"},{"text":"性質","depth":2,"code":"複雜度符號-性質"},{"text":"例題","depth":1,"code":"例題"},{"text":"常見複雜度以及對應範圍","depth":1,"code":"常見複雜度以及對應範圍"},{"text":"總結","depth":1,"code":"總結"}],"previousArticle":{"code":"BasicAlgorithm/intro","topicCode":"BasicAlgorithm","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/intro","topic":"BasicAlgorithm","article":"intro","title":"介紹","authors":["double"],"contributors":[],"description":"簡單介紹何謂演算法","prerequisites":["Introduction/competitive_programming"]}},"nextArticle":{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},"virtualArticle":{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["chengbilly92"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},"topicStructure":[{"single":true,"title":"","topics":[{"code":"Guide","displayTitle":"網站簡介","articles":[{"code":"Guide/learning","topicCode":"Guide","articleCode":"learning","chapterCode":"I","fullDisplayTitle":"網站簡介 / 服用方法","articleDisplayTitle":"服用方法","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/learning","topic":"Guide","article":"learning","title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"description":"教大家怎麼看這份講義","prerequisites":[]}},{"code":"Guide/chapters","topicCode":"Guide","articleCode":"chapters","chapterCode":"I","fullDisplayTitle":"網站簡介 / 章節與主題","articleDisplayTitle":"章節與主題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/chapters","topic":"Guide","article":"chapters","title":"章節與主題","authors":["baluteshih"],"contributors":[],"description":"教大家什麼是章節與主題","prerequisites":["Guide/learning"]}},{"code":"Guide/problems","topicCode":"Guide","articleCode":"problems","chapterCode":"I","fullDisplayTitle":"網站簡介 / 習題","articleDisplayTitle":"習題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/problems","topic":"Guide","article":"problems","title":"習題","authors":["baluteshih"],"contributors":[],"description":"教大家這份講義的習題意義","prerequisites":["Guide/learning"]}},{"code":"Guide/math_symbol","topicCode":"Guide","articleCode":"math_symbol","chapterCode":"I","fullDisplayTitle":"網站簡介 / 基本數學符號","articleDisplayTitle":"基本數學符號","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/math_symbol","topic":"Guide","article":"math_symbol","title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"description":"介紹常見的數學符號","prerequisites":[]}},{"code":"Guide/language","topicCode":"Guide","articleCode":"language","chapterCode":"I","fullDisplayTitle":"網站簡介 / 語法學習資源","articleDisplayTitle":"語法學習資源","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/language","topic":"Guide","article":"language","title":"語法學習資源","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Guide/qa","topicCode":"Guide","articleCode":"qa","chapterCode":"I","fullDisplayTitle":"網站簡介 / NTUCPC Guide Q & A","articleDisplayTitle":"NTUCPC Guide Q & A","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/qa","topic":"Guide","article":"qa","title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":[]}}]}]},{"single":true,"title":"","topics":[{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/competitive_programming","topicCode":"Introduction","articleCode":"competitive_programming","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 資訊競賽介紹","articleDisplayTitle":"資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/competitive_programming","topic":"Introduction","article":"competitive_programming","title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Introduction/contests_type","topicCode":"Introduction","articleCode":"contests_type","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 比賽類型","articleDisplayTitle":"比賽類型","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/contests_type","topic":"Introduction","article":"contests_type","title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tw_contests","topicCode":"Introduction","articleCode":"tw_contests","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 台灣資訊競賽介紹","articleDisplayTitle":"台灣資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/tw_contests","topic":"Introduction","article":"tw_contests","title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}},{"code":"Introduction/online_judge","topicCode":"Introduction","articleCode":"online_judge","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 線上評測系統","articleDisplayTitle":"線上評測系統","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/online_judge","topic":"Introduction","article":"online_judge","title":"線上評測系統","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/resources","topicCode":"Introduction","articleCode":"resources","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 網路學習資源介紹","articleDisplayTitle":"網路學習資源介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/resources","topic":"Introduction","article":"resources","title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tactics","topicCode":"Introduction","articleCode":"tactics","chapterCode":"III","fullDisplayTitle":"資訊競賽介紹 / 比賽 + 練習策略","articleDisplayTitle":"比賽 + 練習策略","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"Introduction/tactics","topic":"Introduction","article":"tactics","title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}}]}]},{"single":true,"title":"","topics":[{"code":"Implementation","displayTitle":"實作技巧","articles":[{"code":"Implementation/basic_knowledge","topicCode":"Implementation","articleCode":"basic_knowledge","chapterCode":"II","fullDisplayTitle":"實作技巧 / 基本常識","articleDisplayTitle":"基本常識","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/basic_knowledge","topic":"Implementation","article":"basic_knowledge","title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"description":"講述一些競賽程式需要知道的最基本常識","prerequisites":["Introduction/online_judge"]}},{"code":"Implementation/input","topicCode":"Implementation","articleCode":"input","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見輸入類型","articleDisplayTitle":"常見輸入類型","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/input","topic":"Implementation","article":"input","title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的輸入格式","prerequisites":["Implementation/basic_knowledge"]}},{"code":"Implementation/reference","topicCode":"Implementation","articleCode":"reference","chapterCode":"II","fullDisplayTitle":"實作技巧 / Reference","articleDisplayTitle":"Reference","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/reference","topic":"Implementation","article":"reference","title":"Reference","authors":["baluteshih"],"contributors":[],"description":"Reference","prerequisites":[]}},{"code":"Implementation/compiler","topicCode":"Implementation","articleCode":"compiler","chapterCode":"II","fullDisplayTitle":"實作技巧 / 編譯器","articleDisplayTitle":"編譯器","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/compiler","topic":"Implementation","article":"compiler","title":"編譯器","authors":["WiwiHo"],"contributors":[],"description":"簡單介紹什麼是編譯器","prerequisites":[]}},{"code":"Implementation/error_message","topicCode":"Implementation","articleCode":"error_message","chapterCode":"II","fullDisplayTitle":"實作技巧 / 如何看錯誤訊息","articleDisplayTitle":"如何看錯誤訊息","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/error_message","topic":"Implementation","article":"error_message","title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"description":"介紹一些常見錯誤訊息的看法","prerequisites":["Implementation/compiler"]}},{"code":"Implementation/variable","topicCode":"Implementation","articleCode":"variable","chapterCode":"II","fullDisplayTitle":"實作技巧 / 全域、區域變數","articleDisplayTitle":"全域、區域變數","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/variable","topic":"Implementation","article":"variable","title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"description":"各種全域區域變數相關的事情","prerequisites":["Implementation/basic_knowledge","Implementation/reference","Implementation/compiler"]}},{"code":"Implementation/buglist","topicCode":"Implementation","articleCode":"buglist","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見錯誤列表","articleDisplayTitle":"常見錯誤列表","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/buglist","topic":"Implementation","article":"buglist","title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的錯誤","prerequisites":["Implementation/variable"]}},{"code":"Implementation/debug","topicCode":"Implementation","articleCode":"debug","chapterCode":null,"fullDisplayTitle":"實作技巧 / Debug","articleDisplayTitle":"Debug","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter ???","article":{"code":"Implementation/debug","topic":"Implementation","article":"debug","title":"Debug","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Implementation/buglist"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/intro","topicCode":"BasicAlgorithm","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/intro","topic":"BasicAlgorithm","article":"intro","title":"介紹","authors":["double"],"contributors":[],"description":"簡單介紹何謂演算法","prerequisites":["Introduction/competitive_programming"]}},{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["chengbilly92"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},{"code":"BasicAlgorithm/algorithm_numeric","topicCode":"BasicAlgorithm","articleCode":"algorithm_numeric","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 標準函式庫 ── <algorithm> 與 <numeric>","articleDisplayTitle":"標準函式庫 ── <algorithm> 與 <numeric>","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/algorithm_numeric","topic":"BasicAlgorithm","article":"algorithm_numeric","title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"description":"介紹 STL <algorithm> 和 <numeric> 裡的幾個常用函式","prerequisites":["BasicAlgorithm/sorting"]}},{"code":"BasicAlgorithm/enumerate","topicCode":"BasicAlgorithm","articleCode":"enumerate","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 枚舉","articleDisplayTitle":"枚舉","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/enumerate","topic":"BasicAlgorithm","article":"enumerate","title":"枚舉","authors":["WiwiHo"],"contributors":[],"description":"簡單的枚舉技巧，不包含遞迴","prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/searching","topicCode":"BasicAlgorithm","articleCode":"searching","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 搜尋","articleDisplayTitle":"搜尋","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/searching","topic":"BasicAlgorithm","article":"searching","title":"搜尋","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/math_in_school","topicCode":"BasicAlgorithm","articleCode":"math_in_school","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 學校教的數學","articleDisplayTitle":"學校教的數學","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/math_in_school","topic":"BasicAlgorithm","article":"math_in_school","title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"description":"一些和基礎演算法設計技巧有關的課綱內數學問題，引導讀者從基礎數學發現演算法，並且訓練把人腦作法轉換成演算法的能力。","prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/recursion","topicCode":"BasicAlgorithm","articleCode":"recursion","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 遞迴","articleDisplayTitle":"遞迴","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/recursion","topic":"BasicAlgorithm","article":"recursion","title":"遞迴","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/partial_sum","topicCode":"BasicAlgorithm","articleCode":"partial_sum","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 前綴和與差分","articleDisplayTitle":"前綴和與差分","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/partial_sum","topic":"BasicAlgorithm","article":"partial_sum","title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/two_pointers","topicCode":"BasicAlgorithm","articleCode":"two_pointers","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 雙指標","articleDisplayTitle":"雙指標","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/two_pointers","topic":"BasicAlgorithm","article":"two_pointers","title":"雙指標","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/binary_search_answer","topicCode":"BasicAlgorithm","articleCode":"binary_search_answer","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 對答案二分搜","articleDisplayTitle":"對答案二分搜","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/binary_search_answer","topic":"BasicAlgorithm","article":"binary_search_answer","title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"description":"","prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"]}}]}]},{"single":true,"title":"","topics":[{"code":"GreedyAlgorithm","displayTitle":"貪心演算法","articles":[{"code":"GreedyAlgorithm/intuitive_greedy","topicCode":"GreedyAlgorithm","articleCode":"intuitive_greedy","chapterCode":"II","fullDisplayTitle":"貪心演算法 / 貪心法 I","articleDisplayTitle":"貪心法 I","topicDisplayTitle":"貪心演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"GreedyAlgorithm/intuitive_greedy","topic":"GreedyAlgorithm","article":"intuitive_greedy","title":"貪心法 I","authors":["baluteshih"],"contributors":[],"description":"生活中直覺的貪心題目","prerequisites":["BasicAlgorithm/algorithm_numeric"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/intro","topicCode":"BasicDataStructure","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/intro","topic":"BasicDataStructure","article":"intro","title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"description":"簡單介紹資料結構的概念","prerequisites":["Implementation/basic_knowledge"]}},{"code":"BasicDataStructure/vector","topicCode":"BasicDataStructure","articleCode":"vector","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 動態的陣列","articleDisplayTitle":"動態的陣列","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/vector","topic":"BasicDataStructure","article":"vector","title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicDataStructure/stack_queue_deque","topicCode":"BasicDataStructure","articleCode":"stack_queue_deque","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Stack、Queue 與 Deque","articleDisplayTitle":"Stack、Queue 與 Deque","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/stack_queue_deque","topic":"BasicDataStructure","article":"stack_queue_deque","title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/linked_list","topicCode":"BasicDataStructure","articleCode":"linked_list","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Linked List","articleDisplayTitle":"Linked List","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/linked_list","topic":"BasicDataStructure","article":"linked_list","title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/binary_tree","topicCode":"BasicDataStructure","articleCode":"binary_tree","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / 二元樹","articleDisplayTitle":"二元樹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/binary_tree","topic":"BasicDataStructure","article":"binary_tree","title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/linked_list","Implementation/reference"]}},{"code":"BasicDataStructure/heap","topicCode":"BasicDataStructure","articleCode":"heap","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Heap","articleDisplayTitle":"Heap","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/heap","topic":"BasicDataStructure","article":"heap","title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}},{"code":"BasicDataStructure/set_map","topicCode":"BasicDataStructure","articleCode":"set_map","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Set 與 Map","articleDisplayTitle":"Set 與 Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/set_map","topic":"BasicDataStructure","article":"set_map","title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/heap"]}},{"code":"BasicDataStructure/unordered","topicCode":"BasicDataStructure","articleCode":"unordered","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Unordered Set 與 Unordered Map","articleDisplayTitle":"Unordered Set 與 Unordered Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/unordered","topic":"BasicDataStructure","article":"unordered","title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/set_map"]}},{"code":"BasicDataStructure/iterator","topicCode":"BasicDataStructure","articleCode":"iterator","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Iterator","articleDisplayTitle":"Iterator","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/iterator","topic":"BasicDataStructure","article":"iterator","title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/intro"]}},{"code":"BasicDataStructure/binary_tree_and_stack","topicCode":"BasicDataStructure","articleCode":"binary_tree_and_stack","chapterCode":null,"fullDisplayTitle":"基礎資料結構 / 二元樹與 Stack","articleDisplayTitle":"二元樹與 Stack","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter ???","article":{"code":"BasicDataStructure/binary_tree_and_stack","topic":"BasicDataStructure","article":"binary_tree_and_stack","title":"二元樹與 Stack","authors":["8e7"],"contributors":["建中大講義團隊","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}}]}]},{"single":true,"title":"","topics":[{"code":"BasicMath","displayTitle":"基礎數學","articles":[{"code":"BasicMath/basicalgo","topicCode":"BasicMath","articleCode":"basicalgo","chapterCode":"III","fullDisplayTitle":"基礎數學 / 常用數學演算法","articleDisplayTitle":"常用數學演算法","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/basicalgo","topic":"BasicMath","article":"basicalgo","title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"description":"一些不太難的數學","prerequisites":["BasicAlgorithm/math_in_school"]}}]}]}],"chapterStructure":[{"code":"I","displayTitle":"Chapter I. 初來乍到","topics":[{"code":"Guide","displayTitle":"網站簡介","articles":[{"code":"Guide/learning","topicCode":"Guide","articleCode":"learning","chapterCode":"I","fullDisplayTitle":"網站簡介 / 服用方法","articleDisplayTitle":"服用方法","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/learning","topic":"Guide","article":"learning","title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"description":"教大家怎麼看這份講義","prerequisites":[]}},{"code":"Guide/chapters","topicCode":"Guide","articleCode":"chapters","chapterCode":"I","fullDisplayTitle":"網站簡介 / 章節與主題","articleDisplayTitle":"章節與主題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/chapters","topic":"Guide","article":"chapters","title":"章節與主題","authors":["baluteshih"],"contributors":[],"description":"教大家什麼是章節與主題","prerequisites":["Guide/learning"]}},{"code":"Guide/problems","topicCode":"Guide","articleCode":"problems","chapterCode":"I","fullDisplayTitle":"網站簡介 / 習題","articleDisplayTitle":"習題","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/problems","topic":"Guide","article":"problems","title":"習題","authors":["baluteshih"],"contributors":[],"description":"教大家這份講義的習題意義","prerequisites":["Guide/learning"]}},{"code":"Guide/math_symbol","topicCode":"Guide","articleCode":"math_symbol","chapterCode":"I","fullDisplayTitle":"網站簡介 / 基本數學符號","articleDisplayTitle":"基本數學符號","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/math_symbol","topic":"Guide","article":"math_symbol","title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"description":"介紹常見的數學符號","prerequisites":[]}},{"code":"Guide/language","topicCode":"Guide","articleCode":"language","chapterCode":"I","fullDisplayTitle":"網站簡介 / 語法學習資源","articleDisplayTitle":"語法學習資源","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/language","topic":"Guide","article":"language","title":"語法學習資源","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Guide/qa","topicCode":"Guide","articleCode":"qa","chapterCode":"I","fullDisplayTitle":"網站簡介 / NTUCPC Guide Q & A","articleDisplayTitle":"NTUCPC Guide Q & A","topicDisplayTitle":"網站簡介","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Guide/qa","topic":"Guide","article":"qa","title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":[]}}]},{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/competitive_programming","topicCode":"Introduction","articleCode":"competitive_programming","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 資訊競賽介紹","articleDisplayTitle":"資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/competitive_programming","topic":"Introduction","article":"competitive_programming","title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"description":"","prerequisites":["Guide/learning"]}},{"code":"Introduction/contests_type","topicCode":"Introduction","articleCode":"contests_type","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 比賽類型","articleDisplayTitle":"比賽類型","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/contests_type","topic":"Introduction","article":"contests_type","title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/tw_contests","topicCode":"Introduction","articleCode":"tw_contests","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 台灣資訊競賽介紹","articleDisplayTitle":"台灣資訊競賽介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/tw_contests","topic":"Introduction","article":"tw_contests","title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}},{"code":"Introduction/online_judge","topicCode":"Introduction","articleCode":"online_judge","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 線上評測系統","articleDisplayTitle":"線上評測系統","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/online_judge","topic":"Introduction","article":"online_judge","title":"線上評測系統","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}},{"code":"Introduction/resources","topicCode":"Introduction","articleCode":"resources","chapterCode":"I","fullDisplayTitle":"資訊競賽介紹 / 網路學習資源介紹","articleDisplayTitle":"網路學習資源介紹","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter I. 初來乍到","article":{"code":"Introduction/resources","topic":"Introduction","article":"resources","title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"description":"","prerequisites":["Introduction/competitive_programming"]}}]}]},{"code":"II","displayTitle":"Chapter II. 新手上路","topics":[{"code":"Implementation","displayTitle":"實作技巧","articles":[{"code":"Implementation/basic_knowledge","topicCode":"Implementation","articleCode":"basic_knowledge","chapterCode":"II","fullDisplayTitle":"實作技巧 / 基本常識","articleDisplayTitle":"基本常識","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/basic_knowledge","topic":"Implementation","article":"basic_knowledge","title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"description":"講述一些競賽程式需要知道的最基本常識","prerequisites":["Introduction/online_judge"]}},{"code":"Implementation/input","topicCode":"Implementation","articleCode":"input","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見輸入類型","articleDisplayTitle":"常見輸入類型","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/input","topic":"Implementation","article":"input","title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的輸入格式","prerequisites":["Implementation/basic_knowledge"]}},{"code":"Implementation/reference","topicCode":"Implementation","articleCode":"reference","chapterCode":"II","fullDisplayTitle":"實作技巧 / Reference","articleDisplayTitle":"Reference","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/reference","topic":"Implementation","article":"reference","title":"Reference","authors":["baluteshih"],"contributors":[],"description":"Reference","prerequisites":[]}},{"code":"Implementation/compiler","topicCode":"Implementation","articleCode":"compiler","chapterCode":"II","fullDisplayTitle":"實作技巧 / 編譯器","articleDisplayTitle":"編譯器","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/compiler","topic":"Implementation","article":"compiler","title":"編譯器","authors":["WiwiHo"],"contributors":[],"description":"簡單介紹什麼是編譯器","prerequisites":[]}},{"code":"Implementation/error_message","topicCode":"Implementation","articleCode":"error_message","chapterCode":"II","fullDisplayTitle":"實作技巧 / 如何看錯誤訊息","articleDisplayTitle":"如何看錯誤訊息","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/error_message","topic":"Implementation","article":"error_message","title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"description":"介紹一些常見錯誤訊息的看法","prerequisites":["Implementation/compiler"]}},{"code":"Implementation/variable","topicCode":"Implementation","articleCode":"variable","chapterCode":"II","fullDisplayTitle":"實作技巧 / 全域、區域變數","articleDisplayTitle":"全域、區域變數","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/variable","topic":"Implementation","article":"variable","title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"description":"各種全域區域變數相關的事情","prerequisites":["Implementation/basic_knowledge","Implementation/reference","Implementation/compiler"]}},{"code":"Implementation/buglist","topicCode":"Implementation","articleCode":"buglist","chapterCode":"II","fullDisplayTitle":"實作技巧 / 常見錯誤列表","articleDisplayTitle":"常見錯誤列表","topicDisplayTitle":"實作技巧","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"Implementation/buglist","topic":"Implementation","article":"buglist","title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"description":"講述一些競賽程式常見的錯誤","prerequisites":["Implementation/variable"]}}]},{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/intro","topicCode":"BasicAlgorithm","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/intro","topic":"BasicAlgorithm","article":"intro","title":"介紹","authors":["double"],"contributors":[],"description":"簡單介紹何謂演算法","prerequisites":["Introduction/competitive_programming"]}},{"code":"BasicAlgorithm/complexity","topicCode":"BasicAlgorithm","articleCode":"complexity","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 複雜度","articleDisplayTitle":"複雜度","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/complexity","topic":"BasicAlgorithm","article":"complexity","title":"複雜度","authors":["chengbilly92"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/sorting","topicCode":"BasicAlgorithm","articleCode":"sorting","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 排序演算法","articleDisplayTitle":"排序演算法","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/sorting","topic":"BasicAlgorithm","article":"sorting","title":"排序演算法","authors":["baluteshih"],"contributors":[],"description":"簡單介紹基本的排序演算法（O(n^2), counting sort 跟 radix sort）","prerequisites":["BasicAlgorithm/complexity"]}},{"code":"BasicAlgorithm/algorithm_numeric","topicCode":"BasicAlgorithm","articleCode":"algorithm_numeric","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 標準函式庫 ── <algorithm> 與 <numeric>","articleDisplayTitle":"標準函式庫 ── <algorithm> 與 <numeric>","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/algorithm_numeric","topic":"BasicAlgorithm","article":"algorithm_numeric","title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"description":"介紹 STL <algorithm> 和 <numeric> 裡的幾個常用函式","prerequisites":["BasicAlgorithm/sorting"]}},{"code":"BasicAlgorithm/enumerate","topicCode":"BasicAlgorithm","articleCode":"enumerate","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 枚舉","articleDisplayTitle":"枚舉","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/enumerate","topic":"BasicAlgorithm","article":"enumerate","title":"枚舉","authors":["WiwiHo"],"contributors":[],"description":"簡單的枚舉技巧，不包含遞迴","prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/searching","topicCode":"BasicAlgorithm","articleCode":"searching","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 搜尋","articleDisplayTitle":"搜尋","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/searching","topic":"BasicAlgorithm","article":"searching","title":"搜尋","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicAlgorithm/math_in_school","topicCode":"BasicAlgorithm","articleCode":"math_in_school","chapterCode":"II","fullDisplayTitle":"基礎演算法 / 學校教的數學","articleDisplayTitle":"學校教的數學","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicAlgorithm/math_in_school","topic":"BasicAlgorithm","article":"math_in_school","title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"description":"一些和基礎演算法設計技巧有關的課綱內數學問題，引導讀者從基礎數學發現演算法，並且訓練把人腦作法轉換成演算法的能力。","prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"]}}]},{"code":"GreedyAlgorithm","displayTitle":"貪心演算法","articles":[{"code":"GreedyAlgorithm/intuitive_greedy","topicCode":"GreedyAlgorithm","articleCode":"intuitive_greedy","chapterCode":"II","fullDisplayTitle":"貪心演算法 / 貪心法 I","articleDisplayTitle":"貪心法 I","topicDisplayTitle":"貪心演算法","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"GreedyAlgorithm/intuitive_greedy","topic":"GreedyAlgorithm","article":"intuitive_greedy","title":"貪心法 I","authors":["baluteshih"],"contributors":[],"description":"生活中直覺的貪心題目","prerequisites":["BasicAlgorithm/algorithm_numeric"]}}]},{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/intro","topicCode":"BasicDataStructure","articleCode":"intro","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 介紹","articleDisplayTitle":"介紹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/intro","topic":"BasicDataStructure","article":"intro","title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"description":"簡單介紹資料結構的概念","prerequisites":["Implementation/basic_knowledge"]}},{"code":"BasicDataStructure/vector","topicCode":"BasicDataStructure","articleCode":"vector","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / 動態的陣列","articleDisplayTitle":"動態的陣列","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/vector","topic":"BasicDataStructure","article":"vector","title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"]}},{"code":"BasicDataStructure/stack_queue_deque","topicCode":"BasicDataStructure","articleCode":"stack_queue_deque","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Stack、Queue 與 Deque","articleDisplayTitle":"Stack、Queue 與 Deque","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/stack_queue_deque","topic":"BasicDataStructure","article":"stack_queue_deque","title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}},{"code":"BasicDataStructure/linked_list","topicCode":"BasicDataStructure","articleCode":"linked_list","chapterCode":"II","fullDisplayTitle":"基礎資料結構 / Linked List","articleDisplayTitle":"Linked List","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter II. 新手上路","article":{"code":"BasicDataStructure/linked_list","topic":"BasicDataStructure","article":"linked_list","title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/vector"]}}]}]},{"code":"III","displayTitle":"Chapter III. 漸入佳境","topics":[{"code":"Introduction","displayTitle":"資訊競賽介紹","articles":[{"code":"Introduction/tactics","topicCode":"Introduction","articleCode":"tactics","chapterCode":"III","fullDisplayTitle":"資訊競賽介紹 / 比賽 + 練習策略","articleDisplayTitle":"比賽 + 練習策略","topicDisplayTitle":"資訊競賽介紹","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"Introduction/tactics","topic":"Introduction","article":"tactics","title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["Introduction/contests_type"]}}]},{"code":"BasicAlgorithm","displayTitle":"基礎演算法","articles":[{"code":"BasicAlgorithm/recursion","topicCode":"BasicAlgorithm","articleCode":"recursion","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 遞迴","articleDisplayTitle":"遞迴","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/recursion","topic":"BasicAlgorithm","article":"recursion","title":"遞迴","authors":["nathanlee726"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/intro"]}},{"code":"BasicAlgorithm/partial_sum","topicCode":"BasicAlgorithm","articleCode":"partial_sum","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 前綴和與差分","articleDisplayTitle":"前綴和與差分","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/partial_sum","topic":"BasicAlgorithm","article":"partial_sum","title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/two_pointers","topicCode":"BasicAlgorithm","articleCode":"two_pointers","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 雙指標","articleDisplayTitle":"雙指標","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/two_pointers","topic":"BasicAlgorithm","article":"two_pointers","title":"雙指標","authors":["rabhunter"],"contributors":[],"description":"","prerequisites":["BasicAlgorithm/enumerate"]}},{"code":"BasicAlgorithm/binary_search_answer","topicCode":"BasicAlgorithm","articleCode":"binary_search_answer","chapterCode":"III","fullDisplayTitle":"基礎演算法 / 對答案二分搜","articleDisplayTitle":"對答案二分搜","topicDisplayTitle":"基礎演算法","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicAlgorithm/binary_search_answer","topic":"BasicAlgorithm","article":"binary_search_answer","title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"description":"","prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"]}}]},{"code":"BasicDataStructure","displayTitle":"基礎資料結構","articles":[{"code":"BasicDataStructure/binary_tree","topicCode":"BasicDataStructure","articleCode":"binary_tree","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / 二元樹","articleDisplayTitle":"二元樹","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/binary_tree","topic":"BasicDataStructure","article":"binary_tree","title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"description":"example description","prerequisites":["BasicDataStructure/linked_list","Implementation/reference"]}},{"code":"BasicDataStructure/heap","topicCode":"BasicDataStructure","articleCode":"heap","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Heap","articleDisplayTitle":"Heap","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/heap","topic":"BasicDataStructure","article":"heap","title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/binary_tree"]}},{"code":"BasicDataStructure/set_map","topicCode":"BasicDataStructure","articleCode":"set_map","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Set 與 Map","articleDisplayTitle":"Set 與 Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/set_map","topic":"BasicDataStructure","article":"set_map","title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/heap"]}},{"code":"BasicDataStructure/unordered","topicCode":"BasicDataStructure","articleCode":"unordered","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Unordered Set 與 Unordered Map","articleDisplayTitle":"Unordered Set 與 Unordered Map","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/unordered","topic":"BasicDataStructure","article":"unordered","title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"description":"example description","prerequisites":["BasicDataStructure/set_map"]}},{"code":"BasicDataStructure/iterator","topicCode":"BasicDataStructure","articleCode":"iterator","chapterCode":"III","fullDisplayTitle":"基礎資料結構 / Iterator","articleDisplayTitle":"Iterator","topicDisplayTitle":"基礎資料結構","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicDataStructure/iterator","topic":"BasicDataStructure","article":"iterator","title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"description":"example description","prerequisites":["BasicDataStructure/intro"]}}]},{"code":"BasicMath","displayTitle":"基礎數學","articles":[{"code":"BasicMath/basicalgo","topicCode":"BasicMath","articleCode":"basicalgo","chapterCode":"III","fullDisplayTitle":"基礎數學 / 常用數學演算法","articleDisplayTitle":"常用數學演算法","topicDisplayTitle":"基礎數學","chapterDisplayTitle":"Chapter III. 漸入佳境","article":{"code":"BasicMath/basicalgo","topic":"BasicMath","article":"basicalgo","title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"description":"一些不太難的數學","prerequisites":["BasicAlgorithm/math_in_school"]}}]}]}]}},"__N_SSG":true}