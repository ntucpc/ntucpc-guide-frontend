{"pageProps":{"props":{"mdxPath":"guide/content/Example/subexample/subexample.mdx","code":"Example/subexample","structure":{"articles":[{"code":"AlgorithmAnalysis/proof","article":"proof","topic":"AlgorithmAnalysis","chapter":null,"valid":true,"title":"證明方法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/recursion"],"description":"一些基本證明方法","coming":false,"importance":0},{"code":"AlgorithmTechnique/bfs","article":"bfs","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"廣度優先搜尋","authors":["WiwiHo"],"contributors":[],"prerequisites":["AlgorithmTechnique/dfs"],"description":"類似於「水會不斷往外擴散」的搜尋方式，具有使用最少步數達成目標的特殊效果。","coming":false,"importance":"5"},{"code":"AlgorithmTechnique/dc","article":"dc","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"分治法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/sorting","BasicAlgorithm/recursion","BasicAlgorithm/two_pointers"],"description":"演算法設計的經典手法，將問題分成多個部分、分別處理後再嘗試湊出完整問題的答案。","coming":false,"importance":"5"},{"code":"AlgorithmTechnique/dfs","article":"dfs","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"深度優先搜尋","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/structured_binding","BasicAlgorithm/recursion","BasicAlgorithm/enumerate","BasicDataStructure/binary_tree"],"description":"用遞迴的方式找出所有可能性，包含暴力枚舉、剪枝、在迷宮中找到路徑、遍歷一棵樹。","coming":false,"importance":"5"},{"code":"AlgorithmTechnique/discretization","article":"discretization","topic":"AlgorithmTechnique","chapter":"III","valid":false,"title":"離散化","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":0},{"code":"AlgorithmTechnique/doubling","article":"doubling","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"倍增法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicMath/basicalgo","AlgorithmTechnique/dc"],"description":"一種特殊的演算法設計手法。","coming":false,"importance":"4"},{"code":"BasicAlgorithm/algorithm_numeric","article":"algorithm_numeric","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/sorting"],"description":"那些 C++ 已經幫你寫好的功能。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/binary_search_answer","article":"binary_search_answer","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"],"description":"在「答案上」執行二分搜尋法。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/complexity","article":"complexity","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"prerequisites":["BasicAlgorithm/intro"],"description":"最主流用來評估程式效率的方式。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/enumerate","article":"enumerate","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"枚舉","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"],"description":"如何將「列出所有可能性」寫成程式？有哪些常見的列舉方法？你知道即使是列舉可能性、也能進行演算法的優化嗎？","coming":false,"importance":"5"},{"code":"BasicAlgorithm/intro","article":"intro","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"介紹","authors":["double"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"何謂「演算法」？","coming":false,"importance":0},{"code":"BasicAlgorithm/math_in_school","article":"math_in_school","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"],"description":"質數、因數、十分逼近法以及大數四則運算。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/partial_sum","article":"partial_sum","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"prerequisites":["BasicAlgorithm/enumerate"],"description":"介紹前綴和與差分的用處以及他們的關聯。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/recursion","article":"recursion","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"遞迴","authors":["nathanlee726"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"description":"程式設計中最重要的概念之一。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/searching","article":"searching","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"搜尋","authors":["rabhunter","WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/algorithm_numeric"],"description":"何謂「二分搜尋法」？他的原理為何？有什麼內建的函式能使用？","coming":false,"importance":"5"},{"code":"BasicAlgorithm/sorting","article":"sorting","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"排序演算法","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/complexity"],"description":"介紹各種不同「排序」的方法。","coming":false,"importance":"3"},{"code":"BasicAlgorithm/sweep","article":"sweep","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"一維掃描線","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/rngbased","ImplementationKnowledge/structured_binding","BasicAlgorithm/enumerate","BasicAlgorithm/partial_sum"],"description":"圖像化的枚舉方法。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/two_pointers","article":"two_pointers","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"雙指標","authors":["rabhunter"],"contributors":[],"prerequisites":["BasicAlgorithm/enumerate"],"description":"利用題目單調性來加速演算法的一種枚舉方法。","coming":false,"importance":"5"},{"code":"BasicDataStructure/binary_tree","article":"binary_tree","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"prerequisites":["BasicDataStructure/linked_list","ImplementationKnowledge/reference"],"description":"何謂「二元樹」？何謂「二元搜尋樹」？","coming":false,"importance":"4"},{"code":"BasicDataStructure/binary_tree_and_stack","article":"binary_tree_and_stack","topic":"BasicDataStructure","chapter":null,"valid":true,"title":"二元樹與 Stack","authors":["8e7"],"contributors":["建中大講義團隊","WiwiHo"],"prerequisites":["BasicDataStructure/binary_tree"],"description":"二元樹的進階應用、與 Stack 的關係。","coming":false,"importance":"3"},{"code":"BasicDataStructure/heap","article":"heap","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicDataStructure/binary_tree"],"description":"介紹 Heap 和他相對應的內建函式。","coming":false,"importance":"5"},{"code":"BasicDataStructure/intro","article":"intro","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"prerequisites":["ImplementationKnowledge/basic_knowledge"],"description":"何謂「資料結構」？","coming":false,"importance":0},{"code":"BasicDataStructure/iterator","article":"iterator","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicDataStructure/intro"],"description":"C++ 內建容器的御用「指標」。","coming":false,"importance":"3"},{"code":"BasicDataStructure/linked_list","article":"linked_list","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/vector"],"description":"介紹 Linked List 和他相對應的內建函式。","coming":false,"importance":"3"},{"code":"BasicDataStructure/set_map","article":"set_map","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/heap"],"description":"介紹 C++ 內建的 `set` 與 `map` 的使用方法。","coming":false,"importance":"5"},{"code":"BasicDataStructure/stack_queue_deque","article":"stack_queue_deque","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/vector"],"description":"介紹 Stack、Queue 與 Deque 和他們相對應的內建函式。","coming":false,"importance":"5"},{"code":"BasicDataStructure/unordered","article":"unordered","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/set_map"],"description":"對雜湊的基礎認識，以及 C++ 內建的 `unordered_set` 與 `unordered_map` 的使用方法。","coming":false,"importance":"2"},{"code":"BasicDataStructure/vector","article":"vector","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"],"description":"介紹 C++ 內建的 `vector` 的使用方法。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/backtracking","article":"backtracking","topic":"BasicDynamicProgramming","chapter":null,"valid":true,"title":"DP 回溯","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/rolling"],"description":"如果真正構造出動態規劃的解答，而不是獲得單一的數值？","coming":true,"importance":"5"},{"code":"BasicDynamicProgramming/basic_optimization","article":"basic_optimization","topic":"BasicDynamicProgramming","chapter":null,"valid":true,"title":"DP 的基本優化","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/structure"],"description":"在動態規劃演算法上結合一些學過的技巧來加速演算法效率。","coming":true,"importance":"5"},{"code":"BasicDynamicProgramming/concept","article":"concept","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"基本概念","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"description":"用現實的例子引導出動態規劃的概念，故意先不給定義","coming":false,"importance":0},{"code":"BasicDynamicProgramming/knapsack","article":"knapsack","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"背包問題","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/multidimensional"],"description":"利用動態規劃中的一道經典問題來認識不同的動態規劃解題方法。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/multidimensional","article":"multidimensional","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"多個維度的 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/state_and_transition"],"description":"使用多個參數來表達動態規劃演算法的狀態。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/range_dp","article":"range_dp","topic":"BasicDynamicProgramming","chapter":null,"valid":true,"title":"區間 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/rolling"],"description":"使用區間做為狀態的動態規劃題目。","coming":true,"importance":"5"},{"code":"BasicDynamicProgramming/rolling","article":"rolling","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"滾動 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/knapsack","BasicDataStructure/vector"],"description":"動態規劃中的一種既簡潔又能省記憶體的實作方式。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/state_and_transition","article":"state_and_transition","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"狀態與轉移","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/top_down_and_bottom_up","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/partial_sum"],"description":"動態規劃的常用術語和基本的解題思路。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/structure","article":"structure","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"動態規劃的必要元素","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/rolling"],"description":"複習一遍目前所學，了解設計動態規劃演算法利用到的題目特性為何。","coming":false,"importance":"3"},{"code":"BasicDynamicProgramming/subproblem","article":"subproblem","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"第一道動態規劃問題","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/recursion","BasicAlgorithm/complexity","BasicDynamicProgramming/concept"],"description":"從線性遞迴問題開始認識動態規劃。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/top_down_and_bottom_up","article":"top_down_and_bottom_up","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"Top down 與 Bottom up","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/subproblem","ImplementationSkill/buglist"],"description":"動態規劃的兩種實作方式。","coming":false,"importance":"5"},{"code":"BasicGraph/basic_tree","article":"basic_tree","topic":"BasicGraph","chapter":"III","valid":true,"title":"樹","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicGraph/graph_concepts"],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/bipartite_graph","article":"bipartite_graph","topic":"BasicGraph","chapter":"III","valid":true,"title":"二分圖","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicGraph/graph_concepts"],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/dfs_order","article":"dfs_order","topic":"BasicGraph","chapter":"III","valid":false,"title":"樹壓平","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/graph_concepts","article":"graph_concepts","topic":"BasicGraph","chapter":"III","valid":true,"title":"圖論基礎","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicAlgorithm/searching","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","AlgorithmTechnique/bfs","AlgorithmTechnique/dfs"],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/lca","article":"lca","topic":"BasicGraph","chapter":"III","valid":false,"title":"最低共同祖先","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/mst","article":"mst","topic":"BasicGraph","chapter":"III","valid":false,"title":"最小生成樹","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/shortest_path","article":"shortest_path","topic":"BasicGraph","chapter":"III","valid":false,"title":"最短路徑","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/topological_sort","article":"topological_sort","topic":"BasicGraph","chapter":"III","valid":true,"title":"拓撲排序","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicGraph/graph_concepts"],"description":"","coming":true,"importance":"5"},{"code":"BasicMath/basicalgo","article":"basicalgo","topic":"BasicMath","chapter":"III","valid":true,"title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/math_in_school"],"description":"模運算、同餘的概念、快速冪與質數篩法。","coming":false,"importance":"5"},{"code":"BasicMath/combinatorics","article":"combinatorics","topic":"BasicMath","chapter":"III","valid":false,"title":"基礎組合","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":0},{"code":"BasicMath/matrix","article":"matrix","topic":"BasicMath","chapter":"III","valid":false,"title":"什麼是矩陣","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":0},{"code":"BasicMath/number_theory","article":"number_theory","topic":"BasicMath","chapter":"III","valid":true,"title":"基礎數論","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicMath/basicalgo"],"description":"費馬小定理、歐拉函數、歐拉定理、模逆元與擴展歐幾里得演算法","coming":false,"importance":"5"},{"code":"DataStructure/dsu","article":"dsu","topic":"DataStructure","chapter":"III","valid":false,"title":"併查集","authors":[],"contributors":[],"prerequisites":[],"description":"一種用來維護「集合合併資訊」的資料結構。","coming":true,"importance":"5"},{"code":"DataStructure/monotonic_queue","article":"monotonic_queue","topic":"DataStructure","chapter":"III","valid":true,"title":"單調隊列","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicDataStructure/stack_queue_deque","BasicAlgorithm/sweep"],"description":"認識單調隊列的技巧以及這個技巧能解決的題目類型。","coming":false,"importance":"5"},{"code":"Example/subexample","article":"subexample","topic":"Example","chapter":null,"valid":true,"title":"subexample","authors":["example_author1","example_author2"],"contributors":["example_contributor1","example_contributor2"],"prerequisites":["example/example_dependency1","example/example_dependency2"],"description":"example description","coming":false,"importance":0},{"code":"Game/easy_game","article":"easy_game","topic":"Game","chapter":null,"valid":true,"title":"初探賽局","authors":["baluteshih"],"contributors":[],"prerequisites":["Game/intro"],"description":"介紹那些最簡單的賽局問題。","coming":true,"importance":"3"},{"code":"Game/intro","article":"intro","topic":"Game","chapter":null,"valid":true,"title":"賽局導論","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"description":"何謂演算法競賽中的賽局？","coming":true,"importance":0},{"code":"GreedyAlgorithm/greedy_with_ds","article":"greedy_with_ds","topic":"GreedyAlgorithm","chapter":"III","valid":true,"title":"貪心法 III","authors":["baluteshih"],"contributors":[],"prerequisites":["GreedyAlgorithm/unintuitive_greedy","BasicDataStructure/set_map","BasicAlgorithm/partial_sum","BasicAlgorithm/binary_search_answer"],"description":"了解基本的貪心演算法優化與包裝。","coming":false,"importance":"5"},{"code":"GreedyAlgorithm/intuitive_greedy","article":"intuitive_greedy","topic":"GreedyAlgorithm","chapter":"II","valid":true,"title":"貪心法 I","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/algorithm_numeric"],"description":"介紹最基本的「貪心演算法」想法。","coming":false,"importance":"5"},{"code":"GreedyAlgorithm/unintuitive_greedy","article":"unintuitive_greedy","topic":"GreedyAlgorithm","chapter":"III","valid":true,"title":"貪心法 II","authors":["baluteshih"],"contributors":[],"prerequisites":["GreedyAlgorithm/intuitive_greedy"],"description":"學會做出正確的貪心選擇、以及檢驗其正確性。","coming":false,"importance":"5"},{"code":"Guide/chapters","article":"chapters","topic":"Guide","chapter":"I","valid":true,"title":"章節與主題","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/learning"],"description":"介紹在我們的網站中「章節」和「主題」的意義何在。","coming":false,"importance":0},{"code":"Guide/importance","article":"importance","topic":"Guide","chapter":"I","valid":true,"title":"文章重要等級","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/chapters"],"description":"教大家每篇文章上的重要等級意義為何","coming":true,"importance":0},{"code":"Guide/language","article":"language","topic":"Guide","chapter":"I","valid":true,"title":"語法學習資源","authors":["abc864197532"],"contributors":[],"prerequisites":["Guide/learning"],"description":"我們的講義沒有教大家語法，因此我們在此提供一些學習資源。","coming":false,"importance":0},{"code":"Guide/learning","article":"learning","topic":"Guide","chapter":"I","valid":true,"title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"prerequisites":[],"description":"教你如何正確透過我們的網站學習。","coming":false,"importance":0},{"code":"Guide/math_symbol","article":"math_symbol","topic":"Guide","chapter":"I","valid":true,"title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"prerequisites":[],"description":"看不懂講義文章中的數學符號嗎？來這邊查查看！","coming":false,"importance":0},{"code":"Guide/problems","article":"problems","topic":"Guide","chapter":"I","valid":true,"title":"習題","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/learning"],"description":"如何正確服用我們講義中的習題。","coming":false,"importance":0},{"code":"Guide/qa","article":"qa","topic":"Guide","chapter":"I","valid":true,"title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"prerequisites":[],"description":"就是 Q&A。","coming":false,"importance":0},{"code":"ImplementationKnowledge/basic_knowledge","article":"basic_knowledge","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"prerequisites":["Introduction/online_judge"],"description":"在著手寫資訊競賽的程式之前，你一定得知道……","coming":false,"importance":"5"},{"code":"ImplementationKnowledge/compiler","article":"compiler","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"編譯器","authors":["WiwiHo"],"contributors":[],"prerequisites":[],"description":"寫程式也得認識一下程式是怎麼產生的。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/float_error","article":"float_error","topic":"ImplementationKnowledge","chapter":"III","valid":false,"title":"浮點數誤差","authors":[],"contributors":[],"prerequisites":[],"description":"你知道 0.1 + 0.2 不等於 0.3 嗎？","coming":true,"importance":"3"},{"code":"ImplementationKnowledge/input","article":"input","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/basic_knowledge"],"description":"那些常見的程式競賽輸入格式。","coming":false,"importance":"4"},{"code":"ImplementationKnowledge/reference","article":"reference","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"Reference","authors":["baluteshih"],"contributors":[],"prerequisites":[],"description":"好用的語法糖，又稱作「參考」。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/rngbased","article":"rngbased","topic":"ImplementationKnowledge","chapter":"III","valid":true,"title":"Range-based for loop","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/reference","BasicDataStructure/vector"],"description":"好用的語法糖，讓你的迴圈寫得更簡潔。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/structured_binding","article":"structured_binding","topic":"ImplementationKnowledge","chapter":"III","valid":true,"title":"Structured binding","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/variable_declare","ImplementationKnowledge/rngbased"],"description":"好用的語法糖，讓你不用再打出 `first` 和 `second`。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/variable","article":"variable","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/basic_knowledge","ImplementationKnowledge/reference","ImplementationKnowledge/compiler"],"description":"那些關於 C++ 變數宣告、和儲存方式的知識。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/variable_declare","article":"variable_declare","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"常用變數宣告方法","authors":["WiwiHo","baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/variable"],"description":"介紹一些在競賽程式中常使用的變數宣告方法。","coming":false,"importance":"3"},{"code":"ImplementationSkill/buglist","article":"buglist","topic":"ImplementationSkill","chapter":"II","valid":true,"title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/variable"],"description":"初學程式找不到 bug 嗎？來看看這些新手常犯的錯誤。","coming":false,"importance":"3"},{"code":"ImplementationSkill/debug","article":"debug","topic":"ImplementationSkill","chapter":null,"valid":true,"title":"Debug","authors":["nathanlee726"],"contributors":[],"prerequisites":["ImplementationSkill/buglist"],"description":"","coming":false,"importance":0},{"code":"ImplementationSkill/error_message","article":"error_message","topic":"ImplementationSkill","chapter":"II","valid":true,"title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/compiler"],"description":"編譯器噴一堆錯誤怎麼辦？我們教你怎麼看！","coming":false,"importance":"3"},{"code":"ImplementationSkill/pseudo_pointer","article":"pseudo_pointer","topic":"ImplementationSkill","chapter":"III","valid":true,"title":"偽指標","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicDataStructure/linked_list"],"description":"一種易於理解的指標實作方式。","coming":false,"importance":"3"},{"code":"Introduction/competitive_programming","article":"competitive_programming","topic":"Introduction","chapter":"I","valid":true,"title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"prerequisites":["Guide/learning"],"description":"資訊競賽到底是什麼？有趣在哪？又有什麼用呢？","coming":false,"importance":0},{"code":"Introduction/contests_type","article":"contests_type","topic":"Introduction","chapter":"I","valid":true,"title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"介紹各種資訊競賽的規則與他們的差異。","coming":false,"importance":"5"},{"code":"Introduction/online_judge","article":"online_judge","topic":"Introduction","chapter":"I","valid":true,"title":"線上評測系統","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"介紹常見的資訊競賽線上練習系統。","coming":false,"importance":"4"},{"code":"Introduction/resources","article":"resources","topic":"Introduction","chapter":"I","valid":true,"title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"介紹其他對學習競賽有幫助的優質學習資源。","coming":false,"importance":0},{"code":"Introduction/tactics","article":"tactics","topic":"Introduction","chapter":"III","valid":true,"title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"prerequisites":["Introduction/contests_type"],"description":"那些關於練習和準備比賽的策略。","coming":false,"importance":"3"},{"code":"Introduction/tw_contests","article":"tw_contests","topic":"Introduction","chapter":"I","valid":true,"title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/contests_type"],"description":"介紹在台灣可以參加的資訊競賽。","coming":false,"importance":"5"}],"topics":[{"code":"Guide","title":"網站簡介","contents":["Guide/learning","Guide/chapters","Guide/importance","Guide/problems","Guide/math_symbol","Guide/language","Guide/qa"],"description":"剛認識我們嗎？就讓我們來場自我介紹吧！"},{"code":"Introduction","title":"資訊競賽介紹","contents":["Introduction/competitive_programming","Introduction/contests_type","Introduction/tw_contests","Introduction/online_judge","Introduction/resources","Introduction/tactics"],"description":"對何謂「資訊競賽」還很陌生嗎？你一定要來了解看看！"},{"code":"ImplementationKnowledge","title":"實作知識","contents":["ImplementationKnowledge/basic_knowledge","ImplementationKnowledge/input","ImplementationKnowledge/reference","ImplementationKnowledge/compiler","ImplementationKnowledge/variable","ImplementationKnowledge/variable_declare","ImplementationKnowledge/rngbased","ImplementationKnowledge/structured_binding","ImplementationKnowledge/float_error"],"description":"那些對寫程式非常有幫助的工具。"},{"code":"ImplementationSkill","title":"實作技巧","contents":["ImplementationSkill/error_message","ImplementationSkill/buglist","ImplementationSkill/debug","ImplementationSkill/pseudo_pointer"],"description":"我們會教你如何把程式寫得好、寫得穩。"},{"code":"BasicAlgorithm","title":"基礎演算法","contents":["BasicAlgorithm/intro","BasicAlgorithm/complexity","BasicAlgorithm/sorting","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/enumerate","BasicAlgorithm/searching","BasicAlgorithm/math_in_school","BasicAlgorithm/recursion","BasicAlgorithm/partial_sum","BasicAlgorithm/sweep","BasicAlgorithm/two_pointers","BasicAlgorithm/binary_search_answer"],"description":"一切演算法的基礎，不可或缺的知識們。"},{"code":"BasicDataStructure","title":"基礎資料結構","contents":["BasicDataStructure/intro","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","BasicDataStructure/linked_list","BasicDataStructure/binary_tree","BasicDataStructure/heap","BasicDataStructure/set_map","BasicDataStructure/unordered","BasicDataStructure/iterator","BasicDataStructure/binary_tree_and_stack"],"description":"一切資料結構的基礎，不可或缺的知識們。"},{"code":"GreedyAlgorithm","title":"貪心演算法","contents":["GreedyAlgorithm/intuitive_greedy","GreedyAlgorithm/unintuitive_greedy","GreedyAlgorithm/greedy_with_ds"],"description":"了解貪心演算法的思路以及認識各種經典問題。"},{"code":"BasicMath","title":"基礎數學","contents":["BasicMath/basicalgo","BasicMath/number_theory","BasicMath/combinatorics","BasicMath/matrix"],"description":"認識那些在競賽程式中會遇到的基本數學問題。"},{"code":"AlgorithmTechnique","title":"演算法技巧","contents":["AlgorithmTechnique/dfs","AlgorithmTechnique/bfs","AlgorithmTechnique/discretization","AlgorithmTechnique/dc","AlgorithmTechnique/doubling"],"description":"在各種演算法中被廣泛使用的技巧。"},{"code":"BasicDynamicProgramming","title":"基礎動態規劃","contents":["BasicDynamicProgramming/concept","BasicDynamicProgramming/subproblem","BasicDynamicProgramming/top_down_and_bottom_up","BasicDynamicProgramming/state_and_transition","BasicDynamicProgramming/multidimensional","BasicDynamicProgramming/knapsack","BasicDynamicProgramming/rolling","BasicDynamicProgramming/structure","BasicDynamicProgramming/basic_optimization","BasicDynamicProgramming/range_dp","BasicDynamicProgramming/backtracking"],"description":"一步步帶你認識動態規劃概念、並了解基本的動態規劃設計與優化方法。"},{"code":"DataStructure","title":"資料結構","contents":["DataStructure/monotonic_queue","DataStructure/dsu"],"description":"認識演算法競賽中那些被廣泛用來解題的資料結構。"},{"code":"BasicGraph","title":"基礎圖論","contents":["BasicGraph/graph_concepts","BasicGraph/bipartite_graph","BasicGraph/basic_tree","BasicGraph/dfs_order","BasicGraph/topological_sort","BasicGraph/shortest_path","BasicGraph/mst","BasicGraph/lca"],"description":"認識圖論的基本術語以及那些經典問題。"}],"topicGroups":[{"single":true,"title":"","topics":["Guide"]},{"single":true,"title":"","topics":["Introduction"]},{"single":true,"title":"","topics":["ImplementationKnowledge"]},{"single":true,"title":"","topics":["ImplementationSkill"]},{"single":true,"title":"","topics":["BasicAlgorithm"]},{"single":true,"title":"","topics":["BasicDataStructure"]},{"single":true,"title":"","topics":["GreedyAlgorithm"]},{"single":true,"title":"","topics":["BasicMath"]},{"single":true,"title":"","topics":["AlgorithmTechnique"]},{"single":true,"title":"","topics":["BasicDynamicProgramming"]},{"single":true,"title":"","topics":["DataStructure"]},{"single":true,"title":"","topics":["BasicGraph"]}],"chapters":[{"code":"I","icon":"door","iconColor":"amber-600","description":"讓你認識什麼是資訊競賽，並簡單介紹在程式競賽你需要具備的基本知識、還有我們這個網站的用途。","number":"I","title":"初來乍到","contents":["Guide/learning","Guide/chapters","Guide/importance","Guide/problems","Guide/math_symbol","Guide/language","Guide/qa","Introduction/competitive_programming","Introduction/contests_type","Introduction/tw_contests","Introduction/online_judge","Introduction/resources"]},{"code":"II","icon":"sprout","iconColor":"lime-600","description":"帶你認識資訊競賽解題的基礎，並開始學習基本的資料結構與演算法。","number":"II","title":"新手上路","contents":["ImplementationKnowledge/basic_knowledge","ImplementationKnowledge/input","ImplementationKnowledge/reference","ImplementationKnowledge/compiler","ImplementationKnowledge/variable","ImplementationKnowledge/variable_declare","ImplementationSkill/error_message","ImplementationSkill/buglist","BasicAlgorithm/intro","BasicAlgorithm/complexity","BasicAlgorithm/sorting","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/enumerate","BasicAlgorithm/searching","BasicAlgorithm/math_in_school","GreedyAlgorithm/intuitive_greedy","BasicDataStructure/intro","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","BasicDataStructure/linked_list"]},{"code":"III","icon":"stairs","iconColor":"blue-400","description":"讓你了解設計資料結構與演算法的理念，並能正確的理解何謂「效率」以及增加效率的方式。","number":"III","title":"漸入佳境","contents":["Introduction/tactics","ImplementationKnowledge/rngbased","ImplementationKnowledge/structured_binding","ImplementationKnowledge/float_error","ImplementationSkill/pseudo_pointer","BasicAlgorithm/recursion","BasicAlgorithm/partial_sum","BasicAlgorithm/sweep","BasicAlgorithm/two_pointers","BasicAlgorithm/binary_search_answer","BasicDataStructure/binary_tree","BasicDataStructure/heap","BasicDataStructure/set_map","BasicDataStructure/unordered","BasicDataStructure/iterator","GreedyAlgorithm/unintuitive_greedy","GreedyAlgorithm/greedy_with_ds","BasicMath/basicalgo","BasicMath/number_theory","BasicMath/combinatorics","BasicMath/matrix","AlgorithmTechnique/dfs","AlgorithmTechnique/bfs","AlgorithmTechnique/discretization","AlgorithmTechnique/dc","AlgorithmTechnique/doubling","BasicDynamicProgramming/concept","BasicDynamicProgramming/subproblem","BasicDynamicProgramming/top_down_and_bottom_up","BasicDynamicProgramming/state_and_transition","BasicDynamicProgramming/multidimensional","BasicDynamicProgramming/knapsack","BasicDynamicProgramming/rolling","BasicDynamicProgramming/structure","DataStructure/monotonic_queue","DataStructure/dsu","BasicGraph/graph_concepts","BasicGraph/bipartite_graph","BasicGraph/basic_tree","BasicGraph/dfs_order","BasicGraph/topological_sort","BasicGraph/shortest_path","BasicGraph/mst","BasicGraph/lca"]}]},"content":[["guide/content/Example/subexample/subexample.mdx",{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    h5: \"h5\",\n    h6: \"h6\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Figure, Info, Problem, Proof, Refcode, Spoiler, Theorem, TheoremReference} = _components;\n  if (!Figure) _missingMdxReference(\"Figure\", true);\n  if (!Info) _missingMdxReference(\"Info\", true);\n  if (!Problem) _missingMdxReference(\"Problem\", true);\n  if (!Proof) _missingMdxReference(\"Proof\", true);\n  if (!Refcode) _missingMdxReference(\"Refcode\", true);\n  if (!Spoiler) _missingMdxReference(\"Spoiler\", true);\n  if (!Theorem) _missingMdxReference(\"Theorem\", true);\n  if (!TheoremReference) _missingMdxReference(\"TheoremReference\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"span\", {\n      class: \"bg-rose-500 text-white rounded-full px-2 font-medium\",\n      children: \"必學\"\n    }), \"\\n\", _jsx(\"span\", {\n      class: \"bg-orange-500 text-white rounded-full px-2 font-medium\",\n      children: \"重要\"\n    }), \"\\n\", _jsx(\"span\", {\n      class: \"bg-green-500 text-white rounded-full px-2 font-medium\",\n      children: \"實用\"\n    }), \"\\n\", _jsx(\"span\", {\n      class: \"bg-cyan-500 text-white rounded-full px-2 font-medium\",\n      children: \"罕見\"\n    }), \"\\n\", _jsx(\"span\", {\n      class: \"bg-slate-500 text-white rounded-full px-2 font-medium\",\n      children: \"博雅\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"等級\"\n          }), _jsx(_components.th, {\n            children: \"解釋\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(\"span\", {\n              class: \"bg-rose-500 text-white rounded-full px-2 font-medium text-nowrap\",\n              children: \"必學\"\n            })\n          }), _jsx(_components.td, {\n            children: \"該等級的文章被認為是非學不可的，如果沒有好好吸收該篇文章的內容，很可能會在競賽上遭受重挫！\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"重要\"\n          }), _jsx(_components.td, {\n            children: \"該等級的文章對競賽的學習非常重要，對於想打出好成績的讀者，這些是不可或缺的知識。通常建議讀者至少花點時間反思該篇文章的內容。\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"實用\"\n          }), _jsx(_components.td, {\n            children: \"該等級的文章不那麼必要，但非常有幫助。這些幫助包括但不限於增強競賽技巧的認知、亦或者是針對某些知識的深入理解。\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"罕見\"\n          }), _jsx(_components.td, {\n            children: \"該等級的文章重要程度不太高，通常是因為在競賽上的出沒頻率很低。如果讀者暫時沒有心力可以暫時知道其存在性即可。但會建議讀者有空花一些時間了解，以免在競賽上因為缺少類似的知識點而遭遇不測。\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"博雅\"\n          }), _jsx(_components.td, {\n            children: \"該等級的文章在競賽上的幫助甚微，也許在競賽上要拿到好成績完全不需要相關的知識。不過若讀者有興趣的話，可以多少逛一逛，也許能有意外的收穫、發現知識與知識之間的連結也說不定。\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"魯鎭的酒店的格局，是和別處不同的：都是當街一個曲尺形的大櫃臺，櫃裏面豫備着熱水，可以隨時溫酒。做工的人，傍午傍晚散了工，每每花四文銅錢，買一碗酒，——這是二十多年前的事，現在每碗要漲到十文，——靠櫃外站着，熱熱的喝了休息；倘肯多花一文，便可以買一碟鹽煮筍，或者茴香豆，做下酒物了，如果出到十幾文，那就能買一樣葷菜，但這些顧客，多是短衣幫，大抵沒有這樣闊綽。只有穿長衫的，纔踱進店面隔壁的房子裏，要酒要菜，慢慢地坐喝。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"小節\",\n      children: \"小節\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"魯鎭的酒店的格局，是和別處不同的：都是當街一個曲尺形的大櫃臺，櫃裏面豫備着熱水，可以隨時溫酒。做工的人，傍午傍晚散了工，每每花四文銅錢，買一碗酒，——這是二十多年前的事，現在每碗要漲到十文，——靠櫃外站着，熱熱的喝了休息；倘肯多花一文，便可以買一碟鹽煮筍，或者茴香豆，做下酒物了，如果出到十幾文，那就能買一樣葷菜，但這些顧客，多是短衣幫，大抵沒有這樣闊綽。只有穿長衫的，纔踱進店面隔壁的房子裏，要酒要菜，慢慢地坐喝。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"小節-小小節\",\n      children: \"小小節\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"魯鎭的酒店的格局，是和別處不同的：都是當街一個曲尺形的大櫃臺，櫃裏面豫備着熱水，可以隨時溫酒。做工的人，傍午傍晚散了工，每每花四文銅錢，買一碗酒，——這是二十多年前的事，現在每碗要漲到十文，——靠櫃外站着，熱熱的喝了休息；倘肯多花一文，便可以買一碟鹽煮筍，或者茴香豆，做下酒物了，如果出到十幾文，那就能買一樣葷菜，但這些顧客，多是短衣幫，大抵沒有這樣闊綽。只有穿長衫的，纔踱進店面隔壁的房子裏，要酒要菜，慢慢地坐喝。\"\n    }), \"\\n\", _jsx(_components.h4, {\n      refId: \"小節-小小節-四級標題\",\n      children: \"四級標題\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"魯鎭的酒店的格局，是和別處不同的：都是當街一個曲尺形的大櫃臺，櫃裏面豫備着熱水，可以隨時溫酒。做工的人，傍午傍晚散了工，每每花四文銅錢，買一碗酒，——這是二十多年前的事，現在每碗要漲到十文，——靠櫃外站着，熱熱的喝了休息；倘肯多花一文，便可以買一碟鹽煮筍，或者茴香豆，做下酒物了，如果出到十幾文，那就能買一樣葷菜，但這些顧客，多是短衣幫，大抵沒有這樣闊綽。只有穿長衫的，纔踱進店面隔壁的房子裏，要酒要菜，慢慢地坐喝。\"\n    }), \"\\n\", _jsx(_components.h5, {\n      refId: \"小節-小小節-四級標題-五級標題\",\n      children: \"五級標題\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"魯鎭的酒店的格局，是和別處不同的：都是當街一個曲尺形的大櫃臺，櫃裏面豫備着熱水，可以隨時溫酒。做工的人，傍午傍晚散了工，每每花四文銅錢，買一碗酒，——這是二十多年前的事，現在每碗要漲到十文，——靠櫃外站着，熱熱的喝了休息；倘肯多花一文，便可以買一碟鹽煮筍，或者茴香豆，做下酒物了，如果出到十幾文，那就能買一樣葷菜，但這些顧客，多是短衣幫，大抵沒有這樣闊綽。只有穿長衫的，纔踱進店面隔壁的房子裏，要酒要菜，慢慢地坐喝。\"\n    }), \"\\n\", _jsx(_components.h6, {\n      refId: \"小節-小小節-四級標題-五級標題-六級標題\",\n      children: \"六級標題\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"魯鎭的酒店的格局，是和別處不同的：都是當街一個曲尺形的大櫃臺，櫃裏面豫備着熱水，可以隨時溫酒。做工的人，傍午傍晚散了工，每每花四文銅錢，買一碗酒，——這是二十多年前的事，現在每碗要漲到十文，——靠櫃外站着，熱熱的喝了休息；倘肯多花一文，便可以買一碟鹽煮筍，或者茴香豆，做下酒物了，如果出到十幾文，那就能買一樣葷菜，但這些顧客，多是短衣幫，大抵沒有這樣闊綽。只有穿長衫的，纔踱進店面隔壁的房子裏，要酒要菜，慢慢地坐喝。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"題目\"\n    }), \"\\n\", _jsx(Problem, {\n      url: \"example.com\",\n      src: \"example contest Day1 C\",\n      name: \"example_problem\",\n      expanded: \"false\",\n      difficulty: \"?\",\n      descriptionMdx: \"guide/problems/ExampleSource/example_problem/description.mdx\",\n      importMdx: \"guide/problems/ExampleSource/example_problem/description.mdx\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"圖片（src 是從 ./figure 開始的相對路徑）\"\n    }), \"\\n\", _jsx(Figure, {\n      src: \"/files/content/Example/subexample/figure/example.png\",\n      width: \"123\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"程式碼（src 是從 ./refcode 開始的相對路徑）\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#include <bits/stdc++.h>\\n#include <bits/extc++.h>\\n\\n#define StarBurstStream ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\\n#define iter(a) a.begin(), a.end()\\n#define riter(a) a.rbegin(), a.rend()\\n#define lsort(a) sort(iter(a))\\n#define gsort(a) sort(riter(a))\\n#define pb(a) push_back(a)\\n#define eb(a) emplace_back(a)\\n#define pf(a) push_front(a)\\n#define ef(a) emplace_front(a)\\n#define pob pop_back()\\n#define pof pop_front()\\n#define mp make_pair\\n#define F first\\n#define S second\\n#define mt make_tuple\\n#define gt(t, i) get<i>(t)\\n#define topos(a) ((a) = (((a) % MOD + MOD) % MOD))\\n#define uni(a) a.resize(unique(iter(a)) - a.begin())\\n#define printv(a, b) {bool pvaspace=false; \\\\\\nfor(auto pva : a){ \\\\\\n    if(pvaspace) b << \\\" \\\"; \\\\\\n    pvaspace=true;\\\\\\n    b << pva;\\\\\\n}\\\\\\nb << \\\"\\\\n\\\";}\\n#define SZ(a) int(a.size())\\n\\nusing namespace std;\\nusing namespace __gnu_pbds;\\n\\ntypedef long long ll;\\ntypedef unsigned long long ull;\\n//typedef long double ld;\\n\\nusing pii = pair<int, int>;\\nusing pll = pair<ll, ll>;\\n//using pdd = pair<ld, ld>;\\nusing tiii = tuple<int, int, int>;\\n\\nconst ll MOD = 1000000007;\\nconst ll MAX = 2147483647;\\n\\ntemplate<typename A, typename B>\\nostream& operator<<(ostream& o, pair<A, B> p){\\n    return o << '(' << p.F << ',' << p.S << ')';\\n}\\n\\nll ifloor(ll a, ll b){\\n    if(b < 0) a *= -1, b *= -1;\\n    if(a < 0) return (a - b + 1) / b;\\n    else return a / b;\\n}\\n\\nll iceil(ll a, ll b){\\n    if(b < 0) a *= -1, b *= -1;\\n    if(a > 0) return (a + b - 1) / b;\\n    else return a / b;\\n}\\n\\nusing ld = long double;\\nusing pdd = pair<ld, ld>;\\nusing Line = pair<pdd, pdd>;\\n#define X first\\n#define Y second\\nld eps = 1e-9;\\n\\npdd operator+(pdd a, pdd b)\\n{ return {a.X + b.X, a.Y + b.Y}; }\\npdd operator-(pdd a, pdd b)\\n{ return {a.X - b.X, a.Y - b.Y}; }\\npdd operator*(ld i, pdd v)\\n{ return {i * v.X, i * v.Y}; }\\npdd operator*(pdd v, ld i)\\n{ return {i * v.X, i * v.Y}; }\\npdd operator/(pdd v, ld i)\\n{ return {v.X / i, v.Y / i}; }\\nld dot(pdd a, pdd b)\\n{ return a.X * b.X + a.Y * b.Y; }\\nld cross(pdd a, pdd b)\\n{ return a.X * b.Y - a.Y * b.X; }\\nld abs2(pdd v)\\n{ return v.X * v.X + v.Y * v.Y; };\\nld abs(pdd v)\\n{ return sqrt(abs2(v)); };\\nint sgn(ld v){ return v > eps ? 1 : ( v < -eps ? -1 : 0); }\\nint ori(pdd a, pdd b, pdd c)\\n{ return sgn(cross(b - a, c - a)); }\\nbool collinearity(pdd a, pdd b, pdd c)\\n{ return ori(a, b, c) == 0; }\\nbool btw(pdd p, pdd a, pdd b)\\n{ return collinearity(p, a, b) && sgn(dot(a - p, b - p)) <= 0; }\\n\\nbool seg_intersect(pdd p1, pdd p2, pdd p3, pdd p4){\\n    if(btw(p1, p3, p4) || btw(p2, p3, p4) || btw(p3, p1, p2) || btw(p4, p1, p2))\\n        return true;\\n    return ori(p1, p2, p3) * ori(p1, p2, p4) < 0 &&\\n        ori(p3, p4, p1) * ori(p3, p4, p2) < 0;\",\n      startFrom: \"1\"\n    }), \"\\n\", _jsx(Info, {\n      type: \"success\"\n    }), \"\\n\", _jsx(Info, {\n      type: \"info\",\n      children: _jsx(_components.p, {\n        children: \"測試\"\n      })\n    }), \"\\n\", _jsx(Info, {\n      type: \"warning\"\n    }), \"\\n\", _jsx(Info, {\n      type: \"danger\"\n    }), \"\\n\", _jsx(Spoiler, {\n      type: \"spoiler\",\n      children: _jsx(_components.p, {\n        children: \"123123\"\n      })\n    }), \"\\n\", _jsx(Theorem, {\n      type: \"lemma\",\n      title: \"lemma title\",\n      refId: \"test\",\n      number: \"1\",\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"id\"\n        }), \" 可以是一個隨意的字串，不一定要是數字。\"]\n      })\n    }), \"\\n\", _jsx(Theorem, {\n      type: \"theorem\",\n      title: \"theorem title\",\n      number: \"1\"\n    }), \"\\n\", _jsx(Theorem, {\n      type: \"corollary\",\n      title: \"corollary title\",\n      number: \"1\"\n    }), \"\\n\", _jsx(Theorem, {\n      type: \"observation\",\n      title: \"observation title\",\n      number: \"1\"\n    }), \"\\n\", _jsx(Theorem, {\n      type: \"definition\",\n      number: \"1\",\n      children: _jsx(_components.p, {\n        children: \"沒有 title\"\n      })\n    }), \"\\n\", _jsx(Proof, {\n      expanded: \"false\",\n      children: _jsx(_components.p, {\n        children: \"Trivial!\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"quote\"\n      }), \"\\n\", _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"nested quote\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(TheoremReference, {\n      type: \"lemma\",\n      refId: \"test\",\n      number: \"1\",\n      title: \"lemma title\",\n      mode: \"default\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/\",\n        children: \"測試連結\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"list\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"list\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"nested list\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ordered list\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ordered list\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"魯鎭的酒店的格局，是和別處不同的：都是當街一個曲尺形的大櫃臺，櫃裏面豫備着熱水，可以隨時溫酒。做工的人，傍午傍晚散了工，每每花四文銅錢，買一碗酒，——這是二十多年前的事，現在每碗要漲到十文，——靠櫃外站着，熱熱的喝了休息；倘肯多花一文，便可以買一碟鹽煮筍，或者茴香豆，做下酒物了，如果出到十幾文，那就能買一樣葷菜，但這些顧客，多是短衣幫，大抵沒有這樣闊綽。只有穿長衫的，纔踱進店面隔壁的房子裏，要酒要菜，慢慢地坐喝。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我從十二歲起，便在鎭口的咸亨酒店裏當夥計，掌櫃說，樣子太傻，怕侍候不了長衫主顧，就在外面做點事罷。外面的短衣主顧，雖然容易說話，但嘮嘮叨叨纏夾不清的也很不少。他們往往要親眼看着黃酒從罎子裏舀出，看過壺子底裏有水沒有，又親看將壺子放在熱水裏，然後放心：在這嚴重監督下，羼水也很爲難。所以過了幾天，掌櫃又說我幹不了這事。幸虧薦頭的情面大，辭退不得，便改爲專管溫酒的一種無聊職務了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我從此便整天的站在櫃臺裏，專管我的職務。雖然沒有什麼失職，但總覺得有些單調，有些無聊。掌櫃是一副凶臉孔，主顧也沒有好聲氣，教人活潑不得；只有孔乙己到店，纔可以笑幾聲，所以至今還記得。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"孔乙己是站着喝酒而穿長衫的唯一的人。他身材很高大；青白臉色，皺紋間時常夾些傷痕；一部亂蓬蓬的花白的鬍子。穿的雖然是長衫，可是又髒又破，似乎十多年沒有補，也沒有洗。他對人說話，總是滿口之乎者也，教人半懂不懂的。因爲他姓孔，別人便從描紅紙上的「上大人孔乙己」這半懂不懂的話裏，替他取下一個綽號，叫作孔乙己。孔乙己一到店，所有喝酒的人便都看着他笑，有的叫道，「孔乙己，你臉上又添上新傷疤了！」他不回答，對櫃裏說，「溫兩碗酒，要一碟茴香豆。」便排出九文大錢。他們又故意的高聲嚷道，「你一定又偷了人家的東西了！」孔乙己睜大眼睛說，「你怎麼這樣憑空汚人清白……」「什麼清白？我前天親眼見你偷了何家的書，吊着打。」孔乙己便漲紅了臉，額上的青筋條條綻出，爭辯道，「竊書不能算偷……竊書！……讀書人的事，能算偷麼？」接連便是難懂的話，什麼「君子固窮」，什麼「者乎」之類，引得衆人都鬨笑起來：店內外充滿了快活的空氣。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"聽人家背地裏談論，孔乙己原來也讀過書，但終於沒有進學，又不會營生；於是愈過愈窮，弄到將要討飯了。幸而寫得一筆好字，便替人家鈔鈔書，換一碗飯吃。可惜他又有一樣壞脾氣，便是好喝懶做。坐不到幾天，便連人和書籍紙張筆硯，一齊失蹤。如是幾次，叫他鈔書的人也沒有了。孔乙己沒有法，便免不了偶然做些偷竊的事。但他在我們店裏，品行卻比別人都好，就是從不拖欠；雖然間或沒有現錢，暫時記在粉板上，但不出一月，定然還清，從粉板上拭去了孔乙己的名字。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"孔乙己喝過半碗酒，漲紅的臉色漸漸復了原，旁人便又問道，「孔乙己，你當眞認識字麼？」孔乙己看着問他的人，顯出不屑置辯的神氣。他們便接着說道，「你怎的連半個秀才也撈不到呢？」孔乙己立刻顯出頹唐不安模樣，臉上籠上了一層灰色，嘴裏說些話；這回可是全是之乎者也之類，一些不懂了。在這時候，衆人也都鬨笑起來：店內外充滿了快活的空氣。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在這些時候，我可以附和着笑，掌櫃是決不責備的。而且掌櫃見了孔乙己，也每每這樣問他，引人發笑。孔乙己自己知道不能和他們談天，便只好向孩子說話。有一回對我說道，「你讀過書麼？」我略略點一點頭。他說，「讀過書，……我便考你一考。茴香豆的茴字，怎樣寫的？」我想，討飯一樣的人，也配考我麼？便回過臉去，不再理會。孔乙己等了許久，很懇切的說道，「不能寫罷？……我教給你，記着！這些字應該記着。將來做掌櫃的時候，寫賬要用。」我暗想我和掌櫃的等級還很遠呢，而且我們掌櫃也從不將茴香豆上賬；又好笑，又不耐煩，嬾嬾的答他道，「誰要你教，不是草頭底下一個來回的回字麼？」孔乙己顯出極高興的樣子，將兩個指頭的長指甲敲着櫃臺，點頭說，「對呀對呀！……回字有四樣寫法，你知道麼？」我愈不耐煩了，努着嘴走遠。孔乙己剛用指甲蘸了酒，想在櫃上寫字，見我毫不熱心，便又歎一口氣，顯出極惋惜的樣子。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有幾回，鄰舍孩子聽得笑聲，也趕熱鬧，圍住了孔乙己。他便給他們茴香豆喫，一人一顆。孩子喫完豆，仍然不散，眼睛都望着碟子。孔乙己着了慌，伸開五指將碟子罩住，彎腰下去說道，「不多了，我已經不多了。」直起身又看一看豆，自己搖頭說，「不多不多！多乎哉？不多也。」於是這一羣孩子都在笑聲裏走散了。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}],["guide/problems/ExampleSource/example_problem/description.mdx",{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Figure, Refcode} = _components;\n  if (!Figure) _missingMdxReference(\"Figure\", true);\n  if (!Refcode) _missingMdxReference(\"Refcode\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"圖片（src 是從 ./figure 開始的相對路徑）\"\n    }), \"\\n\", _jsx(Figure, {\n      src: \"/files/problems/ExampleSource/example_problem/figure/example.png\",\n      width: \"123\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"程式碼（src 是從 ./refcode 開始的相對路徑）\"\n    }), \"\\n\", _jsx(Refcode, {\n      lang: \"cpp\",\n      lineno: \"true\",\n      code: \"#include <bits/stdc++.h>\\n#include <bits/extc++.h>\\n\\n#define StarBurstStream ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\\n#define iter(a) a.begin(), a.end()\\n#define riter(a) a.rbegin(), a.rend()\\n#define lsort(a) sort(iter(a))\\n#define gsort(a) sort(riter(a))\\n#define pb(a) push_back(a)\\n#define eb(a) emplace_back(a)\\n#define pf(a) push_front(a)\\n#define ef(a) emplace_front(a)\\n#define pob pop_back()\\n#define pof pop_front()\\n#define mp make_pair\\n#define F first\\n#define S second\\n#define mt make_tuple\\n#define gt(t, i) get<i>(t)\\n#define topos(a) ((a) = (((a) % MOD + MOD) % MOD))\\n#define uni(a) a.resize(unique(iter(a)) - a.begin())\\n#define printv(a, b) {bool pvaspace=false; \\\\\\nfor(auto pva : a){ \\\\\\n    if(pvaspace) b << \\\" \\\"; \\\\\\n    pvaspace=true;\\\\\\n    b << pva;\\\\\\n}\\\\\\nb << \\\"\\\\n\\\";}\\n#define SZ(a) int(a.size())\\n\\nusing namespace std;\\nusing namespace __gnu_pbds;\\n\\ntypedef long long ll;\\ntypedef unsigned long long ull;\\n//typedef long double ld;\\n\\nusing pii = pair<int, int>;\\nusing pll = pair<ll, ll>;\\n//using pdd = pair<ld, ld>;\\nusing tiii = tuple<int, int, int>;\\n\\nconst ll MOD = 1000000007;\\nconst ll MAX = 2147483647;\\n\\ntemplate<typename A, typename B>\\nostream& operator<<(ostream& o, pair<A, B> p){\\n    return o << '(' << p.F << ',' << p.S << ')';\\n}\\n\\nll ifloor(ll a, ll b){\\n    if(b < 0) a *= -1, b *= -1;\\n    if(a < 0) return (a - b + 1) / b;\\n    else return a / b;\\n}\\n\\nll iceil(ll a, ll b){\\n    if(b < 0) a *= -1, b *= -1;\\n    if(a > 0) return (a + b - 1) / b;\\n    else return a / b;\\n}\\n\\nusing ld = long double;\\nusing pdd = pair<ld, ld>;\\nusing Line = pair<pdd, pdd>;\\n#define X first\\n#define Y second\\nld eps = 1e-9;\\n\\npdd operator+(pdd a, pdd b)\\n{ return {a.X + b.X, a.Y + b.Y}; }\\npdd operator-(pdd a, pdd b)\\n{ return {a.X - b.X, a.Y - b.Y}; }\\npdd operator*(ld i, pdd v)\\n{ return {i * v.X, i * v.Y}; }\\npdd operator*(pdd v, ld i)\\n{ return {i * v.X, i * v.Y}; }\\npdd operator/(pdd v, ld i)\\n{ return {v.X / i, v.Y / i}; }\\nld dot(pdd a, pdd b)\\n{ return a.X * b.X + a.Y * b.Y; }\\nld cross(pdd a, pdd b)\\n{ return a.X * b.Y - a.Y * b.X; }\\nld abs2(pdd v)\\n{ return v.X * v.X + v.Y * v.Y; };\\nld abs(pdd v)\\n{ return sqrt(abs2(v)); };\\nint sgn(ld v){ return v > eps ? 1 : ( v < -eps ? -1 : 0); }\\nint ori(pdd a, pdd b, pdd c)\\n{ return sgn(cross(b - a, c - a)); }\\nbool collinearity(pdd a, pdd b, pdd c)\\n{ return ori(a, b, c) == 0; }\\nbool btw(pdd p, pdd a, pdd b)\\n{ return collinearity(p, a, b) && sgn(dot(a - p, b - p)) <= 0; }\\n\\nbool seg_intersect(pdd p1, pdd p2, pdd p3, pdd p4){\\n    if(btw(p1, p3, p4) || btw(p2, p3, p4) || btw(p3, p1, p2) || btw(p4, p1, p2))\\n        return true;\\n    return ori(p1, p2, p3) * ori(p1, p2, p4) < 0 &&\\n        ori(p3, p4, p1) * ori(p3, p4, p2) < 0;\",\n      startFrom: \"1\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}]],"sections":[{"text":"小節","depth":1,"code":"小節"},{"text":"小小節","depth":2,"code":"小節-小小節"},{"text":"四級標題","depth":3,"code":"小節-小小節-四級標題"},{"text":"五級標題","depth":4,"code":"小節-小小節-四級標題-五級標題"},{"text":"六級標題","depth":5,"code":"小節-小小節-四級標題-五級標題-六級標題"}],"gaId":"G-XCS0L6MZE3"}},"__N_SSG":true}