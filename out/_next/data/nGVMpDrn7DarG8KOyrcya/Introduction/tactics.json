{"pageProps":{"props":{"mdxPath":"guide/content/Introduction/tactics/tactics.mdx","code":"Introduction/tactics","structure":{"articles":[{"code":"AlgorithmAnalysis/proof","article":"proof","topic":"AlgorithmAnalysis","chapter":null,"valid":true,"title":"證明方法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/recursion"],"description":"一些基本證明方法","coming":false,"importance":0},{"code":"AlgorithmTechnique/bfs","article":"bfs","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"廣度優先搜尋","authors":["WiwiHo"],"contributors":[],"prerequisites":["AlgorithmTechnique/dfs"],"description":"類似於「水會不斷往外擴散」的搜尋方式，具有使用最少步數達成目標的特殊效果。","coming":false,"importance":"5"},{"code":"AlgorithmTechnique/dc","article":"dc","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"分治法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/sorting","BasicAlgorithm/recursion","BasicAlgorithm/two_pointers"],"description":"演算法設計的經典手法，將問題分成多個部分、分別處理後再嘗試湊出完整問題的答案。","coming":false,"importance":"5"},{"code":"AlgorithmTechnique/dfs","article":"dfs","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"深度優先搜尋","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/structured_binding","BasicAlgorithm/recursion","BasicAlgorithm/enumerate","BasicDataStructure/binary_tree"],"description":"用遞迴的方式找出所有可能性，包含暴力枚舉、剪枝、在迷宮中找到路徑、遍歷一棵樹。","coming":false,"importance":"5"},{"code":"AlgorithmTechnique/discretization","article":"discretization","topic":"AlgorithmTechnique","chapter":"III","valid":false,"title":"離散化","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":0},{"code":"AlgorithmTechnique/doubling","article":"doubling","topic":"AlgorithmTechnique","chapter":"III","valid":true,"title":"倍增法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicMath/basicalgo","AlgorithmTechnique/dc"],"description":"一種特殊的演算法設計手法。","coming":false,"importance":"4"},{"code":"BasicAlgorithm/algorithm_numeric","article":"algorithm_numeric","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"標準函式庫 ── <algorithm> 與 <numeric>","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/sorting"],"description":"那些 C++ 已經幫你寫好的功能。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/binary_search_answer","article":"binary_search_answer","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"對答案二分搜","authors":["WiwiHo"],"contributors":["rabhunter"],"prerequisites":["BasicAlgorithm/enumerate","BasicAlgorithm/searching","GreedyAlgorithm/intuitive_greedy"],"description":"在「答案上」執行二分搜尋法。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/complexity","article":"complexity","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"複雜度","authors":["baluteshih"],"contributors":["chengbilly92"],"prerequisites":["BasicAlgorithm/intro"],"description":"最主流用來評估程式效率的方式。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/enumerate","article":"enumerate","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"枚舉","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/complexity","BasicAlgorithm/algorithm_numeric"],"description":"如何將「列出所有可能性」寫成程式？有哪些常見的列舉方法？你知道即使是列舉可能性、也能進行演算法的優化嗎？","coming":false,"importance":"5"},{"code":"BasicAlgorithm/intro","article":"intro","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"介紹","authors":["double"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"何謂「演算法」？","coming":false,"importance":0},{"code":"BasicAlgorithm/math_in_school","article":"math_in_school","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"學校教的數學","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/searching","BasicAlgorithm/enumerate"],"description":"質數、因數、十分逼近法以及大數四則運算。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/partial_sum","article":"partial_sum","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"前綴和與差分","authors":["WiwiHo"],"contributors":["Fysty"],"prerequisites":["BasicAlgorithm/enumerate"],"description":"介紹前綴和與差分的用處以及他們的關聯。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/recursion","article":"recursion","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"遞迴","authors":["nathanlee726"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"description":"程式設計中最重要的概念之一。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/searching","article":"searching","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"搜尋","authors":["rabhunter","WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/algorithm_numeric"],"description":"何謂「二分搜尋法」？他的原理為何？有什麼內建的函式能使用？","coming":false,"importance":"5"},{"code":"BasicAlgorithm/sorting","article":"sorting","topic":"BasicAlgorithm","chapter":"II","valid":true,"title":"排序演算法","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/complexity"],"description":"介紹各種不同「排序」的方法。","coming":false,"importance":"3"},{"code":"BasicAlgorithm/sweep","article":"sweep","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"一維掃描線","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/rngbased","ImplementationKnowledge/structured_binding","BasicAlgorithm/enumerate","BasicAlgorithm/partial_sum"],"description":"圖像化的枚舉方法。","coming":false,"importance":"5"},{"code":"BasicAlgorithm/two_pointers","article":"two_pointers","topic":"BasicAlgorithm","chapter":"III","valid":true,"title":"雙指標","authors":["rabhunter"],"contributors":[],"prerequisites":["BasicAlgorithm/enumerate"],"description":"利用題目單調性來加速演算法的一種枚舉方法。","coming":false,"importance":"5"},{"code":"BasicDataStructure/binary_tree","article":"binary_tree","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"二元樹","authors":["建中大講義團隊"],"contributors":["8e7","WiwiHo"],"prerequisites":["BasicDataStructure/linked_list","ImplementationKnowledge/reference"],"description":"何謂「二元樹」？何謂「二元搜尋樹」？","coming":false,"importance":"4"},{"code":"BasicDataStructure/binary_tree_and_stack","article":"binary_tree_and_stack","topic":"BasicDataStructure","chapter":null,"valid":true,"title":"二元樹與 Stack","authors":["8e7"],"contributors":["建中大講義團隊","WiwiHo"],"prerequisites":["BasicDataStructure/binary_tree"],"description":"二元樹的進階應用、與 Stack 的關係。","coming":false,"importance":"3"},{"code":"BasicDataStructure/heap","article":"heap","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Heap","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicDataStructure/binary_tree"],"description":"介紹 Heap 和他相對應的內建函式。","coming":false,"importance":"5"},{"code":"BasicDataStructure/intro","article":"intro","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"介紹","authors":["8e7"],"contributors":["建中大講義團隊"],"prerequisites":["ImplementationKnowledge/basic_knowledge"],"description":"何謂「資料結構」？","coming":false,"importance":0},{"code":"BasicDataStructure/iterator","article":"iterator","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Iterator","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicDataStructure/intro"],"description":"C++ 內建容器的御用「指標」。","coming":false,"importance":"3"},{"code":"BasicDataStructure/linked_list","article":"linked_list","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"Linked List","authors":["建中大講義團隊","baluteshih"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/vector"],"description":"介紹 Linked List 和他相對應的內建函式。","coming":false,"importance":"3"},{"code":"BasicDataStructure/set_map","article":"set_map","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Set 與 Map","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/heap"],"description":"介紹 C++ 內建的 `set` 與 `map` 的使用方法。","coming":false,"importance":"5"},{"code":"BasicDataStructure/stack_queue_deque","article":"stack_queue_deque","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"Stack、Queue 與 Deque","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/vector"],"description":"介紹 Stack、Queue 與 Deque 和他們相對應的內建函式。","coming":false,"importance":"5"},{"code":"BasicDataStructure/unordered","article":"unordered","topic":"BasicDataStructure","chapter":"III","valid":true,"title":"Unordered Set 與 Unordered Map","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/set_map"],"description":"對雜湊的基礎認識，以及 C++ 內建的 `unordered_set` 與 `unordered_map` 的使用方法。","coming":false,"importance":"2"},{"code":"BasicDataStructure/vector","article":"vector","topic":"BasicDataStructure","chapter":"II","valid":true,"title":"動態的陣列","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicDataStructure/intro","BasicAlgorithm/algorithm_numeric"],"description":"介紹 C++ 內建的 `vector` 的使用方法。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/backtracking","article":"backtracking","topic":"BasicDynamicProgramming","chapter":null,"valid":true,"title":"DP 回溯","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/rolling"],"description":"如果真正構造出動態規劃的解答，而不是獲得單一的數值？","coming":true,"importance":"5"},{"code":"BasicDynamicProgramming/basic_optimization","article":"basic_optimization","topic":"BasicDynamicProgramming","chapter":null,"valid":true,"title":"DP 的基本優化","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/structure"],"description":"在動態規劃演算法上結合一些學過的技巧來加速演算法效率。","coming":true,"importance":"5"},{"code":"BasicDynamicProgramming/concept","article":"concept","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"基本概念","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"description":"用現實的例子引導出動態規劃的概念，故意先不給定義","coming":false,"importance":0},{"code":"BasicDynamicProgramming/knapsack","article":"knapsack","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"背包問題","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/multidimensional"],"description":"利用動態規劃中的一道經典問題來認識不同的動態規劃解題方法。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/multidimensional","article":"multidimensional","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"多個維度的 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/state_and_transition"],"description":"使用多個參數來表達動態規劃演算法的狀態。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/range_dp","article":"range_dp","topic":"BasicDynamicProgramming","chapter":null,"valid":true,"title":"區間 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/rolling"],"description":"使用區間做為狀態的動態規劃題目。","coming":true,"importance":"5"},{"code":"BasicDynamicProgramming/rolling","article":"rolling","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"滾動 DP","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/knapsack","BasicDataStructure/vector"],"description":"動態規劃中的一種既簡潔又能省記憶體的實作方式。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/state_and_transition","article":"state_and_transition","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"狀態與轉移","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/top_down_and_bottom_up","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/partial_sum"],"description":"動態規劃的常用術語和基本的解題思路。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/structure","article":"structure","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"動態規劃的必要元素","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/rolling"],"description":"複習一遍目前所學，了解設計動態規劃演算法利用到的題目特性為何。","coming":false,"importance":"3"},{"code":"BasicDynamicProgramming/subproblem","article":"subproblem","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"第一道動態規劃問題","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/recursion","BasicAlgorithm/complexity","BasicDynamicProgramming/concept"],"description":"從線性遞迴問題開始認識動態規劃。","coming":false,"importance":"5"},{"code":"BasicDynamicProgramming/top_down_and_bottom_up","article":"top_down_and_bottom_up","topic":"BasicDynamicProgramming","chapter":"III","valid":true,"title":"Top down 與 Bottom up","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicDynamicProgramming/subproblem","ImplementationSkill/buglist"],"description":"動態規劃的兩種實作方式。","coming":false,"importance":"5"},{"code":"BasicGraph/basic_tree","article":"basic_tree","topic":"BasicGraph","chapter":"III","valid":true,"title":"樹","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicGraph/graph_concepts"],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/bipartite_graph","article":"bipartite_graph","topic":"BasicGraph","chapter":"III","valid":true,"title":"二分圖","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicGraph/graph_concepts"],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/dfs_order","article":"dfs_order","topic":"BasicGraph","chapter":"III","valid":false,"title":"樹壓平","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/graph_concepts","article":"graph_concepts","topic":"BasicGraph","chapter":"III","valid":true,"title":"圖論基礎","authors":["建中大講義團隊"],"contributors":["8e7"],"prerequisites":["BasicAlgorithm/searching","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","AlgorithmTechnique/bfs","AlgorithmTechnique/dfs"],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/lca","article":"lca","topic":"BasicGraph","chapter":"III","valid":false,"title":"最低共同祖先","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/mst","article":"mst","topic":"BasicGraph","chapter":"III","valid":false,"title":"最小生成樹","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/shortest_path","article":"shortest_path","topic":"BasicGraph","chapter":"III","valid":false,"title":"最短路徑","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":"5"},{"code":"BasicGraph/topological_sort","article":"topological_sort","topic":"BasicGraph","chapter":"III","valid":true,"title":"拓撲排序","authors":["8e7","建中大講義團隊"],"contributors":[],"prerequisites":["BasicGraph/graph_concepts"],"description":"","coming":true,"importance":"5"},{"code":"BasicMath/basicalgo","article":"basicalgo","topic":"BasicMath","chapter":"III","valid":true,"title":"常用數學演算法","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicAlgorithm/math_in_school"],"description":"模運算、同餘的概念、快速冪與質數篩法。","coming":false,"importance":"5"},{"code":"BasicMath/combinatorics","article":"combinatorics","topic":"BasicMath","chapter":"III","valid":false,"title":"基礎組合","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":0},{"code":"BasicMath/matrix","article":"matrix","topic":"BasicMath","chapter":"III","valid":false,"title":"什麼是矩陣","authors":[],"contributors":[],"prerequisites":[],"description":"","coming":true,"importance":0},{"code":"BasicMath/number_theory","article":"number_theory","topic":"BasicMath","chapter":"III","valid":true,"title":"基礎數論","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicMath/basicalgo"],"description":"費馬小定理、歐拉函數、歐拉定理、模逆元與擴展歐幾里得演算法","coming":false,"importance":"5"},{"code":"DataStructure/dsu","article":"dsu","topic":"DataStructure","chapter":"III","valid":false,"title":"併查集","authors":[],"contributors":[],"prerequisites":[],"description":"一種用來維護「集合合併資訊」的資料結構。","coming":true,"importance":"5"},{"code":"DataStructure/monotonic_queue","article":"monotonic_queue","topic":"DataStructure","chapter":"III","valid":true,"title":"單調隊列","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicDataStructure/stack_queue_deque","BasicAlgorithm/sweep"],"description":"認識單調隊列的技巧以及這個技巧能解決的題目類型。","coming":false,"importance":"5"},{"code":"Example/subexample","article":"subexample","topic":"Example","chapter":null,"valid":true,"title":"subexample","authors":["example_author1","example_author2"],"contributors":["example_contributor1","example_contributor2"],"prerequisites":["example/example_dependency1","example/example_dependency2"],"description":"example description","coming":false,"importance":0},{"code":"Game/easy_game","article":"easy_game","topic":"Game","chapter":null,"valid":true,"title":"初探賽局","authors":["baluteshih"],"contributors":[],"prerequisites":["Game/intro"],"description":"介紹那些最簡單的賽局問題。","coming":true,"importance":"3"},{"code":"Game/intro","article":"intro","topic":"Game","chapter":null,"valid":true,"title":"賽局導論","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/intro"],"description":"何謂演算法競賽中的賽局？","coming":true,"importance":0},{"code":"GreedyAlgorithm/greedy_with_ds","article":"greedy_with_ds","topic":"GreedyAlgorithm","chapter":"III","valid":true,"title":"貪心法 III","authors":["baluteshih"],"contributors":[],"prerequisites":["GreedyAlgorithm/unintuitive_greedy","BasicDataStructure/set_map","BasicAlgorithm/partial_sum","BasicAlgorithm/binary_search_answer"],"description":"了解基本的貪心演算法優化與包裝。","coming":false,"importance":"5"},{"code":"GreedyAlgorithm/intuitive_greedy","article":"intuitive_greedy","topic":"GreedyAlgorithm","chapter":"II","valid":true,"title":"貪心法 I","authors":["baluteshih"],"contributors":[],"prerequisites":["BasicAlgorithm/algorithm_numeric"],"description":"介紹最基本的「貪心演算法」想法。","coming":false,"importance":"5"},{"code":"GreedyAlgorithm/unintuitive_greedy","article":"unintuitive_greedy","topic":"GreedyAlgorithm","chapter":"III","valid":true,"title":"貪心法 II","authors":["baluteshih"],"contributors":[],"prerequisites":["GreedyAlgorithm/intuitive_greedy"],"description":"學會做出正確的貪心選擇、以及檢驗其正確性。","coming":false,"importance":"5"},{"code":"Guide/chapters","article":"chapters","topic":"Guide","chapter":"I","valid":true,"title":"章節與主題","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/learning"],"description":"介紹在我們的網站中「章節」和「主題」的意義何在。","coming":false,"importance":0},{"code":"Guide/importance","article":"importance","topic":"Guide","chapter":"I","valid":true,"title":"文章重要等級","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/chapters"],"description":"教大家每篇文章上的重要等級意義為何","coming":true,"importance":0},{"code":"Guide/language","article":"language","topic":"Guide","chapter":"I","valid":true,"title":"語法學習資源","authors":["abc864197532"],"contributors":[],"prerequisites":["Guide/learning"],"description":"我們的講義沒有教大家語法，因此我們在此提供一些學習資源。","coming":false,"importance":0},{"code":"Guide/learning","article":"learning","topic":"Guide","chapter":"I","valid":true,"title":"服用方法","authors":["baluteshih","WiwiHo"],"contributors":[],"prerequisites":[],"description":"教你如何正確透過我們的網站學習。","coming":false,"importance":0},{"code":"Guide/math_symbol","article":"math_symbol","topic":"Guide","chapter":"I","valid":true,"title":"基本數學符號","authors":["WiwiHo"],"contributors":[],"prerequisites":[],"description":"看不懂講義文章中的數學符號嗎？來這邊查查看！","coming":false,"importance":0},{"code":"Guide/problems","article":"problems","topic":"Guide","chapter":"I","valid":true,"title":"習題","authors":["baluteshih"],"contributors":[],"prerequisites":["Guide/learning"],"description":"如何正確服用我們講義中的習題。","coming":false,"importance":0},{"code":"Guide/qa","article":"qa","topic":"Guide","chapter":"I","valid":true,"title":"NTUCPC Guide Q & A","authors":["臺灣大學程式解題社"],"contributors":[],"prerequisites":[],"description":"就是 Q&A。","coming":false,"importance":0},{"code":"ImplementationKnowledge/basic_knowledge","article":"basic_knowledge","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"基本常識","authors":["baluteshih"],"contributors":["dj4zo6u.6"],"prerequisites":["Introduction/online_judge"],"description":"在著手寫資訊競賽的程式之前，你一定得知道……","coming":false,"importance":"5"},{"code":"ImplementationKnowledge/compiler","article":"compiler","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"編譯器","authors":["WiwiHo"],"contributors":[],"prerequisites":[],"description":"寫程式也得認識一下程式是怎麼產生的。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/float_error","article":"float_error","topic":"ImplementationKnowledge","chapter":"III","valid":false,"title":"浮點數誤差","authors":[],"contributors":[],"prerequisites":[],"description":"你知道 0.1 + 0.2 不等於 0.3 嗎？","coming":true,"importance":"3"},{"code":"ImplementationKnowledge/input","article":"input","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"常見輸入類型","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/basic_knowledge"],"description":"那些常見的程式競賽輸入格式。","coming":false,"importance":"4"},{"code":"ImplementationKnowledge/reference","article":"reference","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"Reference","authors":["baluteshih"],"contributors":[],"prerequisites":[],"description":"好用的語法糖，又稱作「參考」。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/rngbased","article":"rngbased","topic":"ImplementationKnowledge","chapter":"III","valid":true,"title":"Range-based for loop","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/reference","BasicDataStructure/vector"],"description":"好用的語法糖，讓你的迴圈寫得更簡潔。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/structured_binding","article":"structured_binding","topic":"ImplementationKnowledge","chapter":"III","valid":true,"title":"Structured binding","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/variable_declare","ImplementationKnowledge/rngbased"],"description":"好用的語法糖，讓你不用再打出 `first` 和 `second`。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/variable","article":"variable","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"全域、區域變數","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/basic_knowledge","ImplementationKnowledge/reference","ImplementationKnowledge/compiler"],"description":"那些關於 C++ 變數宣告、和儲存方式的知識。","coming":false,"importance":"3"},{"code":"ImplementationKnowledge/variable_declare","article":"variable_declare","topic":"ImplementationKnowledge","chapter":"II","valid":true,"title":"常用變數宣告方法","authors":["WiwiHo","baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/variable"],"description":"介紹一些在競賽程式中常使用的變數宣告方法。","coming":false,"importance":"3"},{"code":"ImplementationSkill/buglist","article":"buglist","topic":"ImplementationSkill","chapter":"II","valid":true,"title":"常見錯誤列表","authors":["baluteshih"],"contributors":[],"prerequisites":["ImplementationKnowledge/variable"],"description":"初學程式找不到 bug 嗎？來看看這些新手常犯的錯誤。","coming":false,"importance":"3"},{"code":"ImplementationSkill/debug","article":"debug","topic":"ImplementationSkill","chapter":null,"valid":true,"title":"Debug","authors":["nathanlee726"],"contributors":[],"prerequisites":["ImplementationSkill/buglist"],"description":"","coming":false,"importance":0},{"code":"ImplementationSkill/error_message","article":"error_message","topic":"ImplementationSkill","chapter":"II","valid":true,"title":"如何看錯誤訊息","authors":["WiwiHo"],"contributors":[],"prerequisites":["ImplementationKnowledge/compiler"],"description":"編譯器噴一堆錯誤怎麼辦？我們教你怎麼看！","coming":false,"importance":"3"},{"code":"ImplementationSkill/pseudo_pointer","article":"pseudo_pointer","topic":"ImplementationSkill","chapter":"III","valid":true,"title":"偽指標","authors":["WiwiHo"],"contributors":[],"prerequisites":["BasicDataStructure/linked_list"],"description":"一種易於理解的指標實作方式。","coming":false,"importance":"3"},{"code":"Introduction/competitive_programming","article":"competitive_programming","topic":"Introduction","chapter":"I","valid":true,"title":"資訊競賽介紹","authors":["臺灣大學程式解題社"],"contributors":[],"prerequisites":["Guide/learning"],"description":"資訊競賽到底是什麼？有趣在哪？又有什麼用呢？","coming":false,"importance":0},{"code":"Introduction/contests_type","article":"contests_type","topic":"Introduction","chapter":"I","valid":true,"title":"比賽類型","authors":["abc864197532","baluteshih"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"介紹各種資訊競賽的規則與他們的差異。","coming":false,"importance":"5"},{"code":"Introduction/online_judge","article":"online_judge","topic":"Introduction","chapter":"I","valid":true,"title":"線上評測系統","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"介紹常見的資訊競賽線上練習系統。","coming":false,"importance":"4"},{"code":"Introduction/resources","article":"resources","topic":"Introduction","chapter":"I","valid":true,"title":"網路學習資源介紹","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/competitive_programming"],"description":"介紹其他對學習競賽有幫助的優質學習資源。","coming":false,"importance":0},{"code":"Introduction/tactics","article":"tactics","topic":"Introduction","chapter":"III","valid":true,"title":"比賽 + 練習策略","authors":["nathanlee726"],"contributors":[],"prerequisites":["Introduction/contests_type"],"description":"那些關於練習和準備比賽的策略。","coming":false,"importance":"3"},{"code":"Introduction/tw_contests","article":"tw_contests","topic":"Introduction","chapter":"I","valid":true,"title":"台灣資訊競賽介紹","authors":["abc864197532"],"contributors":[],"prerequisites":["Introduction/contests_type"],"description":"介紹在台灣可以參加的資訊競賽。","coming":false,"importance":"5"}],"topics":[{"code":"Guide","title":"網站簡介","contents":["Guide/learning","Guide/chapters","Guide/importance","Guide/problems","Guide/math_symbol","Guide/language","Guide/qa"],"description":"剛認識我們嗎？就讓我們來場自我介紹吧！"},{"code":"Introduction","title":"資訊競賽介紹","contents":["Introduction/competitive_programming","Introduction/contests_type","Introduction/tw_contests","Introduction/online_judge","Introduction/resources","Introduction/tactics"],"description":"對何謂「資訊競賽」還很陌生嗎？你一定要來了解看看！"},{"code":"ImplementationKnowledge","title":"實作知識","contents":["ImplementationKnowledge/basic_knowledge","ImplementationKnowledge/input","ImplementationKnowledge/reference","ImplementationKnowledge/compiler","ImplementationKnowledge/variable","ImplementationKnowledge/variable_declare","ImplementationKnowledge/rngbased","ImplementationKnowledge/structured_binding","ImplementationKnowledge/float_error"],"description":"那些對寫程式非常有幫助的工具。"},{"code":"ImplementationSkill","title":"實作技巧","contents":["ImplementationSkill/error_message","ImplementationSkill/buglist","ImplementationSkill/debug","ImplementationSkill/pseudo_pointer"],"description":"我們會教你如何把程式寫得好、寫得穩。"},{"code":"BasicAlgorithm","title":"基礎演算法","contents":["BasicAlgorithm/intro","BasicAlgorithm/complexity","BasicAlgorithm/sorting","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/enumerate","BasicAlgorithm/searching","BasicAlgorithm/math_in_school","BasicAlgorithm/recursion","BasicAlgorithm/partial_sum","BasicAlgorithm/sweep","BasicAlgorithm/two_pointers","BasicAlgorithm/binary_search_answer"],"description":"一切演算法的基礎，不可或缺的知識們。"},{"code":"BasicDataStructure","title":"基礎資料結構","contents":["BasicDataStructure/intro","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","BasicDataStructure/linked_list","BasicDataStructure/binary_tree","BasicDataStructure/heap","BasicDataStructure/set_map","BasicDataStructure/unordered","BasicDataStructure/iterator","BasicDataStructure/binary_tree_and_stack"],"description":"一切資料結構的基礎，不可或缺的知識們。"},{"code":"GreedyAlgorithm","title":"貪心演算法","contents":["GreedyAlgorithm/intuitive_greedy","GreedyAlgorithm/unintuitive_greedy","GreedyAlgorithm/greedy_with_ds"],"description":"了解貪心演算法的思路以及認識各種經典問題。"},{"code":"BasicMath","title":"基礎數學","contents":["BasicMath/basicalgo","BasicMath/number_theory","BasicMath/combinatorics","BasicMath/matrix"],"description":"認識那些在競賽程式中會遇到的基本數學問題。"},{"code":"AlgorithmTechnique","title":"演算法技巧","contents":["AlgorithmTechnique/dfs","AlgorithmTechnique/bfs","AlgorithmTechnique/discretization","AlgorithmTechnique/dc","AlgorithmTechnique/doubling"],"description":"在各種演算法中被廣泛使用的技巧。"},{"code":"BasicDynamicProgramming","title":"基礎動態規劃","contents":["BasicDynamicProgramming/concept","BasicDynamicProgramming/subproblem","BasicDynamicProgramming/top_down_and_bottom_up","BasicDynamicProgramming/state_and_transition","BasicDynamicProgramming/multidimensional","BasicDynamicProgramming/knapsack","BasicDynamicProgramming/rolling","BasicDynamicProgramming/structure","BasicDynamicProgramming/basic_optimization","BasicDynamicProgramming/range_dp","BasicDynamicProgramming/backtracking"],"description":"一步步帶你認識動態規劃概念、並了解基本的動態規劃設計與優化方法。"},{"code":"DataStructure","title":"資料結構","contents":["DataStructure/monotonic_queue","DataStructure/dsu"],"description":"認識演算法競賽中那些被廣泛用來解題的資料結構。"},{"code":"BasicGraph","title":"基礎圖論","contents":["BasicGraph/graph_concepts","BasicGraph/bipartite_graph","BasicGraph/basic_tree","BasicGraph/dfs_order","BasicGraph/topological_sort","BasicGraph/shortest_path","BasicGraph/mst","BasicGraph/lca"],"description":"認識圖論的基本術語以及那些經典問題。"}],"topicGroups":[{"single":true,"title":"","topics":["Guide"]},{"single":true,"title":"","topics":["Introduction"]},{"single":true,"title":"","topics":["ImplementationKnowledge"]},{"single":true,"title":"","topics":["ImplementationSkill"]},{"single":true,"title":"","topics":["BasicAlgorithm"]},{"single":true,"title":"","topics":["BasicDataStructure"]},{"single":true,"title":"","topics":["GreedyAlgorithm"]},{"single":true,"title":"","topics":["BasicMath"]},{"single":true,"title":"","topics":["AlgorithmTechnique"]},{"single":true,"title":"","topics":["BasicDynamicProgramming"]},{"single":true,"title":"","topics":["DataStructure"]},{"single":true,"title":"","topics":["BasicGraph"]}],"chapters":[{"code":"I","icon":"door","iconColor":"amber-600","description":"讓你認識什麼是資訊競賽，並簡單介紹在程式競賽你需要具備的基本知識、還有我們這個網站的用途。","number":"I","title":"初來乍到","contents":["Guide/learning","Guide/chapters","Guide/importance","Guide/problems","Guide/math_symbol","Guide/language","Guide/qa","Introduction/competitive_programming","Introduction/contests_type","Introduction/tw_contests","Introduction/online_judge","Introduction/resources"]},{"code":"II","icon":"sprout","iconColor":"lime-600","description":"帶你認識資訊競賽解題的基礎，並開始學習基本的資料結構與演算法。","number":"II","title":"新手上路","contents":["ImplementationKnowledge/basic_knowledge","ImplementationKnowledge/input","ImplementationKnowledge/reference","ImplementationKnowledge/compiler","ImplementationKnowledge/variable","ImplementationKnowledge/variable_declare","ImplementationSkill/error_message","ImplementationSkill/buglist","BasicAlgorithm/intro","BasicAlgorithm/complexity","BasicAlgorithm/sorting","BasicAlgorithm/algorithm_numeric","BasicAlgorithm/enumerate","BasicAlgorithm/searching","BasicAlgorithm/math_in_school","GreedyAlgorithm/intuitive_greedy","BasicDataStructure/intro","BasicDataStructure/vector","BasicDataStructure/stack_queue_deque","BasicDataStructure/linked_list"]},{"code":"III","icon":"stairs","iconColor":"blue-400","description":"讓你了解設計資料結構與演算法的理念，並能正確的理解何謂「效率」以及增加效率的方式。","number":"III","title":"漸入佳境","contents":["Introduction/tactics","ImplementationKnowledge/rngbased","ImplementationKnowledge/structured_binding","ImplementationKnowledge/float_error","ImplementationSkill/pseudo_pointer","BasicAlgorithm/recursion","BasicAlgorithm/partial_sum","BasicAlgorithm/sweep","BasicAlgorithm/two_pointers","BasicAlgorithm/binary_search_answer","BasicDataStructure/binary_tree","BasicDataStructure/heap","BasicDataStructure/set_map","BasicDataStructure/unordered","BasicDataStructure/iterator","GreedyAlgorithm/unintuitive_greedy","GreedyAlgorithm/greedy_with_ds","BasicMath/basicalgo","BasicMath/number_theory","BasicMath/combinatorics","BasicMath/matrix","AlgorithmTechnique/dfs","AlgorithmTechnique/bfs","AlgorithmTechnique/discretization","AlgorithmTechnique/dc","AlgorithmTechnique/doubling","BasicDynamicProgramming/concept","BasicDynamicProgramming/subproblem","BasicDynamicProgramming/top_down_and_bottom_up","BasicDynamicProgramming/state_and_transition","BasicDynamicProgramming/multidimensional","BasicDynamicProgramming/knapsack","BasicDynamicProgramming/rolling","BasicDynamicProgramming/structure","DataStructure/monotonic_queue","DataStructure/dsu","BasicGraph/graph_concepts","BasicGraph/bipartite_graph","BasicGraph/basic_tree","BasicGraph/dfs_order","BasicGraph/topological_sort","BasicGraph/shortest_path","BasicGraph/mst","BasicGraph/lca"]}]},"content":[["guide/content/Introduction/tactics/tactics.mdx",{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"程式競賽考驗選手們在一定時間內對一些演算法相關的題目作答，這除了考驗選手們本身的演算法知識及設計程式的能力、這類的硬實力以外。同時也會需要選手們好好分配時間、決定策略，以能夠在時間限制內最大化在各個題目中拿到的分數。因此，為了準備程式競賽，我們會在各個方面培養自己的能力。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"刷題\",\n      children: \"刷題\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"學習演算法與資料結構固然重要，不過這就如同在培養自己的基本功，若是遇到題目時不知道如何使用這些演算法，那麼空有一身功夫也沒辦法使用，因此除了平時花時間學習演算法知識外，也要花時間寫題目練習，才能知道如何運用這些知識。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"刷題-練習思考\",\n      children: \"練習思考\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"刷題的主要一個目的，是在練習去思考將問題轉換成一個更好理解的形式，接著再使用自己學過的演算法及資料結構將其解決。程式競賽的題目通常沒辦法透過一眼就看出來它需要用什麼演算法去解決。因此，「將問題轉換成一個更好理解的形式」這個步驟，是解決一個問題時最重要的關鍵。透過大量的刷題，我們便能夠有效的訓練自己思考題目的能力。不僅如此，程式競賽的題目其實很常會用到相似的技巧，尤其是相同領域的題目很容易會有類似的解題思路。舉例而言，動態規劃這類型的題目，在遇到需要優化轉移複雜度的狀況時，大分都會用到單調隊列、斜率優化常見的優化技巧。因此，刷題能夠幫助我們盡早熟悉一些常見的技巧及思路，協助我們在正式比賽中更輕鬆的把題目解出來。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"刷題-練習實作\",\n      children: \"練習實作\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"除此之外，刷題的目的也在於訓練自己的實作能力。程式競賽與其他學科競賽差別最大的點在於，在想出題目的作法以後，需要透過撰寫程式碼將它實作出來，而不是把作法寫下來就行，因此，培養實作的能力是很重要的。透過刷題訓練，我們能夠培養自己的實作經驗，在遇到特定的功能如某種演算法或資料結構時，便可以熟練地將它實作出來。多多刷題練習實作，也能讓我們提早遇到一些需要 debug 的情境，修正自己在實作上會出現的問題，以免這樣的情況在正式比賽中發生。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      refId: \"模擬比賽 (Virtual)\",\n      children: \"模擬比賽 (Virtual)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Virtual 通常是指找一場實際辦過的比賽，在還完全沒有看過題目下的情況下開始計時，在有時間限制的情況下拿到盡量多的分數。通常在 virtual 時我們不會像刷題那樣看一題寫一題，而是挑選最適合的題目去寫，如果卡住的話就跳下一題寫，簡單來講，就是在模擬一場實際的比賽。那前面提到盡量多的分數是指什麼意思呢，這就與我們接下來要講的主題「子題」有關了。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"模擬比賽 (Virtual)-子題\",\n      children: \"子題\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"子題對程式競賽的新手而言其實是很友善的東西，不過多數人在剛開始打程式競賽時對子題都非常的不熟悉。這是因為平常在刷題時，我們都會以想出正解為目標。不過在比賽中，因為會有子題，使我們不一定要以想出正解為目標。一個題目的子題通常會是將題目的測資範圍加上一些限制，使得題目變成一個比較簡單的版本。舉例來說，一個題目可能本來的某個變數限制是 $1 \\\\leq N \\\\leq 10^5$，出題者便能設計一個子題，加上限制 $1 \\\\leq N \\\\leq 1000$，使這個子題的難度比原本的題目簡單，我們用 $O(N ^ 2)$ 的演算法便能拿到這個子題的分數。子題在一場 OI 制的程式競賽非常重要，參賽者即使來不及想出題目的作法並實作，也能夠透過子題來拿到一部分分數。對於新手來說，即使是在一場比較困難的比賽，也能透過解出子題來培養經驗。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有些時候，子題也會成為題目的提示。舉例來說，一個題目的內容可能會與 $N$ 個正整數有關，而出題者可以設計一個子題，加上「這 $N$ 個正整數會是 $1$ 到 $N$  之間的每個整數各出現一次」這條限制，來提示做題者可以先往這種情況思考。因此，利用子題來協助自己做題也是非常重要的一件事。透過 Virtual 比賽的練習，我們便能夠模擬在正式比賽中遇到子題的情況，練習去寫子題、或是利用子題。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      refId: \"模擬比賽 (Virtual)-時間分配\",\n      children: \"時間分配\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"時間分配則是在比較熟悉程式競賽後會需要注意的事情，通常在自己進步到一定程度後，便會在正式比賽遇到一種情況。就是大部分的題目都是自己有機會做出來的，卻不知道該從哪一題開始寫，在選擇了一題以後，又會擔心自己會不會來不及做其他題目。這種時候，我們會需要幫自己做一些時間分配，像是在選擇做某一題時限制作題時間，來避免自己在一題花太多時間。常見的時間分配方式有：在比賽開始時先花半小時讀題本、比賽一半的時間拿來寫部份分，剩下一半用來想完整題目的解等等。讀者可以在 Virtual 比賽時摸索適合自己的時間分配方式，制定一個能讓自己適當分配時間給每個題目的策略。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"另外，剛制定完時間分配的策略後，很難馬上在下一場比賽就完美的照著策略執行。不需要太過灰心，這種比賽才能學習到的事情往往是要靠經驗來累積的。讀者可以透過每一場比賽去更熟悉自己時間分配的策略，同時，也隨時對策略做調整。這樣，便能在一場場比賽中不斷進步。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}]],"sections":[{"text":"刷題","depth":1,"code":"刷題"},{"text":"練習思考","depth":2,"code":"刷題-練習思考"},{"text":"練習實作","depth":2,"code":"刷題-練習實作"},{"text":"模擬比賽 (Virtual)","depth":1,"code":"模擬比賽 (Virtual)"},{"text":"子題","depth":2,"code":"模擬比賽 (Virtual)-子題"},{"text":"時間分配","depth":2,"code":"模擬比賽 (Virtual)-時間分配"}],"gaId":"G-XCS0L6MZE3"}},"__N_SSG":true}